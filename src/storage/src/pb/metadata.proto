syntax = "proto3";
package metadata;

message Metadata {
  uint32 version = 1;
  uint64 log_id = 2;
  string table_name = 3;
  Schema schema = 4;
  repeated Level levels = 5;
  Stats stats = 6;
  Options options = 7;
}

message Schema {
  repeated Field fields = 1;
}

message Field {
  string name = 1;
  DataType data_type = 2;
  bool is_nullable = 3;
}

enum DataType {
  DATA_TYPE_NONE = 0;
  DATA_TYPE_STRING = 1;
  DATA_TYPE_INT8 = 2;
  DATA_TYPE_INT16 = 3;
  DATA_TYPE_INT32 = 4;
  DATA_TYPE_INT64 = 5;
  DATA_TYPE_DECIMAL = 6;
  DATA_TYPE_BOOLEAN = 7;
  DATA_TYPE_TIMESTAMP = 8;
}

message Level {
  uint64 part_id = 1;
  repeated Part parts = 2;
}

message Part {
  uint64 id = 1;
  uint64 size_bytes = 2;
  uint64 values = 3;
  repeated KeyValue min = 4;
  repeated KeyValue max = 5;
}

message KeyValue {
  optional uint32 int8 = 1;
  optional uint32 int16 = 2;
  optional uint32 int32 = 3;
  optional uint64 int64 = 4;
  optional string string = 5;
  optional uint64 timestamp = 6;
}

message Stats {
  uint64 resident_bytes = 1;
  uint64 on_disk_bytes = 2;
  uint64 logged_bytes = 3;
  uint64 written_bytes = 4;
  uint64 read_bytes = 5;
  uint64 space_amp = 6;
  uint64 write_amp = 7;
}

message Options {
  uint64 index_cols = 1;
  bool is_replacing = 2;
  uint64 levels = 3;
  uint64 l0_max_parts = 4;
  uint64 l1_max_size_bytes = 5;
  uint64 level_size_multiplier = 6;
  uint64 max_log_length_bytes = 7;
  uint64 merge_max_l1_part_size_bytes = 8;
  uint64 merge_part_size_multiplier = 9;
  optional uint64 merge_data_page_size_limit_bytes = 10;
  uint64 merge_row_group_values_limit = 11;
  uint64 merge_array_size = 12;
  uint64 merge_chunk_size = 13;
  uint64 merge_array_page_size = 14;
  uint64 merge_max_page_size = 15;
}