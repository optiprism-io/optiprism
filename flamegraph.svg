<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="82964"><g><title>optiprism`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (71 samples, 0.09%)</title><rect x="0.0157%" y="565" width="0.0856%" height="15" fill="rgb(227,0,7)" fg:x="13" fg:w="71"/><text x="0.2657%" y="575.50"></text></g><g><title>optiprism`alloc::vec::Vec&lt;T,A&gt;::push (72 samples, 0.09%)</title><rect x="0.1012%" y="565" width="0.0868%" height="15" fill="rgb(217,0,24)" fg:x="84" fg:w="72"/><text x="0.3512%" y="575.50"></text></g><g><title>optiprism`chrono::naive::datetime::NaiveDateTime::timestamp_nanos_opt (24 samples, 0.03%)</title><rect x="0.1916%" y="565" width="0.0289%" height="15" fill="rgb(221,193,54)" fg:x="159" fg:w="24"/><text x="0.4416%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`close (33 samples, 0.04%)</title><rect x="0.3013%" y="549" width="0.0398%" height="15" fill="rgb(248,212,6)" fg:x="250" fg:w="33"/><text x="0.5513%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (271 samples, 0.33%)</title><rect x="0.3411%" y="549" width="0.3266%" height="15" fill="rgb(208,68,35)" fg:x="283" fg:w="271"/><text x="0.5911%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (119 samples, 0.14%)</title><rect x="0.6678%" y="549" width="0.1434%" height="15" fill="rgb(232,128,0)" fg:x="554" fg:w="119"/><text x="0.9178%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (17 samples, 0.02%)</title><rect x="0.8112%" y="549" width="0.0205%" height="15" fill="rgb(207,160,47)" fg:x="673" fg:w="17"/><text x="1.0612%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (319 samples, 0.38%)</title><rect x="0.8317%" y="549" width="0.3845%" height="15" fill="rgb(228,23,34)" fg:x="690" fg:w="319"/><text x="1.0817%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_small (12 samples, 0.01%)</title><rect x="1.2162%" y="549" width="0.0145%" height="15" fill="rgb(218,30,26)" fg:x="1009" fg:w="12"/><text x="1.4662%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.01%)</title><rect x="1.2307%" y="549" width="0.0108%" height="15" fill="rgb(220,122,19)" fg:x="1021" fg:w="9"/><text x="1.4807%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (518 samples, 0.62%)</title><rect x="1.2415%" y="549" width="0.6244%" height="15" fill="rgb(250,228,42)" fg:x="1030" fg:w="518"/><text x="1.4915%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1,695 samples, 2.04%)</title><rect x="1.8719%" y="549" width="2.0431%" height="15" fill="rgb(240,193,28)" fg:x="1553" fg:w="1695"/><text x="2.1219%" y="559.50">l..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (80 samples, 0.10%)</title><rect x="3.9150%" y="549" width="0.0964%" height="15" fill="rgb(216,20,37)" fg:x="3248" fg:w="80"/><text x="4.1650%" y="559.50"></text></g><g><title>optiprism`&lt;alloc::string::String as core::clone::Clone&gt;::clone (102 samples, 0.12%)</title><rect x="4.0114%" y="549" width="0.1229%" height="15" fill="rgb(206,188,39)" fg:x="3328" fg:w="102"/><text x="4.2614%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (202 samples, 0.24%)</title><rect x="4.4646%" y="533" width="0.2435%" height="15" fill="rgb(217,207,13)" fg:x="3704" fg:w="202"/><text x="4.7146%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (421 samples, 0.51%)</title><rect x="4.7129%" y="533" width="0.5074%" height="15" fill="rgb(231,73,38)" fg:x="3910" fg:w="421"/><text x="4.9629%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.04%)</title><rect x="5.2276%" y="533" width="0.0410%" height="15" fill="rgb(225,20,46)" fg:x="4337" fg:w="34"/><text x="5.4776%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (16 samples, 0.02%)</title><rect x="5.2493%" y="517" width="0.0193%" height="15" fill="rgb(210,31,41)" fg:x="4355" fg:w="16"/><text x="5.4993%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (240 samples, 0.29%)</title><rect x="5.2686%" y="533" width="0.2893%" height="15" fill="rgb(221,200,47)" fg:x="4371" fg:w="240"/><text x="5.5186%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (83 samples, 0.10%)</title><rect x="5.7169%" y="517" width="0.1000%" height="15" fill="rgb(226,26,5)" fg:x="4743" fg:w="83"/><text x="5.9669%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (78 samples, 0.09%)</title><rect x="5.7230%" y="501" width="0.0940%" height="15" fill="rgb(249,33,26)" fg:x="4748" fg:w="78"/><text x="5.9730%" y="511.50"></text></g><g><title>optiprism`&lt;alloc::string::String as core::clone::Clone&gt;::clone (216 samples, 0.26%)</title><rect x="5.5578%" y="533" width="0.2604%" height="15" fill="rgb(235,183,28)" fg:x="4611" fg:w="216"/><text x="5.8078%" y="543.50"></text></g><g><title>optiprism`DYLD-STUB$$malloc (35 samples, 0.04%)</title><rect x="5.8182%" y="533" width="0.0422%" height="15" fill="rgb(221,5,38)" fg:x="4827" fg:w="35"/><text x="6.0682%" y="543.50"></text></g><g><title>optiprism`DYLD-STUB$$memcpy (17 samples, 0.02%)</title><rect x="5.8604%" y="533" width="0.0205%" height="15" fill="rgb(247,18,42)" fg:x="4862" fg:w="17"/><text x="6.1104%" y="543.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,518 samples, 1.83%)</title><rect x="4.1343%" y="549" width="1.8297%" height="15" fill="rgb(241,131,45)" fg:x="3430" fg:w="1518"/><text x="4.3843%" y="559.50">o..</text></g><g><title>optiprism`__rdl_alloc (69 samples, 0.08%)</title><rect x="5.8809%" y="533" width="0.0832%" height="15" fill="rgb(249,31,29)" fg:x="4879" fg:w="69"/><text x="6.1309%" y="543.50"></text></g><g><title>optiprism`&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;chrono::duration::Duration&gt;&gt;::add (42 samples, 0.05%)</title><rect x="5.9809%" y="549" width="0.0506%" height="15" fill="rgb(225,111,53)" fg:x="4962" fg:w="42"/><text x="6.2309%" y="559.50"></text></g><g><title>optiprism`chrono::naive::datetime::NaiveDateTime::checked_add_signed (39 samples, 0.05%)</title><rect x="5.9845%" y="533" width="0.0470%" height="15" fill="rgb(238,160,17)" fg:x="4965" fg:w="39"/><text x="6.2345%" y="543.50"></text></g><g><title>optiprism`chrono::naive::time::NaiveTime::overflowing_add_signed (32 samples, 0.04%)</title><rect x="5.9930%" y="517" width="0.0386%" height="15" fill="rgb(214,148,48)" fg:x="4972" fg:w="32"/><text x="6.2430%" y="527.50"></text></g><g><title>optiprism`DYLD-STUB$$free (79 samples, 0.10%)</title><rect x="6.0556%" y="549" width="0.0952%" height="15" fill="rgb(232,36,49)" fg:x="5024" fg:w="79"/><text x="6.3056%" y="559.50"></text></g><g><title>optiprism`DYLD-STUB$$malloc (47 samples, 0.06%)</title><rect x="6.1509%" y="549" width="0.0567%" height="15" fill="rgb(209,103,24)" fg:x="5103" fg:w="47"/><text x="6.4009%" y="559.50"></text></g><g><title>optiprism`DYLD-STUB$$memcmp (717 samples, 0.86%)</title><rect x="6.2075%" y="549" width="0.8642%" height="15" fill="rgb(229,88,8)" fg:x="5150" fg:w="717"/><text x="6.4575%" y="559.50"></text></g><g><title>optiprism`__rdl_alloc (57 samples, 0.07%)</title><rect x="7.0790%" y="549" width="0.0687%" height="15" fill="rgb(213,181,19)" fg:x="5873" fg:w="57"/><text x="7.3290%" y="559.50"></text></g><g><title>optiprism`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (109 samples, 0.13%)</title><rect x="7.1585%" y="549" width="0.1314%" height="15" fill="rgb(254,191,54)" fg:x="5939" fg:w="109"/><text x="7.4085%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (41 samples, 0.05%)</title><rect x="7.2405%" y="533" width="0.0494%" height="15" fill="rgb(241,83,37)" fg:x="6007" fg:w="41"/><text x="7.4905%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (40 samples, 0.05%)</title><rect x="7.2417%" y="517" width="0.0482%" height="15" fill="rgb(233,36,39)" fg:x="6008" fg:w="40"/><text x="7.4917%" y="527.50"></text></g><g><title>optiprism`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (41 samples, 0.05%)</title><rect x="7.2899%" y="549" width="0.0494%" height="15" fill="rgb(226,3,54)" fg:x="6048" fg:w="41"/><text x="7.5399%" y="559.50"></text></g><g><title>optiprism`alloc::vec::Vec&lt;T,A&gt;::push (136 samples, 0.16%)</title><rect x="7.3417%" y="549" width="0.1639%" height="15" fill="rgb(245,192,40)" fg:x="6091" fg:w="136"/><text x="7.5917%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (466 samples, 0.56%)</title><rect x="7.5683%" y="533" width="0.5617%" height="15" fill="rgb(238,167,29)" fg:x="6279" fg:w="466"/><text x="7.8183%" y="543.50"></text></g><g><title>optiprism`alloc::vec::Vec&lt;T,A&gt;::truncate (678 samples, 0.82%)</title><rect x="7.5057%" y="549" width="0.8172%" height="15" fill="rgb(232,182,51)" fg:x="6227" fg:w="678"/><text x="7.7557%" y="559.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (160 samples, 0.19%)</title><rect x="8.1300%" y="533" width="0.1929%" height="15" fill="rgb(231,60,39)" fg:x="6745" fg:w="160"/><text x="8.3800%" y="543.50"></text></g><g><title>optiprism`argon2::Argon2::fill_blocks (26 samples, 0.03%)</title><rect x="8.3434%" y="485" width="0.0313%" height="15" fill="rgb(208,69,12)" fg:x="6922" fg:w="26"/><text x="8.5934%" y="495.50"></text></g><g><title>optiprism`argon2::Argon2::compress (26 samples, 0.03%)</title><rect x="8.3434%" y="469" width="0.0313%" height="15" fill="rgb(235,93,37)" fg:x="6922" fg:w="26"/><text x="8.5934%" y="479.50"></text></g><g><title>optiprism`platform::auth::password::make_password_hash (30 samples, 0.04%)</title><rect x="8.3398%" y="533" width="0.0362%" height="15" fill="rgb(213,116,39)" fg:x="6919" fg:w="30"/><text x="8.5898%" y="543.50"></text></g><g><title>optiprism`&lt;argon2::Argon2 as password_hash::traits::PasswordHasher&gt;::hash_password (30 samples, 0.04%)</title><rect x="8.3398%" y="517" width="0.0362%" height="15" fill="rgb(222,207,29)" fg:x="6919" fg:w="30"/><text x="8.5898%" y="527.50"></text></g><g><title>optiprism`argon2::Argon2::hash_password_into (29 samples, 0.03%)</title><rect x="8.3410%" y="501" width="0.0350%" height="15" fill="rgb(206,96,30)" fg:x="6920" fg:w="29"/><text x="8.5910%" y="511.50"></text></g><g><title>optiprism`cmd::init_test_org_structure (31 samples, 0.04%)</title><rect x="8.3398%" y="549" width="0.0374%" height="15" fill="rgb(218,138,4)" fg:x="6919" fg:w="31"/><text x="8.5898%" y="559.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (45 samples, 0.05%)</title><rect x="8.3771%" y="549" width="0.0542%" height="15" fill="rgb(250,191,14)" fg:x="6950" fg:w="45"/><text x="8.6271%" y="559.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (12 samples, 0.01%)</title><rect x="8.4772%" y="501" width="0.0145%" height="15" fill="rgb(239,60,40)" fg:x="7033" fg:w="12"/><text x="8.7272%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (137 samples, 0.17%)</title><rect x="8.4916%" y="501" width="0.1651%" height="15" fill="rgb(206,27,48)" fg:x="7045" fg:w="137"/><text x="8.7416%" y="511.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (165 samples, 0.20%)</title><rect x="8.4591%" y="517" width="0.1989%" height="15" fill="rgb(225,35,8)" fg:x="7018" fg:w="165"/><text x="8.7091%" y="527.50"></text></g><g><title>optiprism`std::sys::unix::time::Timespec::now (172 samples, 0.21%)</title><rect x="8.4543%" y="533" width="0.2073%" height="15" fill="rgb(250,213,24)" fg:x="7014" fg:w="172"/><text x="8.7043%" y="543.50"></text></g><g><title>optiprism`indicatif::progress_bar::ProgressBar::inc (190 samples, 0.23%)</title><rect x="8.4338%" y="549" width="0.2290%" height="15" fill="rgb(247,123,22)" fg:x="6997" fg:w="190"/><text x="8.6838%" y="559.50"></text></g><g><title>libsystem_c.dylib`isatty (24 samples, 0.03%)</title><rect x="8.6845%" y="469" width="0.0289%" height="15" fill="rgb(231,138,38)" fg:x="7205" fg:w="24"/><text x="8.9345%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (24 samples, 0.03%)</title><rect x="8.6845%" y="453" width="0.0289%" height="15" fill="rgb(231,145,46)" fg:x="7205" fg:w="24"/><text x="8.9345%" y="463.50"></text></g><g><title>optiprism`indicatif::draw_target::ProgressDrawTarget::width (37 samples, 0.04%)</title><rect x="8.6833%" y="501" width="0.0446%" height="15" fill="rgb(251,118,11)" fg:x="7204" fg:w="37"/><text x="8.9333%" y="511.50"></text></g><g><title>optiprism`console::unix_term::terminal_size (36 samples, 0.04%)</title><rect x="8.6845%" y="485" width="0.0434%" height="15" fill="rgb(217,147,25)" fg:x="7205" fg:w="36"/><text x="8.9345%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (12 samples, 0.01%)</title><rect x="8.7134%" y="469" width="0.0145%" height="15" fill="rgb(247,81,37)" fg:x="7229" fg:w="12"/><text x="8.9634%" y="479.50"></text></g><g><title>optiprism`indicatif::progress_bar::ProgressBar::tick_inner (62 samples, 0.07%)</title><rect x="8.6628%" y="549" width="0.0747%" height="15" fill="rgb(209,12,38)" fg:x="7187" fg:w="62"/><text x="8.9128%" y="559.50"></text></g><g><title>optiprism`indicatif::state::BarState::update_estimate_and_draw (58 samples, 0.07%)</title><rect x="8.6676%" y="533" width="0.0699%" height="15" fill="rgb(227,1,9)" fg:x="7191" fg:w="58"/><text x="8.9176%" y="543.50"></text></g><g><title>optiprism`indicatif::state::BarState::draw (55 samples, 0.07%)</title><rect x="8.6712%" y="517" width="0.0663%" height="15" fill="rgb(248,47,43)" fg:x="7194" fg:w="55"/><text x="8.9212%" y="527.50"></text></g><g><title>optiprism`metrics::key::Key::builder (23 samples, 0.03%)</title><rect x="8.7520%" y="549" width="0.0277%" height="15" fill="rgb(221,10,30)" fg:x="7261" fg:w="23"/><text x="9.0020%" y="559.50"></text></g><g><title>optiprism`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (11 samples, 0.01%)</title><rect x="8.7869%" y="549" width="0.0133%" height="15" fill="rgb(210,229,1)" fg:x="7290" fg:w="11"/><text x="9.0369%" y="559.50"></text></g><g><title>optiprism`parking_lot::raw_mutex::RawMutex::unlock_slow (11 samples, 0.01%)</title><rect x="8.8074%" y="549" width="0.0133%" height="15" fill="rgb(222,148,37)" fg:x="7307" fg:w="11"/><text x="9.0574%" y="559.50"></text></g><g><title>optiprism`platform::http::attach_routes (9 samples, 0.01%)</title><rect x="8.8207%" y="549" width="0.0108%" height="15" fill="rgb(234,67,33)" fg:x="7318" fg:w="9"/><text x="9.0707%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`read (11 samples, 0.01%)</title><rect x="8.8412%" y="501" width="0.0133%" height="15" fill="rgb(247,98,35)" fg:x="7335" fg:w="11"/><text x="9.0912%" y="511.50"></text></g><g><title>libcopyfile.dylib`fcopyfile (30 samples, 0.04%)</title><rect x="8.8364%" y="517" width="0.0362%" height="15" fill="rgb(247,138,52)" fg:x="7331" fg:w="30"/><text x="9.0864%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`write (15 samples, 0.02%)</title><rect x="8.8544%" y="501" width="0.0181%" height="15" fill="rgb(213,79,30)" fg:x="7346" fg:w="15"/><text x="9.1044%" y="511.50"></text></g><g><title>optiprism`std::fs::copy (36 samples, 0.04%)</title><rect x="8.8340%" y="549" width="0.0434%" height="15" fill="rgb(246,177,23)" fg:x="7329" fg:w="36"/><text x="9.0840%" y="559.50"></text></g><g><title>optiprism`std::sys::unix::fs::copy (34 samples, 0.04%)</title><rect x="8.8364%" y="533" width="0.0410%" height="15" fill="rgb(230,62,27)" fg:x="7331" fg:w="34"/><text x="9.0864%" y="543.50"></text></g><g><title>optiprism`&lt;fallible_streaming_iterator::MapErr&lt;I,F&gt; as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (10 samples, 0.01%)</title><rect x="8.8930%" y="437" width="0.0121%" height="15" fill="rgb(216,154,8)" fg:x="7378" fg:w="10"/><text x="9.1430%" y="447.50"></text></g><g><title>optiprism`&lt;parquet2::write::compression::Compressor&lt;I&gt; as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (10 samples, 0.01%)</title><rect x="8.8930%" y="421" width="0.0121%" height="15" fill="rgb(244,35,45)" fg:x="7378" fg:w="10"/><text x="9.1430%" y="431.50"></text></g><g><title>optiprism`parquet2::write::file::FileWriter&lt;W&gt;::write (11 samples, 0.01%)</title><rect x="8.8930%" y="517" width="0.0133%" height="15" fill="rgb(251,115,12)" fg:x="7378" fg:w="11"/><text x="9.1430%" y="527.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (11 samples, 0.01%)</title><rect x="8.8930%" y="501" width="0.0133%" height="15" fill="rgb(240,54,50)" fg:x="7378" fg:w="11"/><text x="9.1430%" y="511.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="8.8930%" y="485" width="0.0133%" height="15" fill="rgb(233,84,52)" fg:x="7378" fg:w="11"/><text x="9.1430%" y="495.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="8.8930%" y="469" width="0.0133%" height="15" fill="rgb(207,117,47)" fg:x="7378" fg:w="11"/><text x="9.1430%" y="479.50"></text></g><g><title>optiprism`parquet2::write::column_chunk::write_column_chunk (11 samples, 0.01%)</title><rect x="8.8930%" y="453" width="0.0133%" height="15" fill="rgb(249,43,39)" fg:x="7378" fg:w="11"/><text x="9.1430%" y="463.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="8.9087%" y="469" width="0.0133%" height="15" fill="rgb(209,38,44)" fg:x="7391" fg:w="11"/><text x="9.1587%" y="479.50"></text></g><g><title>optiprism`storage::memtable::Column::clone (12 samples, 0.01%)</title><rect x="8.9087%" y="485" width="0.0145%" height="15" fill="rgb(236,212,23)" fg:x="7391" fg:w="12"/><text x="9.1587%" y="495.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (30 samples, 0.04%)</title><rect x="8.9087%" y="501" width="0.0362%" height="15" fill="rgb(242,79,21)" fg:x="7391" fg:w="30"/><text x="9.1587%" y="511.50"></text></g><g><title>optiprism`storage::memtable::Column::into_array (18 samples, 0.02%)</title><rect x="8.9231%" y="485" width="0.0217%" height="15" fill="rgb(211,96,35)" fg:x="7403" fg:w="18"/><text x="9.1731%" y="495.50"></text></g><g><title>optiprism`storage::db::OptiDBImpl::flush (55 samples, 0.07%)</title><rect x="8.8846%" y="549" width="0.0663%" height="15" fill="rgb(253,215,40)" fg:x="7371" fg:w="55"/><text x="9.1346%" y="559.50"></text></g><g><title>optiprism`storage::db::flush (55 samples, 0.07%)</title><rect x="8.8846%" y="533" width="0.0663%" height="15" fill="rgb(211,81,21)" fg:x="7371" fg:w="55"/><text x="9.1346%" y="543.50"></text></g><g><title>optiprism`storage::memtable::Partition::chunk (35 samples, 0.04%)</title><rect x="8.9087%" y="517" width="0.0422%" height="15" fill="rgb(208,190,38)" fg:x="7391" fg:w="35"/><text x="9.1587%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (67 samples, 0.08%)</title><rect x="14.9619%" y="533" width="0.0808%" height="15" fill="rgb(235,213,38)" fg:x="12413" fg:w="67"/><text x="15.2119%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (275 samples, 0.33%)</title><rect x="15.0427%" y="533" width="0.3315%" height="15" fill="rgb(237,122,38)" fg:x="12480" fg:w="275"/><text x="15.2927%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (71 samples, 0.09%)</title><rect x="15.3741%" y="533" width="0.0856%" height="15" fill="rgb(244,218,35)" fg:x="12755" fg:w="71"/><text x="15.6241%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (312 samples, 0.38%)</title><rect x="15.4597%" y="533" width="0.3761%" height="15" fill="rgb(240,68,47)" fg:x="12826" fg:w="312"/><text x="15.7097%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (71 samples, 0.09%)</title><rect x="15.9877%" y="517" width="0.0856%" height="15" fill="rgb(210,16,53)" fg:x="13264" fg:w="71"/><text x="16.2377%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (10 samples, 0.01%)</title><rect x="16.0732%" y="517" width="0.0121%" height="15" fill="rgb(235,124,12)" fg:x="13335" fg:w="10"/><text x="16.3232%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_small (230 samples, 0.28%)</title><rect x="15.8418%" y="533" width="0.2772%" height="15" fill="rgb(224,169,11)" fg:x="13143" fg:w="230"/><text x="16.0918%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (25 samples, 0.03%)</title><rect x="16.0889%" y="517" width="0.0301%" height="15" fill="rgb(250,166,2)" fg:x="13348" fg:w="25"/><text x="16.3389%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.01%)</title><rect x="16.1190%" y="533" width="0.0145%" height="15" fill="rgb(242,216,29)" fg:x="13373" fg:w="12"/><text x="16.3690%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (104 samples, 0.13%)</title><rect x="16.1383%" y="533" width="0.1254%" height="15" fill="rgb(230,116,27)" fg:x="13389" fg:w="104"/><text x="16.3883%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (9 samples, 0.01%)</title><rect x="16.2781%" y="533" width="0.0108%" height="15" fill="rgb(228,99,48)" fg:x="13505" fg:w="9"/><text x="16.5281%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (69 samples, 0.08%)</title><rect x="16.2986%" y="533" width="0.0832%" height="15" fill="rgb(253,11,6)" fg:x="13522" fg:w="69"/><text x="16.5486%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (26 samples, 0.03%)</title><rect x="16.3818%" y="533" width="0.0313%" height="15" fill="rgb(247,143,39)" fg:x="13591" fg:w="26"/><text x="16.6318%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (24 samples, 0.03%)</title><rect x="16.4216%" y="533" width="0.0289%" height="15" fill="rgb(236,97,10)" fg:x="13624" fg:w="24"/><text x="16.6716%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (31 samples, 0.04%)</title><rect x="16.4505%" y="533" width="0.0374%" height="15" fill="rgb(233,208,19)" fg:x="13648" fg:w="31"/><text x="16.7005%" y="543.50"></text></g><g><title>optiprism`&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (17 samples, 0.02%)</title><rect x="16.4879%" y="533" width="0.0205%" height="15" fill="rgb(216,164,2)" fg:x="13679" fg:w="17"/><text x="16.7379%" y="543.50"></text></g><g><title>optiprism`&lt;alloc::string::String as core::clone::Clone&gt;::clone (30 samples, 0.04%)</title><rect x="16.5084%" y="533" width="0.0362%" height="15" fill="rgb(220,129,5)" fg:x="13696" fg:w="30"/><text x="16.7584%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (23 samples, 0.03%)</title><rect x="16.5168%" y="517" width="0.0277%" height="15" fill="rgb(242,17,10)" fg:x="13703" fg:w="23"/><text x="16.7668%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (13 samples, 0.02%)</title><rect x="16.5289%" y="501" width="0.0157%" height="15" fill="rgb(242,107,0)" fg:x="13713" fg:w="13"/><text x="16.7789%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (41 samples, 0.05%)</title><rect x="16.8615%" y="469" width="0.0494%" height="15" fill="rgb(251,28,31)" fg:x="13989" fg:w="41"/><text x="17.1115%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (13 samples, 0.02%)</title><rect x="16.9109%" y="469" width="0.0157%" height="15" fill="rgb(233,223,10)" fg:x="14030" fg:w="13"/><text x="17.1609%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (164 samples, 0.20%)</title><rect x="16.7567%" y="517" width="0.1977%" height="15" fill="rgb(215,21,27)" fg:x="13902" fg:w="164"/><text x="17.0067%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (141 samples, 0.17%)</title><rect x="16.7844%" y="501" width="0.1700%" height="15" fill="rgb(232,23,21)" fg:x="13925" fg:w="141"/><text x="17.0344%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (123 samples, 0.15%)</title><rect x="16.8061%" y="485" width="0.1483%" height="15" fill="rgb(244,5,23)" fg:x="13943" fg:w="123"/><text x="17.0561%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (23 samples, 0.03%)</title><rect x="16.9266%" y="469" width="0.0277%" height="15" fill="rgb(226,81,46)" fg:x="14043" fg:w="23"/><text x="17.1766%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.01%)</title><rect x="17.3846%" y="501" width="0.0145%" height="15" fill="rgb(247,70,30)" fg:x="14423" fg:w="12"/><text x="17.6346%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.04%)</title><rect x="17.3991%" y="501" width="0.0362%" height="15" fill="rgb(212,68,19)" fg:x="14435" fg:w="30"/><text x="17.6491%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.03%)</title><rect x="17.4353%" y="501" width="0.0301%" height="15" fill="rgb(240,187,13)" fg:x="14465" fg:w="25"/><text x="17.6853%" y="511.50"></text></g><g><title>optiprism`&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="17.4654%" y="501" width="0.0169%" height="15" fill="rgb(223,113,26)" fg:x="14490" fg:w="14"/><text x="17.7154%" y="511.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (787 samples, 0.95%)</title><rect x="16.5445%" y="533" width="0.9486%" height="15" fill="rgb(206,192,2)" fg:x="13726" fg:w="787"/><text x="16.7945%" y="543.50"></text></g><g><title>optiprism`&lt;storage::Value as core::clone::Clone&gt;::clone (441 samples, 0.53%)</title><rect x="16.9616%" y="517" width="0.5316%" height="15" fill="rgb(241,108,4)" fg:x="14072" fg:w="441"/><text x="17.2116%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (483 samples, 0.58%)</title><rect x="17.5884%" y="517" width="0.5822%" height="15" fill="rgb(247,173,49)" fg:x="14592" fg:w="483"/><text x="17.8384%" y="527.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (714 samples, 0.86%)</title><rect x="17.4931%" y="533" width="0.8606%" height="15" fill="rgb(224,114,35)" fg:x="14513" fg:w="714"/><text x="17.7431%" y="543.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (152 samples, 0.18%)</title><rect x="18.1705%" y="517" width="0.1832%" height="15" fill="rgb(245,159,27)" fg:x="15075" fg:w="152"/><text x="18.4205%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.03%)</title><rect x="18.3754%" y="517" width="0.0277%" height="15" fill="rgb(245,172,44)" fg:x="15245" fg:w="23"/><text x="18.6254%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (56 samples, 0.07%)</title><rect x="18.4743%" y="501" width="0.0675%" height="15" fill="rgb(236,23,11)" fg:x="15327" fg:w="56"/><text x="18.7243%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (121 samples, 0.15%)</title><rect x="18.5418%" y="501" width="0.1458%" height="15" fill="rgb(205,117,38)" fg:x="15383" fg:w="121"/><text x="18.7918%" y="511.50"></text></g><g><title>optiprism`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="18.6876%" y="501" width="0.0133%" height="15" fill="rgb(237,72,25)" fg:x="15504" fg:w="11"/><text x="18.9376%" y="511.50"></text></g><g><title>optiprism`&lt;storage::KeyValue as core::convert::From&lt;&amp;storage::Value&gt;&gt;::from (22 samples, 0.03%)</title><rect x="18.7009%" y="501" width="0.0265%" height="15" fill="rgb(244,70,9)" fg:x="15515" fg:w="22"/><text x="18.9509%" y="511.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (284 samples, 0.34%)</title><rect x="18.4056%" y="517" width="0.3423%" height="15" fill="rgb(217,125,39)" fg:x="15270" fg:w="284"/><text x="18.6556%" y="527.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (15 samples, 0.02%)</title><rect x="18.7298%" y="501" width="0.0181%" height="15" fill="rgb(235,36,10)" fg:x="15539" fg:w="15"/><text x="18.9798%" y="511.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (343 samples, 0.41%)</title><rect x="18.3537%" y="533" width="0.4134%" height="15" fill="rgb(251,123,47)" fg:x="15227" fg:w="343"/><text x="18.6037%" y="543.50"></text></g><g><title>optiprism`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.09%)</title><rect x="18.7672%" y="533" width="0.0928%" height="15" fill="rgb(221,13,13)" fg:x="15570" fg:w="77"/><text x="19.0172%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (97 samples, 0.12%)</title><rect x="18.8877%" y="517" width="0.1169%" height="15" fill="rgb(238,131,9)" fg:x="15670" fg:w="97"/><text x="19.1377%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (53 samples, 0.06%)</title><rect x="19.0046%" y="517" width="0.0639%" height="15" fill="rgb(211,50,8)" fg:x="15767" fg:w="53"/><text x="19.2546%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (13 samples, 0.02%)</title><rect x="19.0733%" y="517" width="0.0157%" height="15" fill="rgb(245,182,24)" fg:x="15824" fg:w="13"/><text x="19.3233%" y="527.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.14%)</title><rect x="19.0890%" y="517" width="0.1398%" height="15" fill="rgb(242,14,37)" fg:x="15837" fg:w="116"/><text x="19.3390%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (73 samples, 0.09%)</title><rect x="19.1408%" y="501" width="0.0880%" height="15" fill="rgb(246,228,12)" fg:x="15880" fg:w="73"/><text x="19.3908%" y="511.50"></text></g><g><title>optiprism`&lt;metrics::cow::Cow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (312 samples, 0.38%)</title><rect x="18.8636%" y="533" width="0.3761%" height="15" fill="rgb(213,55,15)" fg:x="15650" fg:w="312"/><text x="19.1136%" y="543.50"></text></g><g><title>optiprism`DYLD-STUB$$free (9 samples, 0.01%)</title><rect x="19.2288%" y="517" width="0.0108%" height="15" fill="rgb(209,9,3)" fg:x="15953" fg:w="9"/><text x="19.4788%" y="527.50"></text></g><g><title>optiprism`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (25 samples, 0.03%)</title><rect x="19.2397%" y="533" width="0.0301%" height="15" fill="rgb(230,59,30)" fg:x="15962" fg:w="25"/><text x="19.4897%" y="543.50"></text></g><g><title>optiprism`&lt;metrics_exporter_prometheus::recorder::PrometheusRecorder as metrics::recorder::Recorder&gt;::register_counter::_{{closure}} (37 samples, 0.04%)</title><rect x="19.2782%" y="533" width="0.0446%" height="15" fill="rgb(209,121,21)" fg:x="15994" fg:w="37"/><text x="19.5282%" y="543.50"></text></g><g><title>optiprism`&lt;metrics_exporter_prometheus::recorder::PrometheusRecorder as metrics::recorder::Recorder&gt;::register_histogram::_{{closure}} (46 samples, 0.06%)</title><rect x="19.3228%" y="533" width="0.0554%" height="15" fill="rgb(220,109,13)" fg:x="16031" fg:w="46"/><text x="19.5728%" y="543.50"></text></g><g><title>optiprism`metrics_util::bucket::AtomicBucket&lt;T&gt;::push (27 samples, 0.03%)</title><rect x="19.3867%" y="517" width="0.0325%" height="15" fill="rgb(232,18,1)" fg:x="16084" fg:w="27"/><text x="19.6367%" y="527.50"></text></g><g><title>optiprism`&lt;metrics_util::registry::recency::Generational&lt;T&gt; as metrics::handles::HistogramFn&gt;::record (43 samples, 0.05%)</title><rect x="19.3795%" y="533" width="0.0518%" height="15" fill="rgb(215,41,42)" fg:x="16078" fg:w="43"/><text x="19.6295%" y="543.50"></text></g><g><title>optiprism`quanta::instant::Instant::now (10 samples, 0.01%)</title><rect x="19.4193%" y="517" width="0.0121%" height="15" fill="rgb(224,123,36)" fg:x="16111" fg:w="10"/><text x="19.6693%" y="527.50"></text></g><g><title>optiprism`&lt;storage::Value as core::clone::Clone&gt;::clone (194 samples, 0.23%)</title><rect x="19.4313%" y="533" width="0.2338%" height="15" fill="rgb(240,125,3)" fg:x="16121" fg:w="194"/><text x="19.6813%" y="543.50"></text></g><g><title>optiprism`DYLD-STUB$$free (95 samples, 0.11%)</title><rect x="19.6688%" y="533" width="0.1145%" height="15" fill="rgb(205,98,50)" fg:x="16318" fg:w="95"/><text x="19.9188%" y="543.50"></text></g><g><title>optiprism`DYLD-STUB$$malloc (12 samples, 0.01%)</title><rect x="19.7833%" y="533" width="0.0145%" height="15" fill="rgb(205,185,37)" fg:x="16413" fg:w="12"/><text x="20.0333%" y="543.50"></text></g><g><title>optiprism`__rdl_alloc (26 samples, 0.03%)</title><rect x="19.8158%" y="533" width="0.0313%" height="15" fill="rgb(238,207,15)" fg:x="16440" fg:w="26"/><text x="20.0658%" y="543.50"></text></g><g><title>optiprism`__rust_dealloc (18 samples, 0.02%)</title><rect x="19.8556%" y="533" width="0.0217%" height="15" fill="rgb(213,199,42)" fg:x="16473" fg:w="18"/><text x="20.1056%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.02%)</title><rect x="19.9376%" y="517" width="0.0181%" height="15" fill="rgb(235,201,11)" fg:x="16541" fg:w="15"/><text x="20.1876%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (23 samples, 0.03%)</title><rect x="19.9556%" y="517" width="0.0277%" height="15" fill="rgb(207,46,11)" fg:x="16556" fg:w="23"/><text x="20.2056%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.03%)</title><rect x="19.9858%" y="517" width="0.0313%" height="15" fill="rgb(241,35,35)" fg:x="16581" fg:w="26"/><text x="20.2358%" y="527.50"></text></g><g><title>optiprism`DYLD-STUB$$realloc (15 samples, 0.02%)</title><rect x="20.0219%" y="517" width="0.0181%" height="15" fill="rgb(243,32,47)" fg:x="16611" fg:w="15"/><text x="20.2719%" y="527.50"></text></g><g><title>optiprism`__rdl_realloc (29 samples, 0.03%)</title><rect x="20.0485%" y="517" width="0.0350%" height="15" fill="rgb(247,202,23)" fg:x="16633" fg:w="29"/><text x="20.2985%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (22 samples, 0.03%)</title><rect x="20.1111%" y="501" width="0.0265%" height="15" fill="rgb(219,102,11)" fg:x="16685" fg:w="22"/><text x="20.3611%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (9 samples, 0.01%)</title><rect x="20.2630%" y="469" width="0.0108%" height="15" fill="rgb(243,110,44)" fg:x="16811" fg:w="9"/><text x="20.5130%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.01%)</title><rect x="20.2739%" y="469" width="0.0133%" height="15" fill="rgb(222,74,54)" fg:x="16820" fg:w="11"/><text x="20.5239%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (13 samples, 0.02%)</title><rect x="20.2871%" y="469" width="0.0157%" height="15" fill="rgb(216,99,12)" fg:x="16831" fg:w="13"/><text x="20.5371%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (33 samples, 0.04%)</title><rect x="20.3076%" y="469" width="0.0398%" height="15" fill="rgb(226,22,26)" fg:x="16848" fg:w="33"/><text x="20.5576%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (41 samples, 0.05%)</title><rect x="20.3811%" y="453" width="0.0494%" height="15" fill="rgb(217,163,10)" fg:x="16909" fg:w="41"/><text x="20.6311%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (24 samples, 0.03%)</title><rect x="20.4715%" y="421" width="0.0289%" height="15" fill="rgb(213,25,53)" fg:x="16984" fg:w="24"/><text x="20.7215%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (119 samples, 0.14%)</title><rect x="20.4305%" y="453" width="0.1434%" height="15" fill="rgb(252,105,26)" fg:x="16950" fg:w="119"/><text x="20.6805%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (105 samples, 0.13%)</title><rect x="20.4474%" y="437" width="0.1266%" height="15" fill="rgb(220,39,43)" fg:x="16964" fg:w="105"/><text x="20.6974%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (61 samples, 0.07%)</title><rect x="20.5005%" y="421" width="0.0735%" height="15" fill="rgb(229,68,48)" fg:x="17008" fg:w="61"/><text x="20.7505%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.01%)</title><rect x="20.5740%" y="453" width="0.0121%" height="15" fill="rgb(252,8,32)" fg:x="17069" fg:w="10"/><text x="20.8240%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (207 samples, 0.25%)</title><rect x="20.3474%" y="469" width="0.2495%" height="15" fill="rgb(223,20,43)" fg:x="16881" fg:w="207"/><text x="20.5974%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (15 samples, 0.02%)</title><rect x="20.6053%" y="469" width="0.0181%" height="15" fill="rgb(229,81,49)" fg:x="17095" fg:w="15"/><text x="20.8553%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.03%)</title><rect x="20.6246%" y="469" width="0.0289%" height="15" fill="rgb(236,28,36)" fg:x="17111" fg:w="24"/><text x="20.8746%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (13 samples, 0.02%)</title><rect x="20.7367%" y="453" width="0.0157%" height="15" fill="rgb(249,185,26)" fg:x="17204" fg:w="13"/><text x="20.9867%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (12 samples, 0.01%)</title><rect x="20.8259%" y="437" width="0.0145%" height="15" fill="rgb(249,174,33)" fg:x="17278" fg:w="12"/><text x="21.0759%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.02%)</title><rect x="20.9356%" y="421" width="0.0193%" height="15" fill="rgb(233,201,37)" fg:x="17369" fg:w="16"/><text x="21.1856%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (169 samples, 0.20%)</title><rect x="20.7560%" y="453" width="0.2037%" height="15" fill="rgb(221,78,26)" fg:x="17220" fg:w="169"/><text x="21.0060%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (99 samples, 0.12%)</title><rect x="20.8404%" y="437" width="0.1193%" height="15" fill="rgb(250,127,30)" fg:x="17290" fg:w="99"/><text x="21.0904%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.01%)</title><rect x="20.9597%" y="453" width="0.0108%" height="15" fill="rgb(230,49,44)" fg:x="17389" fg:w="9"/><text x="21.2097%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.01%)</title><rect x="20.9790%" y="453" width="0.0108%" height="15" fill="rgb(229,67,23)" fg:x="17405" fg:w="9"/><text x="21.2290%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_size (14 samples, 0.02%)</title><rect x="20.9898%" y="453" width="0.0169%" height="15" fill="rgb(249,83,47)" fg:x="17414" fg:w="14"/><text x="21.2398%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (14 samples, 0.02%)</title><rect x="21.0694%" y="437" width="0.0169%" height="15" fill="rgb(215,43,3)" fg:x="17480" fg:w="14"/><text x="21.3194%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (90 samples, 0.11%)</title><rect x="21.0067%" y="453" width="0.1085%" height="15" fill="rgb(238,154,13)" fg:x="17428" fg:w="90"/><text x="21.2567%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (16 samples, 0.02%)</title><rect x="21.0959%" y="437" width="0.0193%" height="15" fill="rgb(219,56,2)" fg:x="17502" fg:w="16"/><text x="21.3459%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (9 samples, 0.01%)</title><rect x="21.1321%" y="437" width="0.0108%" height="15" fill="rgb(233,0,4)" fg:x="17532" fg:w="9"/><text x="21.3821%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (23 samples, 0.03%)</title><rect x="21.1996%" y="405" width="0.0277%" height="15" fill="rgb(235,30,7)" fg:x="17588" fg:w="23"/><text x="21.4496%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (102 samples, 0.12%)</title><rect x="21.1489%" y="437" width="0.1229%" height="15" fill="rgb(250,79,13)" fg:x="17546" fg:w="102"/><text x="21.3989%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (87 samples, 0.10%)</title><rect x="21.1670%" y="421" width="0.1049%" height="15" fill="rgb(211,146,34)" fg:x="17561" fg:w="87"/><text x="21.4170%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (29 samples, 0.03%)</title><rect x="21.2369%" y="405" width="0.0350%" height="15" fill="rgb(228,22,38)" fg:x="17619" fg:w="29"/><text x="21.4869%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (160 samples, 0.19%)</title><rect x="21.1152%" y="453" width="0.1929%" height="15" fill="rgb(235,168,5)" fg:x="17518" fg:w="160"/><text x="21.3652%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.03%)</title><rect x="21.2743%" y="437" width="0.0337%" height="15" fill="rgb(221,155,16)" fg:x="17650" fg:w="28"/><text x="21.5243%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.02%)</title><rect x="21.2851%" y="421" width="0.0229%" height="15" fill="rgb(215,215,53)" fg:x="17659" fg:w="19"/><text x="21.5351%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (74 samples, 0.09%)</title><rect x="21.3080%" y="453" width="0.0892%" height="15" fill="rgb(223,4,10)" fg:x="17678" fg:w="74"/><text x="21.5580%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (64 samples, 0.08%)</title><rect x="21.3201%" y="437" width="0.0771%" height="15" fill="rgb(234,103,6)" fg:x="17688" fg:w="64"/><text x="21.5701%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (9 samples, 0.01%)</title><rect x="21.4792%" y="437" width="0.0108%" height="15" fill="rgb(227,97,0)" fg:x="17820" fg:w="9"/><text x="21.7292%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.03%)</title><rect x="21.4900%" y="437" width="0.0265%" height="15" fill="rgb(234,150,53)" fg:x="17829" fg:w="22"/><text x="21.7400%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (107 samples, 0.13%)</title><rect x="21.4153%" y="453" width="0.1290%" height="15" fill="rgb(228,201,54)" fg:x="17767" fg:w="107"/><text x="21.6653%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (23 samples, 0.03%)</title><rect x="21.5166%" y="437" width="0.0277%" height="15" fill="rgb(222,22,37)" fg:x="17851" fg:w="23"/><text x="21.7666%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (770 samples, 0.93%)</title><rect x="20.6535%" y="469" width="0.9281%" height="15" fill="rgb(237,53,32)" fg:x="17135" fg:w="770"/><text x="20.9035%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (31 samples, 0.04%)</title><rect x="21.5443%" y="453" width="0.0374%" height="15" fill="rgb(233,25,53)" fg:x="17874" fg:w="31"/><text x="21.7943%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.03%)</title><rect x="21.5816%" y="469" width="0.0277%" height="15" fill="rgb(210,40,34)" fg:x="17905" fg:w="23"/><text x="21.8316%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (16 samples, 0.02%)</title><rect x="21.6094%" y="469" width="0.0193%" height="15" fill="rgb(241,220,44)" fg:x="17928" fg:w="16"/><text x="21.8594%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1,301 samples, 1.57%)</title><rect x="20.2027%" y="485" width="1.5682%" height="15" fill="rgb(235,28,35)" fg:x="16761" fg:w="1301"/><text x="20.4527%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (118 samples, 0.14%)</title><rect x="21.6287%" y="469" width="0.1422%" height="15" fill="rgb(210,56,17)" fg:x="17944" fg:w="118"/><text x="21.8787%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (23 samples, 0.03%)</title><rect x="21.7709%" y="485" width="0.0277%" height="15" fill="rgb(224,130,29)" fg:x="18062" fg:w="23"/><text x="22.0209%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (49 samples, 0.06%)</title><rect x="21.7986%" y="485" width="0.0591%" height="15" fill="rgb(235,212,8)" fg:x="18085" fg:w="49"/><text x="22.0486%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_size (24 samples, 0.03%)</title><rect x="21.8577%" y="485" width="0.0289%" height="15" fill="rgb(223,33,50)" fg:x="18134" fg:w="24"/><text x="22.1077%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (27 samples, 0.03%)</title><rect x="21.8866%" y="485" width="0.0325%" height="15" fill="rgb(219,149,13)" fg:x="18158" fg:w="27"/><text x="22.1366%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (76 samples, 0.09%)</title><rect x="21.9191%" y="485" width="0.0916%" height="15" fill="rgb(250,156,29)" fg:x="18185" fg:w="76"/><text x="22.1691%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (62 samples, 0.07%)</title><rect x="21.9360%" y="469" width="0.0747%" height="15" fill="rgb(216,193,19)" fg:x="18199" fg:w="62"/><text x="22.1860%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1,556 samples, 1.88%)</title><rect x="20.1377%" y="501" width="1.8755%" height="15" fill="rgb(216,135,14)" fg:x="16707" fg:w="1556"/><text x="20.3877%" y="511.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (39 samples, 0.05%)</title><rect x="22.0132%" y="501" width="0.0470%" height="15" fill="rgb(241,47,5)" fg:x="18263" fg:w="39"/><text x="22.2632%" y="511.50"></text></g><g><title>optiprism`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,832 samples, 2.21%)</title><rect x="19.8773%" y="533" width="2.2082%" height="15" fill="rgb(233,42,35)" fg:x="16491" fg:w="1832"/><text x="20.1273%" y="543.50">o..</text></g><g><title>optiprism`alloc::raw_vec::finish_grow (1,661 samples, 2.00%)</title><rect x="20.0834%" y="517" width="2.0021%" height="15" fill="rgb(231,13,6)" fg:x="16662" fg:w="1661"/><text x="20.3334%" y="527.50">o..</text></g><g><title>libsystem_malloc.dylib`szone_size (21 samples, 0.03%)</title><rect x="22.0602%" y="501" width="0.0253%" height="15" fill="rgb(207,181,40)" fg:x="18302" fg:w="21"/><text x="22.3102%" y="511.50"></text></g><g><title>optiprism`alloc::raw_vec::finish_grow (35 samples, 0.04%)</title><rect x="22.0855%" y="533" width="0.0422%" height="15" fill="rgb(254,173,49)" fg:x="18323" fg:w="35"/><text x="22.3355%" y="543.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (41 samples, 0.05%)</title><rect x="22.1277%" y="533" width="0.0494%" height="15" fill="rgb(221,1,38)" fg:x="18358" fg:w="41"/><text x="22.3777%" y="543.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (47 samples, 0.06%)</title><rect x="22.1891%" y="533" width="0.0567%" height="15" fill="rgb(206,124,46)" fg:x="18409" fg:w="47"/><text x="22.4391%" y="543.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::table::Table&gt; (79 samples, 0.10%)</title><rect x="22.2470%" y="533" width="0.0952%" height="15" fill="rgb(249,21,11)" fg:x="18457" fg:w="79"/><text x="22.4970%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (52 samples, 0.06%)</title><rect x="22.2795%" y="517" width="0.0627%" height="15" fill="rgb(222,201,40)" fg:x="18484" fg:w="52"/><text x="22.5295%" y="527.50"></text></g><g><title>optiprism`crc32fast::Hasher::update (1,127 samples, 1.36%)</title><rect x="22.3422%" y="533" width="1.3584%" height="15" fill="rgb(235,61,29)" fg:x="18536" fg:w="1127"/><text x="22.5922%" y="543.50"></text></g><g><title>optiprism`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (282 samples, 0.34%)</title><rect x="23.7344%" y="517" width="0.3399%" height="15" fill="rgb(219,207,3)" fg:x="19691" fg:w="282"/><text x="23.9844%" y="527.50"></text></g><g><title>optiprism`metrics::key::generate_key_hash (35 samples, 0.04%)</title><rect x="24.0743%" y="517" width="0.0422%" height="15" fill="rgb(222,56,46)" fg:x="19973" fg:w="35"/><text x="24.3243%" y="527.50"></text></g><g><title>optiprism`metrics::key::Key::builder (351 samples, 0.42%)</title><rect x="23.7055%" y="533" width="0.4231%" height="15" fill="rgb(239,76,54)" fg:x="19667" fg:w="351"/><text x="23.9555%" y="543.50"></text></g><g><title>optiprism`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (10 samples, 0.01%)</title><rect x="24.1165%" y="517" width="0.0121%" height="15" fill="rgb(231,124,27)" fg:x="20008" fg:w="10"/><text x="24.3665%" y="527.50"></text></g><g><title>optiprism`metrics::key::Key::get_hash (19 samples, 0.02%)</title><rect x="24.1285%" y="533" width="0.0229%" height="15" fill="rgb(249,195,6)" fg:x="20018" fg:w="19"/><text x="24.3785%" y="543.50"></text></g><g><title>optiprism`metrics::key::generate_key_hash (34 samples, 0.04%)</title><rect x="24.1514%" y="533" width="0.0410%" height="15" fill="rgb(237,174,47)" fg:x="20037" fg:w="34"/><text x="24.4014%" y="543.50"></text></g><g><title>optiprism`metrics_util::bucket::AtomicBucket&lt;T&gt;::push (10 samples, 0.01%)</title><rect x="24.1924%" y="533" width="0.0121%" height="15" fill="rgb(206,201,31)" fg:x="20071" fg:w="10"/><text x="24.4424%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (84 samples, 0.10%)</title><rect x="24.2177%" y="517" width="0.1012%" height="15" fill="rgb(231,57,52)" fg:x="20092" fg:w="84"/><text x="24.4677%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (50 samples, 0.06%)</title><rect x="24.3190%" y="517" width="0.0603%" height="15" fill="rgb(248,177,22)" fg:x="20176" fg:w="50"/><text x="24.5690%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (60 samples, 0.07%)</title><rect x="24.3792%" y="517" width="0.0723%" height="15" fill="rgb(215,211,37)" fg:x="20226" fg:w="60"/><text x="24.6292%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (22 samples, 0.03%)</title><rect x="24.4516%" y="517" width="0.0265%" height="15" fill="rgb(241,128,51)" fg:x="20286" fg:w="22"/><text x="24.7016%" y="527.50"></text></g><g><title>optiprism`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (21 samples, 0.03%)</title><rect x="24.4781%" y="517" width="0.0253%" height="15" fill="rgb(227,165,31)" fg:x="20308" fg:w="21"/><text x="24.7281%" y="527.50"></text></g><g><title>optiprism`&lt;metrics_exporter_prometheus::recorder::PrometheusRecorder as metrics::recorder::Recorder&gt;::register_counter::_{{closure}} (47 samples, 0.06%)</title><rect x="24.5034%" y="517" width="0.0567%" height="15" fill="rgb(228,167,24)" fg:x="20329" fg:w="47"/><text x="24.7534%" y="527.50"></text></g><g><title>optiprism`__rdl_alloc (21 samples, 0.03%)</title><rect x="24.5842%" y="517" width="0.0253%" height="15" fill="rgb(228,143,12)" fg:x="20396" fg:w="21"/><text x="24.8342%" y="527.50"></text></g><g><title>optiprism`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (346 samples, 0.42%)</title><rect x="24.2045%" y="533" width="0.4170%" height="15" fill="rgb(249,149,8)" fg:x="20081" fg:w="346"/><text x="24.4545%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (80 samples, 0.10%)</title><rect x="24.6336%" y="517" width="0.0964%" height="15" fill="rgb(243,35,44)" fg:x="20437" fg:w="80"/><text x="24.8836%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (75 samples, 0.09%)</title><rect x="24.7300%" y="517" width="0.0904%" height="15" fill="rgb(246,89,9)" fg:x="20517" fg:w="75"/><text x="24.9800%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (64 samples, 0.08%)</title><rect x="24.8204%" y="517" width="0.0771%" height="15" fill="rgb(233,213,13)" fg:x="20592" fg:w="64"/><text x="25.0704%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (18 samples, 0.02%)</title><rect x="24.8975%" y="517" width="0.0217%" height="15" fill="rgb(233,141,41)" fg:x="20656" fg:w="18"/><text x="25.1475%" y="527.50"></text></g><g><title>optiprism`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (16 samples, 0.02%)</title><rect x="24.9192%" y="517" width="0.0193%" height="15" fill="rgb(239,167,4)" fg:x="20674" fg:w="16"/><text x="25.1692%" y="527.50"></text></g><g><title>optiprism`&lt;metrics_exporter_prometheus::recorder::PrometheusRecorder as metrics::recorder::Recorder&gt;::register_histogram::_{{closure}} (46 samples, 0.06%)</title><rect x="24.9385%" y="517" width="0.0554%" height="15" fill="rgb(209,217,16)" fg:x="20690" fg:w="46"/><text x="25.1885%" y="527.50"></text></g><g><title>optiprism`__rdl_alloc (34 samples, 0.04%)</title><rect x="25.0036%" y="517" width="0.0410%" height="15" fill="rgb(219,88,35)" fg:x="20744" fg:w="34"/><text x="25.2536%" y="527.50"></text></g><g><title>optiprism`metrics::key::Key::get_hash (9 samples, 0.01%)</title><rect x="25.0446%" y="517" width="0.0108%" height="15" fill="rgb(220,193,23)" fg:x="20778" fg:w="9"/><text x="25.2946%" y="527.50"></text></g><g><title>optiprism`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_histogram (364 samples, 0.44%)</title><rect x="24.6215%" y="533" width="0.4387%" height="15" fill="rgb(230,90,52)" fg:x="20427" fg:w="364"/><text x="24.8715%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (370 samples, 0.45%)</title><rect x="25.1615%" y="517" width="0.4460%" height="15" fill="rgb(252,106,19)" fg:x="20875" fg:w="370"/><text x="25.4115%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (475 samples, 0.57%)</title><rect x="25.6075%" y="517" width="0.5725%" height="15" fill="rgb(206,74,20)" fg:x="21245" fg:w="475"/><text x="25.8575%" y="527.50"></text></g><g><title>optiprism`parking_lot::raw_mutex::RawMutex::lock_slow (946 samples, 1.14%)</title><rect x="25.0603%" y="533" width="1.1403%" height="15" fill="rgb(230,138,44)" fg:x="20791" fg:w="946"/><text x="25.3103%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3,429 samples, 4.13%)</title><rect x="26.3174%" y="517" width="4.1331%" height="15" fill="rgb(235,182,43)" fg:x="21834" fg:w="3429"/><text x="26.5674%" y="527.50">libsy..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (26 samples, 0.03%)</title><rect x="30.4518%" y="517" width="0.0313%" height="15" fill="rgb(242,16,51)" fg:x="25264" fg:w="26"/><text x="30.7018%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (22 samples, 0.03%)</title><rect x="30.4867%" y="517" width="0.0265%" height="15" fill="rgb(248,9,4)" fg:x="25293" fg:w="22"/><text x="30.7367%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (178 samples, 0.21%)</title><rect x="30.5434%" y="485" width="0.2146%" height="15" fill="rgb(210,31,22)" fg:x="25340" fg:w="178"/><text x="30.7934%" y="495.50"></text></g><g><title>optiprism`parking_lot::raw_mutex::RawMutex::unlock_slow (3,783 samples, 4.56%)</title><rect x="26.2005%" y="533" width="4.5598%" height="15" fill="rgb(239,54,39)" fg:x="21737" fg:w="3783"/><text x="26.4505%" y="543.50">optip..</text></g><g><title>optiprism`std::sys::unix::time::Timespec::now (196 samples, 0.24%)</title><rect x="30.5241%" y="517" width="0.2362%" height="15" fill="rgb(230,99,41)" fg:x="25324" fg:w="196"/><text x="30.7741%" y="527.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (196 samples, 0.24%)</title><rect x="30.5241%" y="501" width="0.2362%" height="15" fill="rgb(253,106,12)" fg:x="25324" fg:w="196"/><text x="30.7741%" y="511.50"></text></g><g><title>optiprism`std::io::Write::write_all (10 samples, 0.01%)</title><rect x="30.7627%" y="533" width="0.0121%" height="15" fill="rgb(213,46,41)" fg:x="25522" fg:w="10"/><text x="31.0127%" y="543.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (11 samples, 0.01%)</title><rect x="30.7905%" y="501" width="0.0133%" height="15" fill="rgb(215,133,35)" fg:x="25545" fg:w="11"/><text x="31.0405%" y="511.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (104 samples, 0.13%)</title><rect x="30.7820%" y="517" width="0.1254%" height="15" fill="rgb(213,28,5)" fg:x="25538" fg:w="104"/><text x="31.0320%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (86 samples, 0.10%)</title><rect x="30.8037%" y="501" width="0.1037%" height="15" fill="rgb(215,77,49)" fg:x="25556" fg:w="86"/><text x="31.0537%" y="511.50"></text></g><g><title>optiprism`std::sys::unix::time::Timespec::now (114 samples, 0.14%)</title><rect x="30.7796%" y="533" width="0.1374%" height="15" fill="rgb(248,100,22)" fg:x="25536" fg:w="114"/><text x="31.0296%" y="543.50"></text></g><g><title>optiprism`DYLD-STUB$$clock_gettime (9 samples, 0.01%)</title><rect x="30.9303%" y="517" width="0.0108%" height="15" fill="rgb(208,67,9)" fg:x="25661" fg:w="9"/><text x="31.1803%" y="527.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (9 samples, 0.01%)</title><rect x="30.9701%" y="485" width="0.0108%" height="15" fill="rgb(219,133,21)" fg:x="25694" fg:w="9"/><text x="31.2201%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (178 samples, 0.21%)</title><rect x="30.9809%" y="485" width="0.2146%" height="15" fill="rgb(246,46,29)" fg:x="25703" fg:w="178"/><text x="31.2309%" y="495.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (211 samples, 0.25%)</title><rect x="30.9472%" y="501" width="0.2543%" height="15" fill="rgb(246,185,52)" fg:x="25675" fg:w="211"/><text x="31.1972%" y="511.50"></text></g><g><title>optiprism`std::sys::unix::time::Timespec::now (221 samples, 0.27%)</title><rect x="30.9411%" y="517" width="0.2664%" height="15" fill="rgb(252,136,11)" fg:x="25670" fg:w="221"/><text x="31.1911%" y="527.50"></text></g><g><title>optiprism`std::time::Instant::elapsed (241 samples, 0.29%)</title><rect x="30.9206%" y="533" width="0.2905%" height="15" fill="rgb(219,138,53)" fg:x="25653" fg:w="241"/><text x="31.1706%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`close (15 samples, 0.02%)</title><rect x="31.2123%" y="517" width="0.0181%" height="15" fill="rgb(211,51,23)" fg:x="25895" fg:w="15"/><text x="31.4623%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.02%)</title><rect x="31.2364%" y="501" width="0.0217%" height="15" fill="rgb(247,221,28)" fg:x="25915" fg:w="18"/><text x="31.4864%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (30 samples, 0.04%)</title><rect x="31.3726%" y="485" width="0.0362%" height="15" fill="rgb(251,222,45)" fg:x="26028" fg:w="30"/><text x="31.6226%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (10 samples, 0.01%)</title><rect x="31.4088%" y="469" width="0.0121%" height="15" fill="rgb(217,162,53)" fg:x="26058" fg:w="10"/><text x="31.6588%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (17 samples, 0.02%)</title><rect x="31.4088%" y="485" width="0.0205%" height="15" fill="rgb(229,93,14)" fg:x="26058" fg:w="17"/><text x="31.6588%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (677 samples, 0.82%)</title><rect x="31.4293%" y="469" width="0.8160%" height="15" fill="rgb(209,67,49)" fg:x="26075" fg:w="677"/><text x="31.6793%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`medium_free_scan_madvise_free (58 samples, 0.07%)</title><rect x="32.2477%" y="469" width="0.0699%" height="15" fill="rgb(213,87,29)" fg:x="26754" fg:w="58"/><text x="32.4977%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (58 samples, 0.07%)</title><rect x="32.2477%" y="453" width="0.0699%" height="15" fill="rgb(205,151,52)" fg:x="26754" fg:w="58"/><text x="32.4977%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (765 samples, 0.92%)</title><rect x="31.4293%" y="485" width="0.9221%" height="15" fill="rgb(253,215,39)" fg:x="26075" fg:w="765"/><text x="31.6793%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`medium_madvise_free_range_no_lock (28 samples, 0.03%)</title><rect x="32.3176%" y="469" width="0.0337%" height="15" fill="rgb(221,220,41)" fg:x="26812" fg:w="28"/><text x="32.5676%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (28 samples, 0.03%)</title><rect x="32.3176%" y="453" width="0.0337%" height="15" fill="rgb(218,133,21)" fg:x="26812" fg:w="28"/><text x="32.5676%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (17 samples, 0.02%)</title><rect x="32.3514%" y="485" width="0.0205%" height="15" fill="rgb(221,193,43)" fg:x="26840" fg:w="17"/><text x="32.6014%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (17 samples, 0.02%)</title><rect x="32.3514%" y="469" width="0.0205%" height="15" fill="rgb(240,128,52)" fg:x="26840" fg:w="17"/><text x="32.6014%" y="479.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,216 samples, 1.47%)</title><rect x="31.2581%" y="501" width="1.4657%" height="15" fill="rgb(253,114,12)" fg:x="25933" fg:w="1216"/><text x="31.5081%" y="511.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (289 samples, 0.35%)</title><rect x="32.3755%" y="485" width="0.3483%" height="15" fill="rgb(215,223,47)" fg:x="26860" fg:w="289"/><text x="32.6255%" y="495.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::memtable::Memtable&gt; (1,329 samples, 1.60%)</title><rect x="31.2352%" y="517" width="1.6019%" height="15" fill="rgb(248,225,23)" fg:x="25914" fg:w="1329"/><text x="31.4852%" y="527.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (88 samples, 0.11%)</title><rect x="32.7311%" y="501" width="0.1061%" height="15" fill="rgb(250,108,0)" fg:x="27155" fg:w="88"/><text x="32.9811%" y="511.50"></text></g><g><title>optiprism`parquet2::write::file::FileWriter&lt;W&gt;::end (9 samples, 0.01%)</title><rect x="32.8371%" y="517" width="0.0108%" height="15" fill="rgb(228,208,7)" fg:x="27243" fg:w="9"/><text x="33.0871%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.03%)</title><rect x="32.8649%" y="357" width="0.0301%" height="15" fill="rgb(244,45,10)" fg:x="27266" fg:w="25"/><text x="33.1149%" y="367.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::boolean::basic::build_statistics (47 samples, 0.06%)</title><rect x="32.9034%" y="341" width="0.0567%" height="15" fill="rgb(207,125,25)" fg:x="27298" fg:w="47"/><text x="33.1534%" y="351.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::boolean::basic::encode_plain (38 samples, 0.05%)</title><rect x="32.9601%" y="341" width="0.0458%" height="15" fill="rgb(210,195,18)" fg:x="27345" fg:w="38"/><text x="33.2101%" y="351.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::bitmap::encode_bool (38 samples, 0.05%)</title><rect x="32.9601%" y="325" width="0.0458%" height="15" fill="rgb(249,80,12)" fg:x="27345" fg:w="38"/><text x="33.2101%" y="335.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::boolean::basic::array_to_page (89 samples, 0.11%)</title><rect x="32.9034%" y="357" width="0.1073%" height="15" fill="rgb(221,65,9)" fg:x="27298" fg:w="89"/><text x="33.1534%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (24 samples, 0.03%)</title><rect x="33.0107%" y="341" width="0.0289%" height="15" fill="rgb(235,49,36)" fg:x="27387" fg:w="24"/><text x="33.2607%" y="351.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::fixed_len_bytes::array_to_page (35 samples, 0.04%)</title><rect x="33.0107%" y="357" width="0.0422%" height="15" fill="rgb(225,32,20)" fg:x="27387" fg:w="35"/><text x="33.2607%" y="367.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::fixed_len_bytes::build_statistics_decimal (18 samples, 0.02%)</title><rect x="33.0529%" y="357" width="0.0217%" height="15" fill="rgb(215,141,46)" fg:x="27422" fg:w="18"/><text x="33.3029%" y="367.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (109 samples, 0.13%)</title><rect x="33.0770%" y="341" width="0.1314%" height="15" fill="rgb(250,160,47)" fg:x="27442" fg:w="109"/><text x="33.3270%" y="351.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::primitive::basic::encode_plain (15 samples, 0.02%)</title><rect x="33.2168%" y="325" width="0.0181%" height="15" fill="rgb(216,222,40)" fg:x="27558" fg:w="15"/><text x="33.4668%" y="335.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::primitive::basic::array_to_page (24 samples, 0.03%)</title><rect x="33.2084%" y="341" width="0.0289%" height="15" fill="rgb(234,217,39)" fg:x="27551" fg:w="24"/><text x="33.4584%" y="351.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::primitive::basic::build_statistics (209 samples, 0.25%)</title><rect x="33.2373%" y="341" width="0.2519%" height="15" fill="rgb(207,178,40)" fg:x="27575" fg:w="209"/><text x="33.4873%" y="351.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::primitive::basic::encode_plain (232 samples, 0.28%)</title><rect x="33.4892%" y="341" width="0.2796%" height="15" fill="rgb(221,136,13)" fg:x="27784" fg:w="232"/><text x="33.7392%" y="351.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::primitive::basic::array_to_page_integer (630 samples, 0.76%)</title><rect x="33.0746%" y="357" width="0.7594%" height="15" fill="rgb(249,199,10)" fg:x="27440" fg:w="630"/><text x="33.3246%" y="367.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::utils::write_def_levels (54 samples, 0.07%)</title><rect x="33.7689%" y="341" width="0.0651%" height="15" fill="rgb(249,222,13)" fg:x="28016" fg:w="54"/><text x="34.0189%" y="351.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::encoder::encode_bool (49 samples, 0.06%)</title><rect x="33.7749%" y="325" width="0.0591%" height="15" fill="rgb(244,185,38)" fg:x="28021" fg:w="49"/><text x="34.0249%" y="335.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::bitmap::encode_bool (49 samples, 0.06%)</title><rect x="33.7749%" y="309" width="0.0591%" height="15" fill="rgb(236,202,9)" fg:x="28021" fg:w="49"/><text x="34.0249%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.03%)</title><rect x="33.8340%" y="341" width="0.0301%" height="15" fill="rgb(250,229,37)" fg:x="28070" fg:w="25"/><text x="34.0840%" y="351.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (202 samples, 0.24%)</title><rect x="33.8641%" y="341" width="0.2435%" height="15" fill="rgb(206,174,23)" fg:x="28095" fg:w="202"/><text x="34.1141%" y="351.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 0.06%)</title><rect x="34.1076%" y="341" width="0.0591%" height="15" fill="rgb(211,33,43)" fg:x="28297" fg:w="49"/><text x="34.3576%" y="351.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::utf8::basic::encode_plain (70 samples, 0.08%)</title><rect x="34.1678%" y="341" width="0.0844%" height="15" fill="rgb(245,58,50)" fg:x="28347" fg:w="70"/><text x="34.4178%" y="351.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::utf8::basic::array_to_page (388 samples, 0.47%)</title><rect x="33.8340%" y="357" width="0.4677%" height="15" fill="rgb(244,68,36)" fg:x="28070" fg:w="388"/><text x="34.0840%" y="367.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::utils::write_def_levels (41 samples, 0.05%)</title><rect x="34.2522%" y="341" width="0.0494%" height="15" fill="rgb(232,229,15)" fg:x="28417" fg:w="41"/><text x="34.5022%" y="351.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::encoder::encode_bool (41 samples, 0.05%)</title><rect x="34.2522%" y="325" width="0.0494%" height="15" fill="rgb(254,30,23)" fg:x="28417" fg:w="41"/><text x="34.5022%" y="335.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::bitmap::encode_bool (41 samples, 0.05%)</title><rect x="34.2522%" y="309" width="0.0494%" height="15" fill="rgb(235,160,14)" fg:x="28417" fg:w="41"/><text x="34.5022%" y="319.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,201 samples, 1.45%)</title><rect x="32.8624%" y="405" width="1.4476%" height="15" fill="rgb(212,155,44)" fg:x="27264" fg:w="1201"/><text x="33.1124%" y="415.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,200 samples, 1.45%)</title><rect x="32.8637%" y="389" width="1.4464%" height="15" fill="rgb(226,2,50)" fg:x="27265" fg:w="1200"/><text x="33.1137%" y="399.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::array_to_page_simple (1,200 samples, 1.45%)</title><rect x="32.8637%" y="373" width="1.4464%" height="15" fill="rgb(234,177,6)" fg:x="27265" fg:w="1200"/><text x="33.1137%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (22 samples, 0.03%)</title><rect x="34.3113%" y="389" width="0.0265%" height="15" fill="rgb(217,24,9)" fg:x="28466" fg:w="22"/><text x="34.5613%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (21 samples, 0.03%)</title><rect x="34.3125%" y="373" width="0.0253%" height="15" fill="rgb(220,13,46)" fg:x="28467" fg:w="21"/><text x="34.5625%" y="383.50"></text></g><g><title>libsystem_platform.dylib`__bzero (11 samples, 0.01%)</title><rect x="34.3378%" y="389" width="0.0133%" height="15" fill="rgb(239,221,27)" fg:x="28488" fg:w="11"/><text x="34.5878%" y="399.50"></text></g><g><title>optiprism`&lt;fallible_streaming_iterator::MapErr&lt;I,F&gt; as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (1,433 samples, 1.73%)</title><rect x="32.8564%" y="437" width="1.7273%" height="15" fill="rgb(222,198,25)" fg:x="27259" fg:w="1433"/><text x="33.1064%" y="447.50"></text></g><g><title>optiprism`&lt;parquet2::write::compression::Compressor&lt;I&gt; as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (1,432 samples, 1.73%)</title><rect x="32.8576%" y="421" width="1.7260%" height="15" fill="rgb(211,99,13)" fg:x="27260" fg:w="1432"/><text x="33.1076%" y="431.50"></text></g><g><title>optiprism`parquet2::write::compression::compress (226 samples, 0.27%)</title><rect x="34.3113%" y="405" width="0.2724%" height="15" fill="rgb(232,111,31)" fg:x="28466" fg:w="226"/><text x="34.5613%" y="415.50"></text></g><g><title>optiprism`parquet2::compression::compress (193 samples, 0.23%)</title><rect x="34.3510%" y="389" width="0.2326%" height="15" fill="rgb(245,82,37)" fg:x="28499" fg:w="193"/><text x="34.6010%" y="399.50"></text></g><g><title>optiprism`snap::compress::Encoder::compress (190 samples, 0.23%)</title><rect x="34.3547%" y="373" width="0.2290%" height="15" fill="rgb(227,149,46)" fg:x="28502" fg:w="190"/><text x="34.6047%" y="383.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::array::primitive::PrimitiveArray&lt;i64&gt;&gt; (10 samples, 0.01%)</title><rect x="34.5861%" y="389" width="0.0121%" height="15" fill="rgb(218,36,50)" fg:x="28694" fg:w="10"/><text x="34.8361%" y="399.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.01%)</title><rect x="34.5861%" y="373" width="0.0121%" height="15" fill="rgb(226,80,48)" fg:x="28694" fg:w="10"/><text x="34.8361%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (10 samples, 0.01%)</title><rect x="34.5861%" y="357" width="0.0121%" height="15" fill="rgb(238,224,15)" fg:x="28694" fg:w="10"/><text x="34.8361%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (10 samples, 0.01%)</title><rect x="34.5861%" y="341" width="0.0121%" height="15" fill="rgb(241,136,10)" fg:x="28694" fg:w="10"/><text x="34.8361%" y="351.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;fallible_streaming_iterator::MapErr&lt;parquet2::write::compression::Compressor&lt;parquet2::write::dyn_iter::DynIter&lt;core::result::Result&lt;parquet2::page::Page,parquet2::error::Error&gt;&gt;&gt;,&lt;arrow2::error::Error as core::convert::From&lt;parquet2::error::Error&gt;&gt;::from&gt;&gt; (25 samples, 0.03%)</title><rect x="34.5837%" y="437" width="0.0301%" height="15" fill="rgb(208,32,45)" fg:x="28692" fg:w="25"/><text x="34.8337%" y="447.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;parquet2::write::dyn_iter::DynIter&lt;core::result::Result&lt;parquet2::page::Page,arrow2::error::Error&gt;&gt;,arrow2::io::parquet::write::row_group::row_group_iter&lt;alloc::boxed::Box&lt;dyn arrow2::array::Array&gt;&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (25 samples, 0.03%)</title><rect x="34.5837%" y="421" width="0.0301%" height="15" fill="rgb(207,135,9)" fg:x="28692" fg:w="25"/><text x="34.8337%" y="431.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::step_by::StepBy&lt;core::ops::range::Range&lt;usize&gt;&gt;,arrow2::io::parquet::write::array_to_pages::{{closure}}&gt;&gt; (25 samples, 0.03%)</title><rect x="34.5837%" y="405" width="0.0301%" height="15" fill="rgb(206,86,44)" fg:x="28692" fg:w="25"/><text x="34.8337%" y="415.50"></text></g><g><title>optiprism`std::io::Write::write_all (27 samples, 0.03%)</title><rect x="34.6222%" y="405" width="0.0325%" height="15" fill="rgb(245,177,15)" fg:x="28724" fg:w="27"/><text x="34.8722%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`write (27 samples, 0.03%)</title><rect x="34.6222%" y="389" width="0.0325%" height="15" fill="rgb(206,64,50)" fg:x="28724" fg:w="27"/><text x="34.8722%" y="399.50"></text></g><g><title>optiprism`parquet2::write::page::write_page (54 samples, 0.07%)</title><rect x="34.6162%" y="437" width="0.0651%" height="15" fill="rgb(234,36,40)" fg:x="28719" fg:w="54"/><text x="34.8662%" y="447.50"></text></g><g><title>optiprism`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (49 samples, 0.06%)</title><rect x="34.6222%" y="421" width="0.0591%" height="15" fill="rgb(213,64,8)" fg:x="28724" fg:w="49"/><text x="34.8722%" y="431.50"></text></g><g><title>optiprism`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (22 samples, 0.03%)</title><rect x="34.6548%" y="405" width="0.0265%" height="15" fill="rgb(210,75,36)" fg:x="28751" fg:w="22"/><text x="34.9048%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`write (22 samples, 0.03%)</title><rect x="34.6548%" y="389" width="0.0265%" height="15" fill="rgb(229,88,21)" fg:x="28751" fg:w="22"/><text x="34.9048%" y="399.50"></text></g><g><title>optiprism`parquet2::write::file::FileWriter&lt;W&gt;::write (1,523 samples, 1.84%)</title><rect x="32.8480%" y="517" width="1.8357%" height="15" fill="rgb(252,204,47)" fg:x="27252" fg:w="1523"/><text x="33.0980%" y="527.50">o..</text></g><g><title>optiprism`core::iter::adapters::try_process (1,523 samples, 1.84%)</title><rect x="32.8480%" y="501" width="1.8357%" height="15" fill="rgb(208,77,27)" fg:x="27252" fg:w="1523"/><text x="33.0980%" y="511.50">o..</text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,523 samples, 1.84%)</title><rect x="32.8480%" y="485" width="1.8357%" height="15" fill="rgb(221,76,26)" fg:x="27252" fg:w="1523"/><text x="33.0980%" y="495.50">o..</text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,523 samples, 1.84%)</title><rect x="32.8480%" y="469" width="1.8357%" height="15" fill="rgb(225,139,18)" fg:x="27252" fg:w="1523"/><text x="33.0980%" y="479.50">o..</text></g><g><title>optiprism`parquet2::write::column_chunk::write_column_chunk (1,516 samples, 1.83%)</title><rect x="32.8564%" y="453" width="1.8273%" height="15" fill="rgb(230,137,11)" fg:x="27259" fg:w="1516"/><text x="33.1064%" y="463.50">o..</text></g><g><title>optiprism`std::fs::OpenOptions::_open (9 samples, 0.01%)</title><rect x="34.6922%" y="517" width="0.0108%" height="15" fill="rgb(212,28,1)" fg:x="28782" fg:w="9"/><text x="34.9422%" y="527.50"></text></g><g><title>optiprism`std::sys::unix::fs::File::open_c (9 samples, 0.01%)</title><rect x="34.6922%" y="501" width="0.0108%" height="15" fill="rgb(248,164,17)" fg:x="28782" fg:w="9"/><text x="34.9422%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__open (9 samples, 0.01%)</title><rect x="34.6922%" y="485" width="0.0108%" height="15" fill="rgb(222,171,42)" fg:x="28782" fg:w="9"/><text x="34.9422%" y="495.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="34.7078%" y="501" width="0.0181%" height="15" fill="rgb(243,84,45)" fg:x="28795" fg:w="15"/><text x="34.9578%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.02%)</title><rect x="36.1542%" y="437" width="0.0217%" height="15" fill="rgb(252,49,23)" fg:x="29995" fg:w="18"/><text x="36.4042%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.02%)</title><rect x="36.1771%" y="437" width="0.0229%" height="15" fill="rgb(215,19,7)" fg:x="30014" fg:w="19"/><text x="36.4271%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.02%)</title><rect x="36.2000%" y="437" width="0.0205%" height="15" fill="rgb(238,81,41)" fg:x="30033" fg:w="17"/><text x="36.4500%" y="447.50"></text></g><g><title>optiprism`&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="36.2205%" y="437" width="0.0169%" height="15" fill="rgb(210,199,37)" fg:x="30050" fg:w="14"/><text x="36.4705%" y="447.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,262 samples, 1.52%)</title><rect x="34.7259%" y="469" width="1.5211%" height="15" fill="rgb(244,192,49)" fg:x="28810" fg:w="1262"/><text x="34.9759%" y="479.50"></text></g><g><title>optiprism`&lt;storage::Value as core::clone::Clone&gt;::clone (864 samples, 1.04%)</title><rect x="35.2056%" y="453" width="1.0414%" height="15" fill="rgb(226,211,11)" fg:x="29208" fg:w="864"/><text x="35.4556%" y="463.50"></text></g><g><title>optiprism`storage::memtable::Column::clone (1,544 samples, 1.86%)</title><rect x="34.7259%" y="485" width="1.8610%" height="15" fill="rgb(236,162,54)" fg:x="28810" fg:w="1544"/><text x="34.9759%" y="495.50">o..</text></g><g><title>optiprism`&lt;storage::Value as core::clone::Clone&gt;::clone (282 samples, 0.34%)</title><rect x="36.2470%" y="469" width="0.3399%" height="15" fill="rgb(220,229,9)" fg:x="30072" fg:w="282"/><text x="36.4970%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.01%)</title><rect x="36.5882%" y="469" width="0.0108%" height="15" fill="rgb(250,87,22)" fg:x="30355" fg:w="9"/><text x="36.8382%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (429 samples, 0.52%)</title><rect x="36.5990%" y="469" width="0.5171%" height="15" fill="rgb(239,43,17)" fg:x="30364" fg:w="429"/><text x="36.8490%" y="479.50"></text></g><g><title>optiprism`&lt;arrow2::array::boolean::mutable::MutableBooleanArray as core::convert::From&lt;P&gt;&gt;::from (40 samples, 0.05%)</title><rect x="37.1161%" y="469" width="0.0482%" height="15" fill="rgb(231,177,25)" fg:x="30793" fg:w="40"/><text x="37.3661%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (79 samples, 0.10%)</title><rect x="37.1667%" y="453" width="0.0952%" height="15" fill="rgb(219,179,1)" fg:x="30835" fg:w="79"/><text x="37.4167%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`madvise (79 samples, 0.10%)</title><rect x="37.1667%" y="437" width="0.0952%" height="15" fill="rgb(238,219,53)" fg:x="30835" fg:w="79"/><text x="37.4167%" y="447.50"></text></g><g><title>optiprism`&lt;arrow2::array::primitive::mutable::MutablePrimitiveArray&lt;T&gt; as core::convert::From&lt;P&gt;&gt;::from (509 samples, 0.61%)</title><rect x="37.1667%" y="469" width="0.6135%" height="15" fill="rgb(232,167,36)" fg:x="30835" fg:w="509"/><text x="37.4167%" y="479.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (430 samples, 0.52%)</title><rect x="37.2619%" y="453" width="0.5183%" height="15" fill="rgb(244,19,51)" fg:x="30914" fg:w="430"/><text x="37.5119%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (16 samples, 0.02%)</title><rect x="38.1997%" y="453" width="0.0193%" height="15" fill="rgb(224,6,22)" fg:x="31692" fg:w="16"/><text x="38.4497%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`madvise (16 samples, 0.02%)</title><rect x="38.1997%" y="437" width="0.0193%" height="15" fill="rgb(224,145,5)" fg:x="31692" fg:w="16"/><text x="38.4497%" y="447.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (345 samples, 0.42%)</title><rect x="38.2190%" y="453" width="0.4158%" height="15" fill="rgb(234,130,49)" fg:x="31708" fg:w="345"/><text x="38.4690%" y="463.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (94 samples, 0.11%)</title><rect x="38.5215%" y="437" width="0.1133%" height="15" fill="rgb(254,6,2)" fg:x="31959" fg:w="94"/><text x="38.7715%" y="447.50"></text></g><g><title>optiprism`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (897 samples, 1.08%)</title><rect x="37.7899%" y="469" width="1.0812%" height="15" fill="rgb(208,96,46)" fg:x="31352" fg:w="897"/><text x="38.0399%" y="479.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (196 samples, 0.24%)</title><rect x="38.6348%" y="453" width="0.2362%" height="15" fill="rgb(239,3,39)" fg:x="32053" fg:w="196"/><text x="38.8848%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (35 samples, 0.04%)</title><rect x="38.9048%" y="453" width="0.0422%" height="15" fill="rgb(233,210,1)" fg:x="32277" fg:w="35"/><text x="39.1548%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (13 samples, 0.02%)</title><rect x="38.9470%" y="453" width="0.0157%" height="15" fill="rgb(244,137,37)" fg:x="32312" fg:w="13"/><text x="39.1970%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`madvise (13 samples, 0.02%)</title><rect x="38.9470%" y="437" width="0.0157%" height="15" fill="rgb(240,136,2)" fg:x="32312" fg:w="13"/><text x="39.1970%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (30 samples, 0.04%)</title><rect x="38.9711%" y="453" width="0.0362%" height="15" fill="rgb(239,18,37)" fg:x="32332" fg:w="30"/><text x="39.2211%" y="463.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (152 samples, 0.18%)</title><rect x="39.0073%" y="453" width="0.1832%" height="15" fill="rgb(218,185,22)" fg:x="32362" fg:w="152"/><text x="39.2573%" y="463.50"></text></g><g><title>optiprism`arrow2::array::utf8::mutable::MutableUtf8Array&lt;O&gt;::from (272 samples, 0.33%)</title><rect x="38.8711%" y="469" width="0.3279%" height="15" fill="rgb(225,218,4)" fg:x="32249" fg:w="272"/><text x="39.1211%" y="479.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,774 samples, 4.55%)</title><rect x="34.7259%" y="501" width="4.5490%" height="15" fill="rgb(230,182,32)" fg:x="28810" fg:w="3774"/><text x="34.9759%" y="511.50">optip..</text></g><g><title>optiprism`storage::memtable::Column::into_array (2,230 samples, 2.69%)</title><rect x="36.5870%" y="485" width="2.6879%" height="15" fill="rgb(242,56,43)" fg:x="30354" fg:w="2230"/><text x="36.8370%" y="495.50">op..</text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (63 samples, 0.08%)</title><rect x="39.1989%" y="469" width="0.0759%" height="15" fill="rgb(233,99,24)" fg:x="32521" fg:w="63"/><text x="39.4489%" y="479.50"></text></g><g><title>optiprism`arrow2::array::ord::compare_primitives::_{{closure}} (17 samples, 0.02%)</title><rect x="39.2978%" y="453" width="0.0205%" height="15" fill="rgb(234,209,42)" fg:x="32603" fg:w="17"/><text x="39.5478%" y="463.50"></text></g><g><title>optiprism`arrow2::compute::sort::lex_sort::build_compare_impl::_{{closure}} (15 samples, 0.02%)</title><rect x="39.3183%" y="453" width="0.0181%" height="15" fill="rgb(227,7,12)" fg:x="32620" fg:w="15"/><text x="39.5683%" y="463.50"></text></g><g><title>optiprism`arrow2::compute::sort::lex_sort::lexsort_to_indices_impl (66 samples, 0.08%)</title><rect x="39.2749%" y="501" width="0.0796%" height="15" fill="rgb(245,203,43)" fg:x="32584" fg:w="66"/><text x="39.5249%" y="511.50"></text></g><g><title>optiprism`core::slice::sort::recurse (60 samples, 0.07%)</title><rect x="39.2821%" y="485" width="0.0723%" height="15" fill="rgb(238,205,33)" fg:x="32590" fg:w="60"/><text x="39.5321%" y="495.50"></text></g><g><title>optiprism`core::slice::sort::partial_insertion_sort (57 samples, 0.07%)</title><rect x="39.2857%" y="469" width="0.0687%" height="15" fill="rgb(231,56,7)" fg:x="32593" fg:w="57"/><text x="39.5357%" y="479.50"></text></g><g><title>optiprism`arrow2::compute::sort::lex_sort::build_is_valid::_{{closure}} (15 samples, 0.02%)</title><rect x="39.3363%" y="453" width="0.0181%" height="15" fill="rgb(244,186,29)" fg:x="32635" fg:w="15"/><text x="39.5863%" y="463.50"></text></g><g><title>optiprism`arrow2::compute::take::boolean::take (11 samples, 0.01%)</title><rect x="39.3556%" y="453" width="0.0133%" height="15" fill="rgb(234,111,31)" fg:x="32651" fg:w="11"/><text x="39.6056%" y="463.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (174 samples, 0.21%)</title><rect x="39.4713%" y="437" width="0.2097%" height="15" fill="rgb(241,149,10)" fg:x="32747" fg:w="174"/><text x="39.7213%" y="447.50"></text></g><g><title>optiprism`arrow2::compute::take::primitive::take (261 samples, 0.31%)</title><rect x="39.3689%" y="453" width="0.3146%" height="15" fill="rgb(249,206,44)" fg:x="32662" fg:w="261"/><text x="39.6189%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.02%)</title><rect x="39.6835%" y="421" width="0.0205%" height="15" fill="rgb(251,153,30)" fg:x="32923" fg:w="17"/><text x="39.9335%" y="431.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.02%)</title><rect x="39.7040%" y="421" width="0.0217%" height="15" fill="rgb(239,152,38)" fg:x="32940" fg:w="18"/><text x="39.9540%" y="431.50"></text></g><g><title>optiprism`arrow2::compute::take::generic_binary::take_no_validity (43 samples, 0.05%)</title><rect x="39.6835%" y="437" width="0.0518%" height="15" fill="rgb(249,139,47)" fg:x="32923" fg:w="43"/><text x="39.9335%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (61 samples, 0.07%)</title><rect x="39.7992%" y="421" width="0.0735%" height="15" fill="rgb(244,64,35)" fg:x="33019" fg:w="61"/><text x="40.0492%" y="431.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (91 samples, 0.11%)</title><rect x="39.8727%" y="421" width="0.1097%" height="15" fill="rgb(216,46,15)" fg:x="33080" fg:w="91"/><text x="40.1227%" y="431.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (91 samples, 0.11%)</title><rect x="39.8727%" y="405" width="0.1097%" height="15" fill="rgb(250,74,19)" fg:x="33080" fg:w="91"/><text x="40.1227%" y="415.50"></text></g><g><title>optiprism`DYLD-STUB$$memcpy (32 samples, 0.04%)</title><rect x="39.9824%" y="421" width="0.0386%" height="15" fill="rgb(249,42,33)" fg:x="33171" fg:w="32"/><text x="40.2324%" y="431.50"></text></g><g><title>optiprism`storage::db::flush (7,357 samples, 8.87%)</title><rect x="31.2123%" y="533" width="8.8677%" height="15" fill="rgb(242,149,17)" fg:x="25895" fg:w="7357"/><text x="31.4623%" y="543.50">optiprism`sto..</text></g><g><title>optiprism`storage::memtable::Partition::chunk (4,458 samples, 5.37%)</title><rect x="34.7066%" y="517" width="5.3734%" height="15" fill="rgb(244,29,21)" fg:x="28794" fg:w="4458"/><text x="34.9566%" y="527.50">optipri..</text></g><g><title>optiprism`core::iter::adapters::try_process (602 samples, 0.73%)</title><rect x="39.3544%" y="501" width="0.7256%" height="15" fill="rgb(220,130,37)" fg:x="32650" fg:w="602"/><text x="39.6044%" y="511.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (602 samples, 0.73%)</title><rect x="39.3544%" y="485" width="0.7256%" height="15" fill="rgb(211,67,2)" fg:x="32650" fg:w="602"/><text x="39.6044%" y="495.50"></text></g><g><title>optiprism`arrow2::compute::take::take (601 samples, 0.72%)</title><rect x="39.3556%" y="469" width="0.7244%" height="15" fill="rgb(235,68,52)" fg:x="32651" fg:w="601"/><text x="39.6056%" y="479.50"></text></g><g><title>optiprism`arrow2::compute::take::utf8::take (329 samples, 0.40%)</title><rect x="39.6835%" y="453" width="0.3966%" height="15" fill="rgb(246,142,3)" fg:x="32923" fg:w="329"/><text x="39.9335%" y="463.50"></text></g><g><title>optiprism`arrow2::compute::take::generic_binary::take_values_validity (286 samples, 0.34%)</title><rect x="39.7353%" y="437" width="0.3447%" height="15" fill="rgb(241,25,7)" fg:x="32966" fg:w="286"/><text x="39.9853%" y="447.50"></text></g><g><title>optiprism`arrow2::compute::take::generic_binary::take_values (48 samples, 0.06%)</title><rect x="40.0222%" y="421" width="0.0579%" height="15" fill="rgb(242,119,39)" fg:x="33204" fg:w="48"/><text x="40.2722%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.05%)</title><rect x="40.1825%" y="517" width="0.0482%" height="15" fill="rgb(241,98,45)" fg:x="33337" fg:w="40"/><text x="40.4325%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.03%)</title><rect x="40.2307%" y="517" width="0.0265%" height="15" fill="rgb(254,28,30)" fg:x="33377" fg:w="22"/><text x="40.4807%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (89 samples, 0.11%)</title><rect x="40.2572%" y="517" width="0.1073%" height="15" fill="rgb(241,142,54)" fg:x="33399" fg:w="89"/><text x="40.5072%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.03%)</title><rect x="40.3645%" y="517" width="0.0350%" height="15" fill="rgb(222,85,15)" fg:x="33488" fg:w="29"/><text x="40.6145%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`madvise (152 samples, 0.18%)</title><rect x="40.4296%" y="501" width="0.1832%" height="15" fill="rgb(210,85,47)" fg:x="33542" fg:w="152"/><text x="40.6796%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (178 samples, 0.21%)</title><rect x="40.3995%" y="517" width="0.2146%" height="15" fill="rgb(224,206,25)" fg:x="33517" fg:w="178"/><text x="40.6495%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_small (24 samples, 0.03%)</title><rect x="40.6140%" y="517" width="0.0289%" height="15" fill="rgb(243,201,19)" fg:x="33695" fg:w="24"/><text x="40.8640%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (16 samples, 0.02%)</title><rect x="40.7490%" y="501" width="0.0193%" height="15" fill="rgb(236,59,4)" fg:x="33807" fg:w="16"/><text x="40.9990%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (33 samples, 0.04%)</title><rect x="40.9226%" y="485" width="0.0398%" height="15" fill="rgb(254,179,45)" fg:x="33951" fg:w="33"/><text x="41.1726%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (276 samples, 0.33%)</title><rect x="40.6429%" y="517" width="0.3327%" height="15" fill="rgb(226,14,10)" fg:x="33719" fg:w="276"/><text x="40.8929%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (168 samples, 0.20%)</title><rect x="40.7731%" y="501" width="0.2025%" height="15" fill="rgb(244,27,41)" fg:x="33827" fg:w="168"/><text x="41.0231%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.01%)</title><rect x="40.9623%" y="485" width="0.0133%" height="15" fill="rgb(235,35,32)" fg:x="33984" fg:w="11"/><text x="41.2123%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`medium_region_for_ptr_no_lock (14 samples, 0.02%)</title><rect x="40.9852%" y="517" width="0.0169%" height="15" fill="rgb(218,68,31)" fg:x="34003" fg:w="14"/><text x="41.2352%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.02%)</title><rect x="41.0118%" y="517" width="0.0157%" height="15" fill="rgb(207,120,37)" fg:x="34025" fg:w="13"/><text x="41.2618%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (12 samples, 0.01%)</title><rect x="41.0467%" y="501" width="0.0145%" height="15" fill="rgb(227,98,0)" fg:x="34054" fg:w="12"/><text x="41.2967%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.04%)</title><rect x="41.0274%" y="517" width="0.0434%" height="15" fill="rgb(207,7,3)" fg:x="34038" fg:w="36"/><text x="41.2774%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.01%)</title><rect x="41.0708%" y="517" width="0.0133%" height="15" fill="rgb(206,98,19)" fg:x="34074" fg:w="11"/><text x="41.3208%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (123 samples, 0.15%)</title><rect x="41.0841%" y="517" width="0.1483%" height="15" fill="rgb(217,5,26)" fg:x="34085" fg:w="123"/><text x="41.3341%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (36 samples, 0.04%)</title><rect x="41.2323%" y="517" width="0.0434%" height="15" fill="rgb(235,190,38)" fg:x="34208" fg:w="36"/><text x="41.4823%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (9 samples, 0.01%)</title><rect x="41.4433%" y="485" width="0.0108%" height="15" fill="rgb(247,86,24)" fg:x="34383" fg:w="9"/><text x="41.6933%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.02%)</title><rect x="41.4541%" y="485" width="0.0229%" height="15" fill="rgb(205,101,16)" fg:x="34392" fg:w="19"/><text x="41.7041%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (72 samples, 0.09%)</title><rect x="41.4999%" y="469" width="0.0868%" height="15" fill="rgb(246,168,33)" fg:x="34430" fg:w="72"/><text x="41.7499%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (20 samples, 0.02%)</title><rect x="41.7591%" y="453" width="0.0241%" height="15" fill="rgb(231,114,1)" fg:x="34645" fg:w="20"/><text x="42.0091%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (310 samples, 0.37%)</title><rect x="41.4360%" y="501" width="0.3737%" height="15" fill="rgb(207,184,53)" fg:x="34377" fg:w="310"/><text x="41.6860%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (276 samples, 0.33%)</title><rect x="41.4770%" y="485" width="0.3327%" height="15" fill="rgb(224,95,51)" fg:x="34411" fg:w="276"/><text x="41.7270%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (184 samples, 0.22%)</title><rect x="41.5879%" y="469" width="0.2218%" height="15" fill="rgb(212,188,45)" fg:x="34503" fg:w="184"/><text x="41.8379%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.03%)</title><rect x="41.7832%" y="453" width="0.0265%" height="15" fill="rgb(223,154,38)" fg:x="34665" fg:w="22"/><text x="42.0332%" y="463.50"></text></g><g><title>optiprism`&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (467 samples, 0.56%)</title><rect x="41.2757%" y="517" width="0.5629%" height="15" fill="rgb(251,22,52)" fg:x="34244" fg:w="467"/><text x="41.5257%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.03%)</title><rect x="41.8097%" y="501" width="0.0289%" height="15" fill="rgb(229,209,22)" fg:x="34687" fg:w="24"/><text x="42.0597%" y="511.50"></text></g><g><title>optiprism`DYLD-STUB$$free (15 samples, 0.02%)</title><rect x="41.8447%" y="517" width="0.0181%" height="15" fill="rgb(234,138,34)" fg:x="34716" fg:w="15"/><text x="42.0947%" y="527.50"></text></g><g><title>optiprism`DYLD-STUB$$malloc (10 samples, 0.01%)</title><rect x="41.8627%" y="517" width="0.0121%" height="15" fill="rgb(212,95,11)" fg:x="34731" fg:w="10"/><text x="42.1127%" y="527.50"></text></g><g><title>optiprism`DYLD-STUB$$memcpy (19 samples, 0.02%)</title><rect x="41.8748%" y="517" width="0.0229%" height="15" fill="rgb(240,179,47)" fg:x="34741" fg:w="19"/><text x="42.1248%" y="527.50"></text></g><g><title>optiprism`__rdl_alloc (11 samples, 0.01%)</title><rect x="41.8977%" y="517" width="0.0133%" height="15" fill="rgb(240,163,11)" fg:x="34760" fg:w="11"/><text x="42.1477%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (14 samples, 0.02%)</title><rect x="41.9857%" y="469" width="0.0169%" height="15" fill="rgb(236,37,12)" fg:x="34833" fg:w="14"/><text x="42.2357%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (124 samples, 0.15%)</title><rect x="41.9254%" y="501" width="0.1495%" height="15" fill="rgb(232,164,16)" fg:x="34783" fg:w="124"/><text x="42.1754%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (106 samples, 0.13%)</title><rect x="41.9471%" y="485" width="0.1278%" height="15" fill="rgb(244,205,15)" fg:x="34801" fg:w="106"/><text x="42.1971%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (59 samples, 0.07%)</title><rect x="42.0038%" y="469" width="0.0711%" height="15" fill="rgb(223,117,47)" fg:x="34848" fg:w="59"/><text x="42.2538%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="42.0640%" y="453" width="0.0108%" height="15" fill="rgb(244,107,35)" fg:x="34898" fg:w="9"/><text x="42.3140%" y="463.50"></text></g><g><title>optiprism`&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (91 samples, 0.11%)</title><rect x="42.0761%" y="501" width="0.1097%" height="15" fill="rgb(205,140,8)" fg:x="34908" fg:w="91"/><text x="42.3261%" y="511.50"></text></g><g><title>optiprism`storage::_::_&lt;impl serde::ser::Serialize for storage::KeyValue&gt;::serialize (15 samples, 0.02%)</title><rect x="42.1858%" y="501" width="0.0181%" height="15" fill="rgb(228,84,46)" fg:x="34999" fg:w="15"/><text x="42.4358%" y="511.50"></text></g><g><title>optiprism`storage::_::_&lt;impl serde::ser::Serialize for storage::Value&gt;::serialize (581 samples, 0.70%)</title><rect x="42.2038%" y="501" width="0.7003%" height="15" fill="rgb(254,188,9)" fg:x="35014" fg:w="581"/><text x="42.4538%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.03%)</title><rect x="43.3453%" y="485" width="0.0301%" height="15" fill="rgb(206,112,54)" fg:x="35961" fg:w="25"/><text x="43.5953%" y="495.50"></text></g><g><title>optiprism`&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (126 samples, 0.15%)</title><rect x="43.3754%" y="485" width="0.1519%" height="15" fill="rgb(216,84,49)" fg:x="35986" fg:w="126"/><text x="43.6254%" y="495.50"></text></g><g><title>optiprism`storage::_::_&lt;impl serde::ser::Serialize for storage::KeyValue&gt;::serialize (26 samples, 0.03%)</title><rect x="43.5285%" y="485" width="0.0313%" height="15" fill="rgb(214,194,35)" fg:x="36113" fg:w="26"/><text x="43.7785%" y="495.50"></text></g><g><title>optiprism`bincode::internal::serialize (1,739 samples, 2.10%)</title><rect x="41.9158%" y="517" width="2.0961%" height="15" fill="rgb(249,28,3)" fg:x="34775" fg:w="1739"/><text x="42.1658%" y="527.50">o..</text></g><g><title>optiprism`storage::db::_::_&lt;impl serde::ser::Serialize for storage::db::LogOp&gt;::serialize (919 samples, 1.11%)</title><rect x="42.9042%" y="501" width="1.1077%" height="15" fill="rgb(222,56,52)" fg:x="35595" fg:w="919"/><text x="43.1542%" y="511.50"></text></g><g><title>optiprism`storage::_::_&lt;impl serde::ser::Serialize for storage::Value&gt;::serialize (375 samples, 0.45%)</title><rect x="43.5599%" y="485" width="0.4520%" height="15" fill="rgb(245,217,50)" fg:x="36139" fg:w="375"/><text x="43.8099%" y="495.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (99 samples, 0.12%)</title><rect x="44.0119%" y="517" width="0.1193%" height="15" fill="rgb(213,201,24)" fg:x="36514" fg:w="99"/><text x="44.2619%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (84 samples, 0.10%)</title><rect x="44.2517%" y="501" width="0.1012%" height="15" fill="rgb(248,116,28)" fg:x="36713" fg:w="84"/><text x="44.5017%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (23 samples, 0.03%)</title><rect x="44.3542%" y="501" width="0.0277%" height="15" fill="rgb(219,72,43)" fg:x="36798" fg:w="23"/><text x="44.6042%" y="511.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::db::LogOp&gt; (461 samples, 0.56%)</title><rect x="44.1312%" y="517" width="0.5557%" height="15" fill="rgb(209,138,14)" fg:x="36613" fg:w="461"/><text x="44.3812%" y="527.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::Value&gt; (253 samples, 0.30%)</title><rect x="44.3819%" y="501" width="0.3050%" height="15" fill="rgb(222,18,33)" fg:x="36821" fg:w="253"/><text x="44.6319%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`write (13,471 samples, 16.24%)</title><rect x="44.7061%" y="501" width="16.2372%" height="15" fill="rgb(213,199,7)" fg:x="37090" fg:w="13471"/><text x="44.9561%" y="511.50">libsystem_kernel.dylib`wr..</text></g><g><title>optiprism`std::io::Write::write_all (13,495 samples, 16.27%)</title><rect x="44.6869%" y="517" width="16.2661%" height="15" fill="rgb(250,110,10)" fg:x="37074" fg:w="13495"/><text x="44.9369%" y="527.50">optiprism`std::io::Write:..</text></g><g><title>optiprism`storage::db::log_op (17,325 samples, 20.88%)</title><rect x="40.0800%" y="533" width="20.8826%" height="15" fill="rgb(248,123,6)" fg:x="33252" fg:w="17325"/><text x="40.3300%" y="543.50">optiprism`storage::db::log_op</text></g><g><title>optiprism`storage::db::siphash (75 samples, 0.09%)</title><rect x="60.9626%" y="533" width="0.0904%" height="15" fill="rgb(206,91,31)" fg:x="50577" fg:w="75"/><text x="61.2126%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (2,460 samples, 2.97%)</title><rect x="62.8815%" y="437" width="2.9651%" height="15" fill="rgb(211,154,13)" fg:x="52169" fg:w="2460"/><text x="63.1315%" y="447.50">lib..</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2,460 samples, 2.97%)</title><rect x="62.8815%" y="421" width="2.9651%" height="15" fill="rgb(225,148,7)" fg:x="52169" fg:w="2460"/><text x="63.1315%" y="431.50">lib..</text></g><g><title>libsystem_kernel.dylib`madvise (294 samples, 0.35%)</title><rect x="65.8490%" y="421" width="0.3544%" height="15" fill="rgb(220,160,43)" fg:x="54631" fg:w="294"/><text x="66.0990%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (302 samples, 0.36%)</title><rect x="65.8466%" y="437" width="0.3640%" height="15" fill="rgb(213,52,39)" fg:x="54629" fg:w="302"/><text x="66.0966%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2,773 samples, 3.34%)</title><rect x="62.8815%" y="453" width="3.3424%" height="15" fill="rgb(243,137,7)" fg:x="52169" fg:w="2773"/><text x="63.1315%" y="463.50">lib..</text></g><g><title>optiprism`storage::db::OptiDBImpl::insert (48,356 samples, 58.29%)</title><rect x="8.9509%" y="549" width="58.2855%" height="15" fill="rgb(230,79,13)" fg:x="7426" fg:w="48356"/><text x="9.2009%" y="559.50">optiprism`storage::db::OptiDBImpl::insert</text></g><g><title>optiprism`storage::memtable::Partition::push_value (5,130 samples, 6.18%)</title><rect x="61.0530%" y="533" width="6.1834%" height="15" fill="rgb(247,105,23)" fg:x="50652" fg:w="5130"/><text x="61.3030%" y="543.50">optipris..</text></g><g><title>optiprism`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3,613 samples, 4.35%)</title><rect x="62.8815%" y="517" width="4.3549%" height="15" fill="rgb(223,179,41)" fg:x="52169" fg:w="3613"/><text x="63.1315%" y="527.50">optip..</text></g><g><title>optiprism`alloc::raw_vec::finish_grow (3,613 samples, 4.35%)</title><rect x="62.8815%" y="501" width="4.3549%" height="15" fill="rgb(218,9,34)" fg:x="52169" fg:w="3613"/><text x="63.1315%" y="511.50">optip..</text></g><g><title>libsystem_malloc.dylib`_realloc (3,613 samples, 4.35%)</title><rect x="62.8815%" y="485" width="4.3549%" height="15" fill="rgb(222,106,8)" fg:x="52169" fg:w="3613"/><text x="63.1315%" y="495.50">libsy..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3,613 samples, 4.35%)</title><rect x="62.8815%" y="469" width="4.3549%" height="15" fill="rgb(211,220,0)" fg:x="52169" fg:w="3613"/><text x="63.1315%" y="479.50">libsy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (840 samples, 1.01%)</title><rect x="66.2239%" y="453" width="1.0125%" height="15" fill="rgb(229,52,16)" fg:x="54942" fg:w="840"/><text x="66.4739%" y="463.50"></text></g><g><title>optiprism`storage::db::siphash (13 samples, 0.02%)</title><rect x="67.2424%" y="549" width="0.0157%" height="15" fill="rgb(212,155,18)" fg:x="55787" fg:w="13"/><text x="67.4924%" y="559.50"></text></g><g><title>optiprism`cmd::test::gen::_{{closure}} (55,993 samples, 67.49%)</title><rect x="0.2218%" y="565" width="67.4907%" height="15" fill="rgb(242,21,14)" fg:x="184" fg:w="55993"/><text x="0.4718%" y="575.50">optiprism`cmd::test::gen::_{{closure}}</text></g><g><title>optiprism`storage::memtable::Partition::push_value (377 samples, 0.45%)</title><rect x="67.2581%" y="549" width="0.4544%" height="15" fill="rgb(222,19,48)" fg:x="55800" fg:w="377"/><text x="67.5081%" y="559.50"></text></g><g><title>optiprism`std::rt::lang_start::_{{closure}} (56,186 samples, 67.72%)</title><rect x="0.0000%" y="661" width="67.7233%" height="15" fill="rgb(232,45,27)" fg:x="0" fg:w="56186"/><text x="0.2500%" y="671.50">optiprism`std::rt::lang_start::_{{closure}}</text></g><g><title>optiprism`std::sys_common::backtrace::__rust_begin_short_backtrace (56,186 samples, 67.72%)</title><rect x="0.0000%" y="645" width="67.7233%" height="15" fill="rgb(249,103,42)" fg:x="0" fg:w="56186"/><text x="0.2500%" y="655.50">optiprism`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>optiprism`optiprism::main (56,186 samples, 67.72%)</title><rect x="0.0000%" y="629" width="67.7233%" height="15" fill="rgb(246,81,33)" fg:x="0" fg:w="56186"/><text x="0.2500%" y="639.50">optiprism`optiprism::main</text></g><g><title>optiprism`tokio::runtime::context::runtime::enter_runtime (56,186 samples, 67.72%)</title><rect x="0.0000%" y="613" width="67.7233%" height="15" fill="rgb(252,33,42)" fg:x="0" fg:w="56186"/><text x="0.2500%" y="623.50">optiprism`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>optiprism`tokio::runtime::park::CachedParkThread::block_on (56,186 samples, 67.72%)</title><rect x="0.0000%" y="597" width="67.7233%" height="15" fill="rgb(209,212,41)" fg:x="0" fg:w="56186"/><text x="0.2500%" y="607.50">optiprism`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>optiprism`tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (56,186 samples, 67.72%)</title><rect x="0.0000%" y="581" width="67.7233%" height="15" fill="rgb(207,154,6)" fg:x="0" fg:w="56186"/><text x="0.2500%" y="591.50">optiprism`tokio::runtime::park::CachedParkThread::block_on::_{{closure}}</text></g><g><title>dyld`start (56,187 samples, 67.72%)</title><rect x="0.0000%" y="725" width="67.7246%" height="15" fill="rgb(223,64,47)" fg:x="0" fg:w="56187"/><text x="0.2500%" y="735.50">dyld`start</text></g><g><title>optiprism`main (56,187 samples, 67.72%)</title><rect x="0.0000%" y="709" width="67.7246%" height="15" fill="rgb(211,161,38)" fg:x="0" fg:w="56187"/><text x="0.2500%" y="719.50">optiprism`main</text></g><g><title>optiprism`std::rt::lang_start (56,187 samples, 67.72%)</title><rect x="0.0000%" y="693" width="67.7246%" height="15" fill="rgb(219,138,40)" fg:x="0" fg:w="56187"/><text x="0.2500%" y="703.50">optiprism`std::rt::lang_start</text></g><g><title>optiprism`std::rt::lang_start_internal (56,187 samples, 67.72%)</title><rect x="0.0000%" y="677" width="67.7246%" height="15" fill="rgb(241,228,46)" fg:x="0" fg:w="56187"/><text x="0.2500%" y="687.50">optiprism`std::rt::lang_start_internal</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="67.7282%" y="645" width="0.0181%" height="15" fill="rgb(223,209,38)" fg:x="56190" fg:w="15"/><text x="67.9782%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (45 samples, 0.05%)</title><rect x="67.7463%" y="645" width="0.0542%" height="15" fill="rgb(236,164,45)" fg:x="56205" fg:w="45"/><text x="67.9963%" y="655.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.04%)</title><rect x="67.8041%" y="645" width="0.0422%" height="15" fill="rgb(231,15,5)" fg:x="56253" fg:w="35"/><text x="68.0541%" y="655.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="67.8463%" y="645" width="0.0193%" height="15" fill="rgb(252,35,15)" fg:x="56288" fg:w="16"/><text x="68.0963%" y="655.50"></text></g><g><title>optiprism`DYLD-STUB$$free (20 samples, 0.02%)</title><rect x="67.8668%" y="645" width="0.0241%" height="15" fill="rgb(248,181,18)" fg:x="56305" fg:w="20"/><text x="68.1168%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (16 samples, 0.02%)</title><rect x="67.9017%" y="533" width="0.0193%" height="15" fill="rgb(233,39,42)" fg:x="56334" fg:w="16"/><text x="68.1517%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`madvise (16 samples, 0.02%)</title><rect x="67.9017%" y="517" width="0.0193%" height="15" fill="rgb(238,110,33)" fg:x="56334" fg:w="16"/><text x="68.1517%" y="527.50"></text></g><g><title>optiprism`&lt;arrow2::array::growable::primitive::GrowablePrimitive&lt;T&gt; as arrow2::array::growable::Growable&gt;::extend (56 samples, 0.07%)</title><rect x="67.9210%" y="517" width="0.0675%" height="15" fill="rgb(233,195,10)" fg:x="56350" fg:w="56"/><text x="68.1710%" y="527.50"></text></g><g><title>optiprism`&lt;arrow2::array::growable::utf8::GrowableUtf8&lt;O&gt; as arrow2::array::growable::Growable&gt;::extend (12 samples, 0.01%)</title><rect x="67.9885%" y="517" width="0.0145%" height="15" fill="rgb(254,105,3)" fg:x="56406" fg:w="12"/><text x="68.2385%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (222 samples, 0.27%)</title><rect x="68.1633%" y="501" width="0.2676%" height="15" fill="rgb(221,225,9)" fg:x="56551" fg:w="222"/><text x="68.4133%" y="511.50"></text></g><g><title>optiprism`&lt;arrow2::array::growable::primitive::GrowablePrimitive&lt;T&gt; as arrow2::array::growable::Growable&gt;::extend (185 samples, 0.22%)</title><rect x="68.4333%" y="501" width="0.2230%" height="15" fill="rgb(224,227,45)" fg:x="56775" fg:w="185"/><text x="68.6833%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (32 samples, 0.04%)</title><rect x="68.7382%" y="389" width="0.0386%" height="15" fill="rgb(229,198,43)" fg:x="57028" fg:w="32"/><text x="68.9882%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (33 samples, 0.04%)</title><rect x="68.7382%" y="405" width="0.0398%" height="15" fill="rgb(206,209,35)" fg:x="57028" fg:w="33"/><text x="68.9882%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (35 samples, 0.04%)</title><rect x="68.7382%" y="421" width="0.0422%" height="15" fill="rgb(245,195,53)" fg:x="57028" fg:w="35"/><text x="68.9882%" y="431.50"></text></g><g><title>optiprism`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (45 samples, 0.05%)</title><rect x="68.7382%" y="485" width="0.0542%" height="15" fill="rgb(240,92,26)" fg:x="57028" fg:w="45"/><text x="68.9882%" y="495.50"></text></g><g><title>optiprism`alloc::raw_vec::finish_grow (45 samples, 0.05%)</title><rect x="68.7382%" y="469" width="0.0542%" height="15" fill="rgb(207,40,23)" fg:x="57028" fg:w="45"/><text x="68.9882%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (45 samples, 0.05%)</title><rect x="68.7382%" y="453" width="0.0542%" height="15" fill="rgb(223,111,35)" fg:x="57028" fg:w="45"/><text x="68.9882%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (45 samples, 0.05%)</title><rect x="68.7382%" y="437" width="0.0542%" height="15" fill="rgb(229,147,28)" fg:x="57028" fg:w="45"/><text x="68.9882%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.01%)</title><rect x="68.7804%" y="421" width="0.0121%" height="15" fill="rgb(211,29,28)" fg:x="57063" fg:w="10"/><text x="69.0304%" y="431.50"></text></g><g><title>optiprism`arrow2::offset::Offsets&lt;O&gt;::try_extend_from_slice (91 samples, 0.11%)</title><rect x="68.7925%" y="485" width="0.1097%" height="15" fill="rgb(228,72,33)" fg:x="57073" fg:w="91"/><text x="69.0425%" y="495.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::error::Error&gt; (24 samples, 0.03%)</title><rect x="68.8732%" y="469" width="0.0289%" height="15" fill="rgb(205,214,31)" fg:x="57140" fg:w="24"/><text x="69.1232%" y="479.50"></text></g><g><title>optiprism`&lt;arrow2::array::growable::utf8::GrowableUtf8&lt;O&gt; as arrow2::array::growable::Growable&gt;::extend (216 samples, 0.26%)</title><rect x="68.6575%" y="501" width="0.2604%" height="15" fill="rgb(224,111,15)" fg:x="56961" fg:w="216"/><text x="68.9075%" y="511.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::error::Error&gt; (13 samples, 0.02%)</title><rect x="68.9022%" y="485" width="0.0157%" height="15" fill="rgb(253,21,26)" fg:x="57164" fg:w="13"/><text x="69.1522%" y="495.50"></text></g><g><title>optiprism`DYLD-STUB$$memcpy (18 samples, 0.02%)</title><rect x="68.9178%" y="501" width="0.0217%" height="15" fill="rgb(245,139,43)" fg:x="57177" fg:w="18"/><text x="69.1678%" y="511.50"></text></g><g><title>optiprism`arrow2::array::growable::utils::build_extend_null_bits::_{{closure}} (64 samples, 0.08%)</title><rect x="68.9395%" y="501" width="0.0771%" height="15" fill="rgb(252,170,7)" fg:x="57195" fg:w="64"/><text x="69.1895%" y="511.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (876 samples, 1.06%)</title><rect x="68.0030%" y="517" width="1.0559%" height="15" fill="rgb(231,118,14)" fg:x="56418" fg:w="876"/><text x="68.2530%" y="527.50"></text></g><g><title>optiprism`arrow2::offset::Offsets&lt;O&gt;::try_extend_from_slice (35 samples, 0.04%)</title><rect x="69.0167%" y="501" width="0.0422%" height="15" fill="rgb(238,83,0)" fg:x="57259" fg:w="35"/><text x="69.2667%" y="511.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (945 samples, 1.14%)</title><rect x="67.9210%" y="533" width="1.1390%" height="15" fill="rgb(221,39,39)" fg:x="56350" fg:w="945"/><text x="68.1710%" y="543.50"></text></g><g><title>optiprism`alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (1,025 samples, 1.24%)</title><rect x="69.0601%" y="533" width="1.2355%" height="15" fill="rgb(222,119,46)" fg:x="57295" fg:w="1025"/><text x="69.3101%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`madvise (58 samples, 0.07%)</title><rect x="70.2955%" y="453" width="0.0699%" height="15" fill="rgb(222,165,49)" fg:x="58320" fg:w="58"/><text x="70.5455%" y="463.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::array::primitive::PrimitiveArray&lt;i64&gt;&gt; (64 samples, 0.08%)</title><rect x="70.2955%" y="501" width="0.0771%" height="15" fill="rgb(219,113,52)" fg:x="58320" fg:w="64"/><text x="70.5455%" y="511.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (64 samples, 0.08%)</title><rect x="70.2955%" y="485" width="0.0771%" height="15" fill="rgb(214,7,15)" fg:x="58320" fg:w="64"/><text x="70.5455%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (64 samples, 0.08%)</title><rect x="70.2955%" y="469" width="0.0771%" height="15" fill="rgb(235,32,4)" fg:x="58320" fg:w="64"/><text x="70.5455%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (27 samples, 0.03%)</title><rect x="70.3727%" y="453" width="0.0325%" height="15" fill="rgb(238,90,54)" fg:x="58384" fg:w="27"/><text x="70.6227%" y="463.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::parquet::arrow_merger::ArrowChunk&gt; (93 samples, 0.11%)</title><rect x="70.2955%" y="533" width="0.1121%" height="15" fill="rgb(213,208,19)" fg:x="58320" fg:w="93"/><text x="70.5455%" y="543.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.11%)</title><rect x="70.2955%" y="517" width="0.1121%" height="15" fill="rgb(233,156,4)" fg:x="58320" fg:w="93"/><text x="70.5455%" y="527.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::array::utf8::Utf8Array&lt;i32&gt;&gt; (29 samples, 0.03%)</title><rect x="70.3727%" y="501" width="0.0350%" height="15" fill="rgb(207,194,5)" fg:x="58384" fg:w="29"/><text x="70.6227%" y="511.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (29 samples, 0.03%)</title><rect x="70.3727%" y="485" width="0.0350%" height="15" fill="rgb(206,111,30)" fg:x="58384" fg:w="29"/><text x="70.6227%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (29 samples, 0.03%)</title><rect x="70.3727%" y="469" width="0.0350%" height="15" fill="rgb(243,70,54)" fg:x="58384" fg:w="29"/><text x="70.6227%" y="479.50"></text></g><g><title>optiprism`core::ptr::drop_in_place$LT$core..iter..adapters..map..Map$LT$core..iter..adapters..map..Map$LT$arrow2..io..parquet..read..deserialize..primitive..integer..IntegerIter$LT$i64$C$parquet2..read..compression..BasicDecompressor$LT$alloc..boxed..Box$LT$dyn$u20$core..iter..traits..iterator..Iterator$u2b$Item$u20$$u3d$$u20$core..result..Result$LT$parquet2..page..CompressedPage$C$parquet2..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$C$i32$C$arrow2..io..parquet..read..deserialize..simple..page_iter_to_arrays$LT$parquet2..read..compression..BasicDecompressor$LT$alloc..boxed..Box$LT$dyn$u20$core..iter..traits..iterator..Iterator$u2b$Item$u20$$u3d$$u20$core..result..Result$LT$parquet2..page..CompressedPage$C$parquet2..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$C$arrow2..io..parquet..read..deserialize..simple..iden$LT$i64$C$arrow2..io..parquet..read..deserialize..primitive..integer..IntegerIter$LT$i64$C$parquet2..read..compression.+ (10 samples, 0.01%)</title><rect x="70.4076%" y="437" width="0.0121%" height="15" fill="rgb(242,28,8)" fg:x="58413" fg:w="10"/><text x="70.6576%" y="447.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="70.4076%" y="485" width="0.0241%" height="15" fill="rgb(219,106,18)" fg:x="58413" fg:w="20"/><text x="70.6576%" y="495.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::array::fmt::get_value_display&lt;core::fmt::Formatter&gt;::{{closure}}&gt; (20 samples, 0.02%)</title><rect x="70.4076%" y="469" width="0.0241%" height="15" fill="rgb(244,222,10)" fg:x="58413" fg:w="20"/><text x="70.6576%" y="479.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::array::fmt::get_value_display&lt;core::fmt::Formatter&gt;::{{closure}}&gt; (20 samples, 0.02%)</title><rect x="70.4076%" y="453" width="0.0241%" height="15" fill="rgb(236,179,52)" fg:x="58413" fg:w="20"/><text x="70.6576%" y="463.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::binary::basic::finish (21 samples, 0.03%)</title><rect x="70.4330%" y="373" width="0.0253%" height="15" fill="rgb(213,23,39)" fg:x="58434" fg:w="21"/><text x="70.6830%" y="383.50"></text></g><g><title>optiprism`arrow2::array::utf8::Utf8Array&lt;O&gt;::try_new (21 samples, 0.03%)</title><rect x="70.4330%" y="357" width="0.0253%" height="15" fill="rgb(238,48,10)" fg:x="58434" fg:w="21"/><text x="70.6830%" y="367.50"></text></g><g><title>optiprism`arrow2::array::specification::try_check_utf8 (21 samples, 0.03%)</title><rect x="70.4330%" y="341" width="0.0253%" height="15" fill="rgb(251,196,23)" fg:x="58434" fg:w="21"/><text x="70.6830%" y="351.50"></text></g><g><title>optiprism`simdutf8::implementation::aarch64::validate_utf8_basic_neon (10 samples, 0.01%)</title><rect x="70.4462%" y="325" width="0.0121%" height="15" fill="rgb(250,152,24)" fg:x="58445" fg:w="10"/><text x="70.6962%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.02%)</title><rect x="70.4643%" y="309" width="0.0205%" height="15" fill="rgb(209,150,17)" fg:x="58460" fg:w="17"/><text x="70.7143%" y="319.50"></text></g><g><title>libsystem_platform.dylib`__bzero (17 samples, 0.02%)</title><rect x="70.4643%" y="293" width="0.0205%" height="15" fill="rgb(234,202,34)" fg:x="58460" fg:w="17"/><text x="70.7143%" y="303.50"></text></g><g><title>optiprism`&lt;parquet2::read::compression::BasicDecompressor&lt;I&gt; as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (39 samples, 0.05%)</title><rect x="70.4583%" y="357" width="0.0470%" height="15" fill="rgb(253,148,53)" fg:x="58455" fg:w="39"/><text x="70.7083%" y="367.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress (38 samples, 0.05%)</title><rect x="70.4595%" y="341" width="0.0458%" height="15" fill="rgb(218,129,16)" fg:x="58456" fg:w="38"/><text x="70.7095%" y="351.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress_buffer (34 samples, 0.04%)</title><rect x="70.4643%" y="325" width="0.0410%" height="15" fill="rgb(216,85,19)" fg:x="58460" fg:w="34"/><text x="70.7143%" y="335.50"></text></g><g><title>optiprism`parquet2::compression::decompress (17 samples, 0.02%)</title><rect x="70.4848%" y="309" width="0.0205%" height="15" fill="rgb(235,228,7)" fg:x="58477" fg:w="17"/><text x="70.7348%" y="319.50"></text></g><g><title>optiprism`snap::decompress::Decoder::decompress (17 samples, 0.02%)</title><rect x="70.4848%" y="293" width="0.0205%" height="15" fill="rgb(245,175,0)" fg:x="58477" fg:w="17"/><text x="70.7348%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (56 samples, 0.07%)</title><rect x="70.5053%" y="341" width="0.0675%" height="15" fill="rgb(208,168,36)" fg:x="58494" fg:w="56"/><text x="70.7553%" y="351.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_decoder (94 samples, 0.11%)</title><rect x="70.5800%" y="341" width="0.1133%" height="15" fill="rgb(246,171,24)" fg:x="58556" fg:w="94"/><text x="70.8300%" y="351.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::error::Error&gt; (26 samples, 0.03%)</title><rect x="70.6620%" y="325" width="0.0313%" height="15" fill="rgb(215,142,24)" fg:x="58624" fg:w="26"/><text x="70.9120%" y="335.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::binary::basic::Iter&lt;O,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (223 samples, 0.27%)</title><rect x="70.4330%" y="389" width="0.2688%" height="15" fill="rgb(250,187,7)" fg:x="58434" fg:w="223"/><text x="70.6830%" y="399.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::next (202 samples, 0.24%)</title><rect x="70.4583%" y="373" width="0.2435%" height="15" fill="rgb(228,66,33)" fg:x="58455" fg:w="202"/><text x="70.7083%" y="383.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_new_page (163 samples, 0.20%)</title><rect x="70.5053%" y="357" width="0.1965%" height="15" fill="rgb(234,215,21)" fg:x="58494" fg:w="163"/><text x="70.7553%" y="367.50"></text></g><g><title>optiprism`&lt;parquet2::read::page::reader::PageReader&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="70.7018%" y="325" width="0.0133%" height="15" fill="rgb(222,191,20)" fg:x="58657" fg:w="11"/><text x="70.9518%" y="335.50"></text></g><g><title>optiprism`parquet2::read::page::reader::next_page (11 samples, 0.01%)</title><rect x="70.7018%" y="309" width="0.0133%" height="15" fill="rgb(245,79,54)" fg:x="58657" fg:w="11"/><text x="70.9518%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (12 samples, 0.01%)</title><rect x="70.7162%" y="309" width="0.0145%" height="15" fill="rgb(240,10,37)" fg:x="58669" fg:w="12"/><text x="70.9662%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (12 samples, 0.01%)</title><rect x="70.7162%" y="293" width="0.0145%" height="15" fill="rgb(214,192,32)" fg:x="58669" fg:w="12"/><text x="70.9662%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.03%)</title><rect x="70.7307%" y="293" width="0.0313%" height="15" fill="rgb(209,36,54)" fg:x="58681" fg:w="26"/><text x="70.9807%" y="303.50"></text></g><g><title>libsystem_platform.dylib`__bzero (26 samples, 0.03%)</title><rect x="70.7307%" y="277" width="0.0313%" height="15" fill="rgb(220,10,11)" fg:x="58681" fg:w="26"/><text x="70.9807%" y="287.50"></text></g><g><title>optiprism`&lt;parquet2::read::compression::BasicDecompressor&lt;I&gt; as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (229 samples, 0.28%)</title><rect x="70.7018%" y="341" width="0.2760%" height="15" fill="rgb(221,106,17)" fg:x="58657" fg:w="229"/><text x="70.9518%" y="351.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress (217 samples, 0.26%)</title><rect x="70.7162%" y="325" width="0.2616%" height="15" fill="rgb(251,142,44)" fg:x="58669" fg:w="217"/><text x="70.9662%" y="335.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress_buffer (205 samples, 0.25%)</title><rect x="70.7307%" y="309" width="0.2471%" height="15" fill="rgb(238,13,15)" fg:x="58681" fg:w="205"/><text x="70.9807%" y="319.50"></text></g><g><title>optiprism`parquet2::compression::decompress (179 samples, 0.22%)</title><rect x="70.7620%" y="293" width="0.2158%" height="15" fill="rgb(208,107,27)" fg:x="58707" fg:w="179"/><text x="71.0120%" y="303.50"></text></g><g><title>optiprism`snap::decompress::Decoder::decompress (179 samples, 0.22%)</title><rect x="70.7620%" y="277" width="0.2158%" height="15" fill="rgb(205,136,37)" fg:x="58707" fg:w="179"/><text x="71.0120%" y="287.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::primitive::integer::IntDecoder&lt;T,P,F&gt; as arrow2::io::parquet::read::deserialize::utils::Decoder&gt;::extend_from_state (65 samples, 0.08%)</title><rect x="70.9778%" y="325" width="0.0783%" height="15" fill="rgb(250,205,27)" fg:x="58886" fg:w="65"/><text x="71.2278%" y="335.50"></text></g><g><title>optiprism`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::try_fold (65 samples, 0.08%)</title><rect x="70.9778%" y="309" width="0.0783%" height="15" fill="rgb(210,80,43)" fg:x="58886" fg:w="65"/><text x="71.2278%" y="319.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::file::FileReader&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (519 samples, 0.63%)</title><rect x="70.4318%" y="485" width="0.6256%" height="15" fill="rgb(247,160,36)" fg:x="58433" fg:w="519"/><text x="70.6818%" y="495.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::row_group::RowGroupDeserializer as core::iter::traits::iterator::Iterator&gt;::next (519 samples, 0.63%)</title><rect x="70.4318%" y="469" width="0.6256%" height="15" fill="rgb(234,13,49)" fg:x="58433" fg:w="519"/><text x="70.6818%" y="479.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (519 samples, 0.63%)</title><rect x="70.4318%" y="453" width="0.6256%" height="15" fill="rgb(234,122,0)" fg:x="58433" fg:w="519"/><text x="70.6818%" y="463.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (519 samples, 0.63%)</title><rect x="70.4318%" y="437" width="0.6256%" height="15" fill="rgb(207,146,38)" fg:x="58433" fg:w="519"/><text x="70.6818%" y="447.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (519 samples, 0.63%)</title><rect x="70.4318%" y="421" width="0.6256%" height="15" fill="rgb(207,177,25)" fg:x="58433" fg:w="519"/><text x="70.6818%" y="431.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (518 samples, 0.62%)</title><rect x="70.4330%" y="405" width="0.6244%" height="15" fill="rgb(211,178,42)" fg:x="58434" fg:w="518"/><text x="70.6830%" y="415.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (295 samples, 0.36%)</title><rect x="70.7018%" y="389" width="0.3556%" height="15" fill="rgb(230,69,54)" fg:x="58657" fg:w="295"/><text x="70.9518%" y="399.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::primitive::integer::IntegerIter&lt;T,I,P,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (295 samples, 0.36%)</title><rect x="70.7018%" y="373" width="0.3556%" height="15" fill="rgb(214,135,41)" fg:x="58657" fg:w="295"/><text x="70.9518%" y="383.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::next (295 samples, 0.36%)</title><rect x="70.7018%" y="357" width="0.3556%" height="15" fill="rgb(237,67,25)" fg:x="58657" fg:w="295"/><text x="70.9518%" y="367.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_new_page (66 samples, 0.08%)</title><rect x="70.9778%" y="341" width="0.0796%" height="15" fill="rgb(222,189,50)" fg:x="58886" fg:w="66"/><text x="71.2278%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (18 samples, 0.02%)</title><rect x="71.0585%" y="309" width="0.0217%" height="15" fill="rgb(245,148,34)" fg:x="58953" fg:w="18"/><text x="71.3085%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (19 samples, 0.02%)</title><rect x="71.0585%" y="373" width="0.0229%" height="15" fill="rgb(222,29,6)" fg:x="58953" fg:w="19"/><text x="71.3085%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (19 samples, 0.02%)</title><rect x="71.0585%" y="357" width="0.0229%" height="15" fill="rgb(221,189,43)" fg:x="58953" fg:w="19"/><text x="71.3085%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`medium_try_shrink_in_place (19 samples, 0.02%)</title><rect x="71.0585%" y="341" width="0.0229%" height="15" fill="rgb(207,36,27)" fg:x="58953" fg:w="19"/><text x="71.3085%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (19 samples, 0.02%)</title><rect x="71.0585%" y="325" width="0.0229%" height="15" fill="rgb(217,90,24)" fg:x="58953" fg:w="19"/><text x="71.3085%" y="335.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::binary::basic::finish (27 samples, 0.03%)</title><rect x="71.0585%" y="389" width="0.0325%" height="15" fill="rgb(224,66,35)" fg:x="58953" fg:w="27"/><text x="71.3085%" y="399.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::binary::basic::Iter&lt;O,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.05%)</title><rect x="71.0573%" y="405" width="0.0494%" height="15" fill="rgb(221,13,50)" fg:x="58952" fg:w="41"/><text x="71.3073%" y="415.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::next (13 samples, 0.02%)</title><rect x="71.0911%" y="389" width="0.0157%" height="15" fill="rgb(236,68,49)" fg:x="58980" fg:w="13"/><text x="71.3411%" y="399.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_new_page (11 samples, 0.01%)</title><rect x="71.0935%" y="373" width="0.0133%" height="15" fill="rgb(229,146,28)" fg:x="58982" fg:w="11"/><text x="71.3435%" y="383.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::row_group::RowGroupDeserializer as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.06%)</title><rect x="71.0573%" y="485" width="0.0567%" height="15" fill="rgb(225,31,38)" fg:x="58952" fg:w="47"/><text x="71.3073%" y="495.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (47 samples, 0.06%)</title><rect x="71.0573%" y="469" width="0.0567%" height="15" fill="rgb(250,208,3)" fg:x="58952" fg:w="47"/><text x="71.3073%" y="479.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 0.06%)</title><rect x="71.0573%" y="453" width="0.0567%" height="15" fill="rgb(246,54,23)" fg:x="58952" fg:w="47"/><text x="71.3073%" y="463.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.06%)</title><rect x="71.0573%" y="437" width="0.0567%" height="15" fill="rgb(243,76,11)" fg:x="58952" fg:w="47"/><text x="71.3073%" y="447.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.06%)</title><rect x="71.0573%" y="421" width="0.0567%" height="15" fill="rgb(245,21,50)" fg:x="58952" fg:w="47"/><text x="71.3073%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`read (33 samples, 0.04%)</title><rect x="71.1236%" y="341" width="0.0398%" height="15" fill="rgb(228,9,43)" fg:x="59007" fg:w="33"/><text x="71.3736%" y="351.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::row_group::_read_single_column (38 samples, 0.05%)</title><rect x="71.1188%" y="373" width="0.0458%" height="15" fill="rgb(208,100,47)" fg:x="59003" fg:w="38"/><text x="71.3688%" y="383.50"></text></g><g><title>optiprism`std::io::default_read_to_end (35 samples, 0.04%)</title><rect x="71.1224%" y="357" width="0.0422%" height="15" fill="rgb(232,26,8)" fg:x="59006" fg:w="35"/><text x="71.3724%" y="367.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40 samples, 0.05%)</title><rect x="71.1176%" y="437" width="0.0482%" height="15" fill="rgb(216,166,38)" fg:x="59002" fg:w="40"/><text x="71.3676%" y="447.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.05%)</title><rect x="71.1176%" y="421" width="0.0482%" height="15" fill="rgb(251,202,51)" fg:x="59002" fg:w="40"/><text x="71.3676%" y="431.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (39 samples, 0.05%)</title><rect x="71.1188%" y="405" width="0.0470%" height="15" fill="rgb(254,216,34)" fg:x="59003" fg:w="39"/><text x="71.3688%" y="415.50"></text></g><g><title>optiprism`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (39 samples, 0.05%)</title><rect x="71.1188%" y="389" width="0.0470%" height="15" fill="rgb(251,32,27)" fg:x="59003" fg:w="39"/><text x="71.3688%" y="399.50"></text></g><g><title>optiprism`storage::parquet::arrow_merger::MergingIterator::next_stream_chunk (632 samples, 0.76%)</title><rect x="70.4076%" y="533" width="0.7618%" height="15" fill="rgb(208,127,28)" fg:x="58413" fg:w="632"/><text x="70.6576%" y="543.50"></text></g><g><title>optiprism`&lt;storage::parquet::ArrowIteratorImpl as core::iter::traits::iterator::Iterator&gt;::next (632 samples, 0.76%)</title><rect x="70.4076%" y="517" width="0.7618%" height="15" fill="rgb(224,137,22)" fg:x="58413" fg:w="632"/><text x="70.6576%" y="527.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::file::FileReader&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (632 samples, 0.76%)</title><rect x="70.4076%" y="501" width="0.7618%" height="15" fill="rgb(254,70,32)" fg:x="58413" fg:w="632"/><text x="70.6576%" y="511.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::file::FileReader&lt;R&gt;::next_row_group (46 samples, 0.06%)</title><rect x="71.1140%" y="485" width="0.0554%" height="15" fill="rgb(229,75,37)" fg:x="58999" fg:w="46"/><text x="71.3640%" y="495.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::row_group::read_columns_many (43 samples, 0.05%)</title><rect x="71.1176%" y="469" width="0.0518%" height="15" fill="rgb(252,64,23)" fg:x="59002" fg:w="43"/><text x="71.3676%" y="479.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (43 samples, 0.05%)</title><rect x="71.1176%" y="453" width="0.0518%" height="15" fill="rgb(232,162,48)" fg:x="59002" fg:w="43"/><text x="71.3676%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`madvise (17 samples, 0.02%)</title><rect x="71.3346%" y="501" width="0.0205%" height="15" fill="rgb(246,160,12)" fg:x="59182" fg:w="17"/><text x="71.5846%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (18 samples, 0.02%)</title><rect x="71.3346%" y="517" width="0.0217%" height="15" fill="rgb(247,166,0)" fg:x="59182" fg:w="18"/><text x="71.5846%" y="527.50"></text></g><g><title>optiprism`&lt;storage::db::ScanStream as futures_core::stream::Stream&gt;::poll_next (2,895 samples, 3.49%)</title><rect x="67.9017%" y="565" width="3.4895%" height="15" fill="rgb(249,219,21)" fg:x="56334" fg:w="2895"/><text x="68.1517%" y="575.50">opt..</text></g><g><title>optiprism`&lt;storage::parquet::arrow_merger::MergingIterator as core::iter::traits::iterator::Iterator&gt;::next (2,895 samples, 3.49%)</title><rect x="67.9017%" y="549" width="3.4895%" height="15" fill="rgb(205,209,3)" fg:x="56334" fg:w="2895"/><text x="68.1517%" y="559.50">opt..</text></g><g><title>optiprism`storage::parquet::arrow_merger::merge_chunks (184 samples, 0.22%)</title><rect x="71.1694%" y="533" width="0.2218%" height="15" fill="rgb(243,44,1)" fg:x="59045" fg:w="184"/><text x="71.4194%" y="543.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.03%)</title><rect x="71.3575%" y="517" width="0.0337%" height="15" fill="rgb(206,159,16)" fg:x="59201" fg:w="28"/><text x="71.6075%" y="527.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.03%)</title><rect x="71.3587%" y="501" width="0.0325%" height="15" fill="rgb(244,77,30)" fg:x="59202" fg:w="27"/><text x="71.6087%" y="511.50"></text></g><g><title>optiprism`&lt;query::physical_plan::local::PartitionStream as futures_core::stream::Stream&gt;::poll_next (2,902 samples, 3.50%)</title><rect x="67.9017%" y="581" width="3.4979%" height="15" fill="rgb(218,69,12)" fg:x="56334" fg:w="2902"/><text x="68.1517%" y="591.50">opt..</text></g><g><title>libsystem_kernel.dylib`madvise (40 samples, 0.05%)</title><rect x="71.4021%" y="437" width="0.0482%" height="15" fill="rgb(212,87,7)" fg:x="59238" fg:w="40"/><text x="71.6521%" y="447.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow_array::array::byte_array::GenericByteArray&lt;arrow_array::types::GenericBinaryType&lt;i32&gt;&gt;&gt; (41 samples, 0.05%)</title><rect x="71.4021%" y="549" width="0.0494%" height="15" fill="rgb(245,114,25)" fg:x="59238" fg:w="41"/><text x="71.6521%" y="559.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (41 samples, 0.05%)</title><rect x="71.4021%" y="533" width="0.0494%" height="15" fill="rgb(210,61,42)" fg:x="59238" fg:w="41"/><text x="71.6521%" y="543.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (41 samples, 0.05%)</title><rect x="71.4021%" y="517" width="0.0494%" height="15" fill="rgb(211,52,33)" fg:x="59238" fg:w="41"/><text x="71.6521%" y="527.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;arrow2::ffi::array::PrivateData&gt;&gt; (41 samples, 0.05%)</title><rect x="71.4021%" y="501" width="0.0494%" height="15" fill="rgb(234,58,33)" fg:x="59238" fg:w="41"/><text x="71.6521%" y="511.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::array::utf8::Utf8Array&lt;i32&gt;&gt; (41 samples, 0.05%)</title><rect x="71.4021%" y="485" width="0.0494%" height="15" fill="rgb(220,115,36)" fg:x="59238" fg:w="41"/><text x="71.6521%" y="495.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (41 samples, 0.05%)</title><rect x="71.4021%" y="469" width="0.0494%" height="15" fill="rgb(243,153,54)" fg:x="59238" fg:w="41"/><text x="71.6521%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (41 samples, 0.05%)</title><rect x="71.4021%" y="453" width="0.0494%" height="15" fill="rgb(251,47,18)" fg:x="59238" fg:w="41"/><text x="71.6521%" y="463.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (77 samples, 0.09%)</title><rect x="71.4008%" y="565" width="0.0928%" height="15" fill="rgb(242,102,42)" fg:x="59237" fg:w="77"/><text x="71.6508%" y="575.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::Int8Type&gt;&gt; (35 samples, 0.04%)</title><rect x="71.4515%" y="549" width="0.0422%" height="15" fill="rgb(234,31,38)" fg:x="59279" fg:w="35"/><text x="71.7015%" y="559.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (34 samples, 0.04%)</title><rect x="71.4527%" y="533" width="0.0410%" height="15" fill="rgb(221,117,51)" fg:x="59280" fg:w="34"/><text x="71.7027%" y="543.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (33 samples, 0.04%)</title><rect x="71.4539%" y="517" width="0.0398%" height="15" fill="rgb(212,20,18)" fg:x="59281" fg:w="33"/><text x="71.7039%" y="527.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;arrow2::ffi::array::PrivateData&gt;&gt; (33 samples, 0.04%)</title><rect x="71.4539%" y="501" width="0.0398%" height="15" fill="rgb(245,133,36)" fg:x="59281" fg:w="33"/><text x="71.7039%" y="511.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::array::primitive::PrimitiveArray&lt;i64&gt;&gt; (33 samples, 0.04%)</title><rect x="71.4539%" y="485" width="0.0398%" height="15" fill="rgb(212,6,19)" fg:x="59281" fg:w="33"/><text x="71.7039%" y="495.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (33 samples, 0.04%)</title><rect x="71.4539%" y="469" width="0.0398%" height="15" fill="rgb(218,1,36)" fg:x="59281" fg:w="33"/><text x="71.7039%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (33 samples, 0.04%)</title><rect x="71.4539%" y="453" width="0.0398%" height="15" fill="rgb(246,84,54)" fg:x="59281" fg:w="33"/><text x="71.7039%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`madvise (33 samples, 0.04%)</title><rect x="71.4539%" y="437" width="0.0398%" height="15" fill="rgb(242,110,6)" fg:x="59281" fg:w="33"/><text x="71.7039%" y="447.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow_array::record_batch::RecordBatch&gt; (78 samples, 0.09%)</title><rect x="71.4008%" y="581" width="0.0940%" height="15" fill="rgb(214,47,5)" fg:x="59237" fg:w="78"/><text x="71.6508%" y="591.50"></text></g><g><title>optiprism`&lt;datafusion_physical_expr::expressions::binary::BinaryExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (12 samples, 0.01%)</title><rect x="71.4997%" y="501" width="0.0145%" height="15" fill="rgb(218,159,25)" fg:x="59319" fg:w="12"/><text x="71.7497%" y="511.50"></text></g><g><title>optiprism`datafusion_physical_expr::expressions::datum::apply_cmp (12 samples, 0.01%)</title><rect x="71.4997%" y="485" width="0.0145%" height="15" fill="rgb(215,211,28)" fg:x="59319" fg:w="12"/><text x="71.7497%" y="495.50"></text></g><g><title>optiprism`datafusion_physical_expr::expressions::datum::apply_cmp::_{{closure}} (11 samples, 0.01%)</title><rect x="71.5009%" y="469" width="0.0133%" height="15" fill="rgb(238,59,32)" fg:x="59320" fg:w="11"/><text x="71.7509%" y="479.50"></text></g><g><title>optiprism`arrow_ord::cmp::compare_op (11 samples, 0.01%)</title><rect x="71.5009%" y="453" width="0.0133%" height="15" fill="rgb(226,82,3)" fg:x="59320" fg:w="11"/><text x="71.7509%" y="463.50"></text></g><g><title>optiprism`arrow_ord::cmp::compare_op::_{{closure}} (10 samples, 0.01%)</title><rect x="71.5021%" y="437" width="0.0121%" height="15" fill="rgb(240,164,32)" fg:x="59321" fg:w="10"/><text x="71.7521%" y="447.50"></text></g><g><title>optiprism`arrow_ord::cmp::apply (10 samples, 0.01%)</title><rect x="71.5021%" y="421" width="0.0121%" height="15" fill="rgb(232,46,7)" fg:x="59321" fg:w="10"/><text x="71.7521%" y="431.50"></text></g><g><title>optiprism`arrow_ord::cmp::apply_op (10 samples, 0.01%)</title><rect x="71.5021%" y="405" width="0.0121%" height="15" fill="rgb(229,129,53)" fg:x="59321" fg:w="10"/><text x="71.7521%" y="415.50"></text></g><g><title>optiprism`&lt;datafusion_physical_expr::expressions::binary::BinaryExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (23 samples, 0.03%)</title><rect x="71.4985%" y="517" width="0.0277%" height="15" fill="rgb(234,188,29)" fg:x="59318" fg:w="23"/><text x="71.7485%" y="527.50"></text></g><g><title>optiprism`datafusion_physical_expr::expressions::datum::apply_cmp (9 samples, 0.01%)</title><rect x="71.5154%" y="501" width="0.0108%" height="15" fill="rgb(246,141,4)" fg:x="59332" fg:w="9"/><text x="71.7654%" y="511.50"></text></g><g><title>optiprism`&lt;datafusion_physical_expr::expressions::binary::BinaryExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (32 samples, 0.04%)</title><rect x="71.4973%" y="533" width="0.0386%" height="15" fill="rgb(229,23,39)" fg:x="59317" fg:w="32"/><text x="71.7473%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (57 samples, 0.07%)</title><rect x="71.5395%" y="453" width="0.0687%" height="15" fill="rgb(206,12,3)" fg:x="59352" fg:w="57"/><text x="71.7895%" y="463.50"></text></g><g><title>optiprism`DYLD-STUB$$memcmp (13 samples, 0.02%)</title><rect x="71.6082%" y="453" width="0.0157%" height="15" fill="rgb(252,226,20)" fg:x="59409" fg:w="13"/><text x="71.8582%" y="463.50"></text></g><g><title>optiprism`arrow_string::predicate::Predicate::evaluate_array (146 samples, 0.18%)</title><rect x="71.5395%" y="485" width="0.1760%" height="15" fill="rgb(216,123,35)" fg:x="59352" fg:w="146"/><text x="71.7895%" y="495.50"></text></g><g><title>optiprism`arrow_array::array::boolean_array::BooleanArray::from_unary (146 samples, 0.18%)</title><rect x="71.5395%" y="469" width="0.1760%" height="15" fill="rgb(212,68,40)" fg:x="59352" fg:w="146"/><text x="71.7895%" y="479.50"></text></g><g><title>optiprism`arrow_buffer::buffer::boolean::BooleanBuffer::collect_bool (76 samples, 0.09%)</title><rect x="71.6238%" y="453" width="0.0916%" height="15" fill="rgb(254,125,32)" fg:x="59422" fg:w="76"/><text x="71.8738%" y="463.50"></text></g><g><title>optiprism`&lt;datafusion_physical_expr::expressions::like::LikeExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (150 samples, 0.18%)</title><rect x="71.5358%" y="533" width="0.1808%" height="15" fill="rgb(253,97,22)" fg:x="59349" fg:w="150"/><text x="71.7858%" y="543.50"></text></g><g><title>optiprism`datafusion_physical_expr::expressions::datum::apply_cmp::_{{closure}} (147 samples, 0.18%)</title><rect x="71.5395%" y="517" width="0.1772%" height="15" fill="rgb(241,101,14)" fg:x="59352" fg:w="147"/><text x="71.7895%" y="527.50"></text></g><g><title>optiprism`arrow_string::like::op_scalar (147 samples, 0.18%)</title><rect x="71.5395%" y="501" width="0.1772%" height="15" fill="rgb(238,103,29)" fg:x="59352" fg:w="147"/><text x="71.7895%" y="511.50"></text></g><g><title>optiprism`&lt;datafusion_physical_expr::expressions::binary::BinaryExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (185 samples, 0.22%)</title><rect x="71.4961%" y="549" width="0.2230%" height="15" fill="rgb(233,195,47)" fg:x="59316" fg:w="185"/><text x="71.7461%" y="559.50"></text></g><g><title>optiprism`&lt;datafusion_physical_expr::expressions::binary::BinaryExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (187 samples, 0.23%)</title><rect x="71.4949%" y="565" width="0.2254%" height="15" fill="rgb(246,218,30)" fg:x="59315" fg:w="187"/><text x="71.7449%" y="575.50"></text></g><g><title>optiprism`&lt;datafusion_physical_plan::filter::FilterExecStream as futures_core::stream::Stream&gt;::poll_next (3,173 samples, 3.82%)</title><rect x="67.8993%" y="597" width="3.8246%" height="15" fill="rgb(219,145,47)" fg:x="56332" fg:w="3173"/><text x="68.1493%" y="607.50">opti..</text></g><g><title>optiprism`datafusion_physical_plan::filter::batch_filter (190 samples, 0.23%)</title><rect x="71.4949%" y="581" width="0.2290%" height="15" fill="rgb(243,12,26)" fg:x="59315" fg:w="190"/><text x="71.7449%" y="591.50"></text></g><g><title>optiprism`query::physical_plan::segmented_aggregate::Runner::run (3,181 samples, 3.83%)</title><rect x="67.8945%" y="645" width="3.8342%" height="15" fill="rgb(214,87,16)" fg:x="56328" fg:w="3181"/><text x="68.1445%" y="655.50">opti..</text></g><g><title>optiprism`futures_executor::local_pool::block_on (3,177 samples, 3.83%)</title><rect x="67.8993%" y="629" width="3.8294%" height="15" fill="rgb(208,99,42)" fg:x="56332" fg:w="3177"/><text x="68.1493%" y="639.50">opti..</text></g><g><title>optiprism`&lt;datafusion_physical_plan::coalesce_batches::CoalesceBatchesStream as futures_core::stream::Stream&gt;::poll_next (3,177 samples, 3.83%)</title><rect x="67.8993%" y="613" width="3.8294%" height="15" fill="rgb(253,99,2)" fg:x="56332" fg:w="3177"/><text x="68.1493%" y="623.50">opti..</text></g><g><title>libsystem_c.dylib`clock_gettime (14 samples, 0.02%)</title><rect x="71.8794%" y="629" width="0.0169%" height="15" fill="rgb(220,168,23)" fg:x="59634" fg:w="14"/><text x="72.1294%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.03%)</title><rect x="71.9011%" y="629" width="0.0265%" height="15" fill="rgb(242,38,24)" fg:x="59652" fg:w="22"/><text x="72.1511%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (186 samples, 0.22%)</title><rect x="71.9276%" y="629" width="0.2242%" height="15" fill="rgb(225,182,9)" fg:x="59674" fg:w="186"/><text x="72.1776%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (10 samples, 0.01%)</title><rect x="72.1518%" y="629" width="0.0121%" height="15" fill="rgb(243,178,37)" fg:x="59860" fg:w="10"/><text x="72.4018%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (69 samples, 0.08%)</title><rect x="72.1638%" y="629" width="0.0832%" height="15" fill="rgb(232,139,19)" fg:x="59870" fg:w="69"/><text x="72.4138%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.03%)</title><rect x="72.2470%" y="629" width="0.0265%" height="15" fill="rgb(225,201,24)" fg:x="59939" fg:w="22"/><text x="72.4970%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.02%)</title><rect x="72.2566%" y="613" width="0.0169%" height="15" fill="rgb(221,47,46)" fg:x="59947" fg:w="14"/><text x="72.5066%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (33 samples, 0.04%)</title><rect x="72.2747%" y="629" width="0.0398%" height="15" fill="rgb(249,23,13)" fg:x="59962" fg:w="33"/><text x="72.5247%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (14 samples, 0.02%)</title><rect x="72.3290%" y="629" width="0.0169%" height="15" fill="rgb(219,9,5)" fg:x="60007" fg:w="14"/><text x="72.5790%" y="639.50"></text></g><g><title>optiprism`&lt;alloc::string::String as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="72.3651%" y="629" width="0.0337%" height="15" fill="rgb(254,171,16)" fg:x="60037" fg:w="28"/><text x="72.6151%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (129 samples, 0.16%)</title><rect x="73.0811%" y="613" width="0.1555%" height="15" fill="rgb(230,171,20)" fg:x="60631" fg:w="129"/><text x="73.3311%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (338 samples, 0.41%)</title><rect x="73.2378%" y="613" width="0.4074%" height="15" fill="rgb(210,71,41)" fg:x="60761" fg:w="338"/><text x="73.4878%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.04%)</title><rect x="73.6464%" y="613" width="0.0386%" height="15" fill="rgb(206,173,20)" fg:x="61100" fg:w="32"/><text x="73.8964%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.02%)</title><rect x="73.6645%" y="597" width="0.0205%" height="15" fill="rgb(233,88,34)" fg:x="61115" fg:w="17"/><text x="73.9145%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.01%)</title><rect x="73.6717%" y="581" width="0.0133%" height="15" fill="rgb(223,209,46)" fg:x="61121" fg:w="11"/><text x="73.9217%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (132 samples, 0.16%)</title><rect x="73.6874%" y="613" width="0.1591%" height="15" fill="rgb(250,43,18)" fg:x="61134" fg:w="132"/><text x="73.9374%" y="623.50"></text></g><g><title>optiprism`&lt;alloc::string::String as core::clone::Clone&gt;::clone (54 samples, 0.07%)</title><rect x="73.8465%" y="613" width="0.0651%" height="15" fill="rgb(208,13,10)" fg:x="61266" fg:w="54"/><text x="74.0965%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (229 samples, 0.28%)</title><rect x="74.6432%" y="597" width="0.2760%" height="15" fill="rgb(212,200,36)" fg:x="61927" fg:w="229"/><text x="74.8932%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (412 samples, 0.50%)</title><rect x="74.9217%" y="597" width="0.4966%" height="15" fill="rgb(225,90,30)" fg:x="62158" fg:w="412"/><text x="75.1717%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.04%)</title><rect x="75.4183%" y="597" width="0.0446%" height="15" fill="rgb(236,182,39)" fg:x="62570" fg:w="37"/><text x="75.6683%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (30 samples, 0.04%)</title><rect x="75.4267%" y="581" width="0.0362%" height="15" fill="rgb(212,144,35)" fg:x="62577" fg:w="30"/><text x="75.6767%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.02%)</title><rect x="75.4399%" y="565" width="0.0229%" height="15" fill="rgb(228,63,44)" fg:x="62588" fg:w="19"/><text x="75.6899%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (86 samples, 0.10%)</title><rect x="76.2210%" y="581" width="0.1037%" height="15" fill="rgb(228,109,6)" fg:x="63236" fg:w="86"/><text x="76.4710%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (229 samples, 0.28%)</title><rect x="76.3247%" y="581" width="0.2760%" height="15" fill="rgb(238,117,24)" fg:x="63322" fg:w="229"/><text x="76.5747%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.03%)</title><rect x="76.6007%" y="581" width="0.0301%" height="15" fill="rgb(242,26,26)" fg:x="63551" fg:w="25"/><text x="76.8507%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.03%)</title><rect x="76.6055%" y="565" width="0.0253%" height="15" fill="rgb(221,92,48)" fg:x="63555" fg:w="21"/><text x="76.8555%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.01%)</title><rect x="76.6176%" y="549" width="0.0133%" height="15" fill="rgb(209,209,32)" fg:x="63565" fg:w="11"/><text x="76.8676%" y="559.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (219 samples, 0.26%)</title><rect x="76.6344%" y="581" width="0.2640%" height="15" fill="rgb(221,70,22)" fg:x="63579" fg:w="219"/><text x="76.8844%" y="591.50"></text></g><g><title>optiprism`DYLD-STUB$$malloc (12 samples, 0.01%)</title><rect x="76.8984%" y="581" width="0.0145%" height="15" fill="rgb(248,145,5)" fg:x="63798" fg:w="12"/><text x="77.1484%" y="591.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,236 samples, 1.49%)</title><rect x="75.4665%" y="597" width="1.4898%" height="15" fill="rgb(226,116,26)" fg:x="62610" fg:w="1236"/><text x="75.7165%" y="607.50"></text></g><g><title>optiprism`__rdl_alloc (36 samples, 0.04%)</title><rect x="76.9129%" y="581" width="0.0434%" height="15" fill="rgb(244,5,17)" fg:x="63810" fg:w="36"/><text x="77.1629%" y="591.50"></text></g><g><title>optiprism`DYLD-STUB$$malloc (29 samples, 0.03%)</title><rect x="76.9563%" y="597" width="0.0350%" height="15" fill="rgb(252,159,33)" fg:x="63846" fg:w="29"/><text x="77.2063%" y="607.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,640 samples, 3.18%)</title><rect x="73.9116%" y="613" width="3.1821%" height="15" fill="rgb(206,71,0)" fg:x="61320" fg:w="2640"/><text x="74.1616%" y="623.50">opt..</text></g><g><title>optiprism`__rdl_alloc (85 samples, 0.10%)</title><rect x="76.9912%" y="597" width="0.1025%" height="15" fill="rgb(233,118,54)" fg:x="63875" fg:w="85"/><text x="77.2412%" y="607.50"></text></g><g><title>optiprism`&lt;arrow2::datatypes::DataType as core::clone::Clone&gt;::clone (63 samples, 0.08%)</title><rect x="77.0937%" y="613" width="0.0759%" height="15" fill="rgb(234,83,48)" fg:x="63960" fg:w="63"/><text x="77.3437%" y="623.50"></text></g><g><title>optiprism`DYLD-STUB$$malloc (21 samples, 0.03%)</title><rect x="77.1696%" y="613" width="0.0253%" height="15" fill="rgb(228,3,54)" fg:x="64023" fg:w="21"/><text x="77.4196%" y="623.50"></text></g><g><title>optiprism`DYLD-STUB$$memcpy (14 samples, 0.02%)</title><rect x="77.1949%" y="613" width="0.0169%" height="15" fill="rgb(226,155,13)" fg:x="64044" fg:w="14"/><text x="77.4449%" y="623.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,043 samples, 4.87%)</title><rect x="72.3989%" y="629" width="4.8732%" height="15" fill="rgb(241,28,37)" fg:x="60065" fg:w="4043"/><text x="72.6489%" y="639.50">optipr..</text></g><g><title>optiprism`__rdl_alloc (50 samples, 0.06%)</title><rect x="77.2118%" y="613" width="0.0603%" height="15" fill="rgb(233,93,10)" fg:x="64058" fg:w="50"/><text x="77.4618%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (338 samples, 0.41%)</title><rect x="77.4710%" y="613" width="0.4074%" height="15" fill="rgb(225,113,19)" fg:x="64273" fg:w="338"/><text x="77.7210%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (237 samples, 0.29%)</title><rect x="77.8832%" y="613" width="0.2857%" height="15" fill="rgb(241,2,18)" fg:x="64615" fg:w="237"/><text x="78.1332%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (37 samples, 0.04%)</title><rect x="78.1688%" y="613" width="0.0446%" height="15" fill="rgb(228,207,21)" fg:x="64852" fg:w="37"/><text x="78.4188%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.03%)</title><rect x="78.1881%" y="597" width="0.0253%" height="15" fill="rgb(213,211,35)" fg:x="64868" fg:w="21"/><text x="78.4381%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (54 samples, 0.07%)</title><rect x="78.2279%" y="613" width="0.0651%" height="15" fill="rgb(209,83,10)" fg:x="64901" fg:w="54"/><text x="78.4779%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (13 samples, 0.02%)</title><rect x="78.8306%" y="597" width="0.0157%" height="15" fill="rgb(209,164,1)" fg:x="65401" fg:w="13"/><text x="79.0806%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (645 samples, 0.78%)</title><rect x="78.8462%" y="597" width="0.7774%" height="15" fill="rgb(213,184,43)" fg:x="65414" fg:w="645"/><text x="79.0962%" y="607.50"></text></g><g><title>libsystem_platform.dylib`__bzero (23 samples, 0.03%)</title><rect x="79.6237%" y="597" width="0.0277%" height="15" fill="rgb(231,61,34)" fg:x="66059" fg:w="23"/><text x="79.8737%" y="607.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,337 samples, 1.61%)</title><rect x="78.2930%" y="613" width="1.6115%" height="15" fill="rgb(235,75,3)" fg:x="64955" fg:w="1337"/><text x="78.5430%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (210 samples, 0.25%)</title><rect x="79.6514%" y="597" width="0.2531%" height="15" fill="rgb(220,106,47)" fg:x="66082" fg:w="210"/><text x="79.9014%" y="607.50"></text></g><g><title>optiprism`DYLD-STUB$$free (150 samples, 0.18%)</title><rect x="79.9045%" y="613" width="0.1808%" height="15" fill="rgb(210,196,33)" fg:x="66292" fg:w="150"/><text x="80.1545%" y="623.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,335 samples, 2.81%)</title><rect x="77.2721%" y="629" width="2.8145%" height="15" fill="rgb(229,154,42)" fg:x="64108" fg:w="2335"/><text x="77.5221%" y="639.50">op..</text></g><g><title>optiprism`&lt;arrow2::datatypes::DataType as core::clone::Clone&gt;::clone (39 samples, 0.05%)</title><rect x="80.0877%" y="629" width="0.0470%" height="15" fill="rgb(228,114,26)" fg:x="66444" fg:w="39"/><text x="80.3377%" y="639.50"></text></g><g><title>optiprism`DYLD-STUB$$free (63 samples, 0.08%)</title><rect x="80.1420%" y="629" width="0.0759%" height="15" fill="rgb(208,144,1)" fg:x="66489" fg:w="63"/><text x="80.3920%" y="639.50"></text></g><g><title>optiprism`DYLD-STUB$$sched_yield (22 samples, 0.03%)</title><rect x="80.2408%" y="629" width="0.0265%" height="15" fill="rgb(239,112,37)" fg:x="66571" fg:w="22"/><text x="80.4908%" y="639.50"></text></g><g><title>optiprism`__rdl_dealloc (13 samples, 0.02%)</title><rect x="80.2698%" y="629" width="0.0157%" height="15" fill="rgb(210,96,50)" fg:x="66595" fg:w="13"/><text x="80.5198%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (94 samples, 0.11%)</title><rect x="80.2902%" y="613" width="0.1133%" height="15" fill="rgb(222,178,2)" fg:x="66612" fg:w="94"/><text x="80.5402%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (286 samples, 0.34%)</title><rect x="80.4084%" y="613" width="0.3447%" height="15" fill="rgb(226,74,18)" fg:x="66710" fg:w="286"/><text x="80.6584%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (734 samples, 0.88%)</title><rect x="81.1352%" y="597" width="0.8847%" height="15" fill="rgb(225,67,54)" fg:x="67313" fg:w="734"/><text x="81.3852%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.04%)</title><rect x="82.0259%" y="597" width="0.0362%" height="15" fill="rgb(251,92,32)" fg:x="68052" fg:w="30"/><text x="82.2759%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.02%)</title><rect x="82.0404%" y="581" width="0.0217%" height="15" fill="rgb(228,149,22)" fg:x="68064" fg:w="18"/><text x="82.2904%" y="591.50"></text></g><g><title>libsystem_platform.dylib`__bzero (28 samples, 0.03%)</title><rect x="82.0621%" y="597" width="0.0337%" height="15" fill="rgb(243,54,13)" fg:x="68082" fg:w="28"/><text x="82.3121%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (149 samples, 0.18%)</title><rect x="82.0958%" y="597" width="0.1796%" height="15" fill="rgb(243,180,28)" fg:x="68110" fg:w="149"/><text x="82.3458%" y="607.50"></text></g><g><title>optiprism`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.07%)</title><rect x="82.2754%" y="597" width="0.0747%" height="15" fill="rgb(208,167,24)" fg:x="68259" fg:w="62"/><text x="82.5254%" y="607.50"></text></g><g><title>optiprism`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (31 samples, 0.04%)</title><rect x="82.3128%" y="581" width="0.0374%" height="15" fill="rgb(245,73,45)" fg:x="68290" fg:w="31"/><text x="82.5628%" y="591.50"></text></g><g><title>optiprism`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (31 samples, 0.04%)</title><rect x="82.3502%" y="597" width="0.0374%" height="15" fill="rgb(237,203,48)" fg:x="68321" fg:w="31"/><text x="82.6002%" y="607.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,398 samples, 1.69%)</title><rect x="80.7664%" y="613" width="1.6851%" height="15" fill="rgb(211,197,16)" fg:x="67007" fg:w="1398"/><text x="81.0164%" y="623.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::datatypes::DataType&gt; (53 samples, 0.06%)</title><rect x="82.3875%" y="597" width="0.0639%" height="15" fill="rgb(243,99,51)" fg:x="68352" fg:w="53"/><text x="82.6375%" y="607.50"></text></g><g><title>optiprism`DYLD-STUB$$free (146 samples, 0.18%)</title><rect x="82.4514%" y="613" width="0.1760%" height="15" fill="rgb(215,123,29)" fg:x="68405" fg:w="146"/><text x="82.7014%" y="623.50"></text></g><g><title>optiprism`__rdl_dealloc (9 samples, 0.01%)</title><rect x="82.6274%" y="613" width="0.0108%" height="15" fill="rgb(239,186,37)" fg:x="68551" fg:w="9"/><text x="82.8774%" y="623.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::table::Metadata&gt; (1,973 samples, 2.38%)</title><rect x="80.2878%" y="629" width="2.3781%" height="15" fill="rgb(252,136,39)" fg:x="66610" fg:w="1973"/><text x="80.5378%" y="639.50">op..</text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::datatypes::DataType&gt; (22 samples, 0.03%)</title><rect x="82.6395%" y="613" width="0.0265%" height="15" fill="rgb(223,213,32)" fg:x="68561" fg:w="22"/><text x="82.8895%" y="623.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;storage::table::Table&gt; (10 samples, 0.01%)</title><rect x="82.6660%" y="629" width="0.0121%" height="15" fill="rgb(233,115,5)" fg:x="68583" fg:w="10"/><text x="82.9160%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (5,371 samples, 6.47%)</title><rect x="83.7146%" y="613" width="6.4739%" height="15" fill="rgb(207,226,44)" fg:x="69453" fg:w="5371"/><text x="83.9646%" y="623.50">libsyste..</text></g><g><title>libsystem_kernel.dylib`swtch_pri (3,877 samples, 4.67%)</title><rect x="90.1885%" y="613" width="4.6731%" height="15" fill="rgb(208,126,0)" fg:x="74824" fg:w="3877"/><text x="90.4385%" y="623.50">libsy..</text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$swtch_pri (9 samples, 0.01%)</title><rect x="94.8640%" y="613" width="0.0108%" height="15" fill="rgb(244,66,21)" fg:x="78703" fg:w="9"/><text x="95.1140%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (14 samples, 0.02%)</title><rect x="94.9026%" y="597" width="0.0169%" height="15" fill="rgb(222,97,12)" fg:x="78735" fg:w="14"/><text x="95.1526%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (13 samples, 0.02%)</title><rect x="94.9231%" y="597" width="0.0157%" height="15" fill="rgb(219,213,19)" fg:x="78752" fg:w="13"/><text x="95.1731%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (65 samples, 0.08%)</title><rect x="94.8749%" y="613" width="0.0783%" height="15" fill="rgb(252,169,30)" fg:x="78712" fg:w="65"/><text x="95.1249%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (12 samples, 0.01%)</title><rect x="94.9388%" y="597" width="0.0145%" height="15" fill="rgb(206,32,51)" fg:x="78765" fg:w="12"/><text x="95.1888%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`cthread_yield (56 samples, 0.07%)</title><rect x="94.9532%" y="613" width="0.0675%" height="15" fill="rgb(250,172,42)" fg:x="78777" fg:w="56"/><text x="95.2032%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (13 samples, 0.02%)</title><rect x="95.0207%" y="613" width="0.0157%" height="15" fill="rgb(209,34,43)" fg:x="78833" fg:w="13"/><text x="95.2707%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (14 samples, 0.02%)</title><rect x="95.0364%" y="613" width="0.0169%" height="15" fill="rgb(223,11,35)" fg:x="78846" fg:w="14"/><text x="95.2864%" y="623.50"></text></g><g><title>optiprism`parking_lot::raw_mutex::RawMutex::lock_slow (10,271 samples, 12.38%)</title><rect x="82.6780%" y="629" width="12.3801%" height="15" fill="rgb(251,219,26)" fg:x="68593" fg:w="10271"/><text x="82.9280%" y="639.50">optiprism`parking_..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (204 samples, 0.25%)</title><rect x="95.0714%" y="613" width="0.2459%" height="15" fill="rgb(231,119,3)" fg:x="78875" fg:w="204"/><text x="95.3214%" y="623.50"></text></g><g><title>optiprism`parking_lot::raw_mutex::RawMutex::unlock_slow (227 samples, 0.27%)</title><rect x="95.0581%" y="629" width="0.2736%" height="15" fill="rgb(216,97,11)" fg:x="78864" fg:w="227"/><text x="95.3081%" y="639.50"></text></g><g><title>optiprism`std::sys::unix::time::Timespec::now (10 samples, 0.01%)</title><rect x="95.3197%" y="613" width="0.0121%" height="15" fill="rgb(223,59,9)" fg:x="79081" fg:w="10"/><text x="95.5697%" y="623.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (10 samples, 0.01%)</title><rect x="95.3197%" y="597" width="0.0121%" height="15" fill="rgb(233,93,31)" fg:x="79081" fg:w="10"/><text x="95.5697%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (9 samples, 0.01%)</title><rect x="95.3209%" y="581" width="0.0108%" height="15" fill="rgb(239,81,33)" fg:x="79082" fg:w="9"/><text x="95.5709%" y="591.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_absolute_time (9 samples, 0.01%)</title><rect x="95.3763%" y="597" width="0.0108%" height="15" fill="rgb(213,120,34)" fg:x="79128" fg:w="9"/><text x="95.6263%" y="607.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (39 samples, 0.05%)</title><rect x="95.3920%" y="597" width="0.0470%" height="15" fill="rgb(243,49,53)" fg:x="79141" fg:w="39"/><text x="95.6420%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (10 samples, 0.01%)</title><rect x="95.4269%" y="581" width="0.0121%" height="15" fill="rgb(247,216,33)" fg:x="79170" fg:w="10"/><text x="95.6769%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (257 samples, 0.31%)</title><rect x="95.4390%" y="597" width="0.3098%" height="15" fill="rgb(226,26,14)" fg:x="79180" fg:w="257"/><text x="95.6890%" y="607.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (337 samples, 0.41%)</title><rect x="95.3474%" y="613" width="0.4062%" height="15" fill="rgb(215,49,53)" fg:x="79104" fg:w="337"/><text x="95.5974%" y="623.50"></text></g><g><title>optiprism`std::sys::unix::time::Timespec::now (351 samples, 0.42%)</title><rect x="95.3365%" y="629" width="0.4231%" height="15" fill="rgb(245,162,40)" fg:x="79095" fg:w="351"/><text x="95.5865%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (12 samples, 0.01%)</title><rect x="95.7813%" y="597" width="0.0145%" height="15" fill="rgb(229,68,17)" fg:x="79464" fg:w="12"/><text x="96.0313%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (694 samples, 0.84%)</title><rect x="95.7982%" y="597" width="0.8365%" height="15" fill="rgb(213,182,10)" fg:x="79478" fg:w="694"/><text x="96.0482%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (691 samples, 0.83%)</title><rect x="95.8018%" y="581" width="0.8329%" height="15" fill="rgb(245,125,30)" fg:x="79481" fg:w="691"/><text x="96.0518%" y="591.50"></text></g><g><title>libsystem_c.dylib`nanosleep (717 samples, 0.86%)</title><rect x="95.7777%" y="613" width="0.8642%" height="15" fill="rgb(232,202,2)" fg:x="79461" fg:w="717"/><text x="96.0277%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (963 samples, 1.16%)</title><rect x="96.6443%" y="613" width="1.1607%" height="15" fill="rgb(237,140,51)" fg:x="80180" fg:w="963"/><text x="96.8943%" y="623.50"></text></g><g><title>optiprism`std::thread::sleep (1,699 samples, 2.05%)</title><rect x="95.7596%" y="629" width="2.0479%" height="15" fill="rgb(236,157,25)" fg:x="79446" fg:w="1699"/><text x="96.0096%" y="639.50">o..</text></g><g><title>optiprism`core::ptr::drop_in_place&lt;parquet2::metadata::file_metadata::FileMetaData&gt; (21 samples, 0.03%)</title><rect x="97.8219%" y="565" width="0.0253%" height="15" fill="rgb(219,209,0)" fg:x="81157" fg:w="21"/><text x="98.0719%" y="575.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.03%)</title><rect x="97.8219%" y="549" width="0.0253%" height="15" fill="rgb(240,116,54)" fg:x="81157" fg:w="21"/><text x="98.0719%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (20 samples, 0.02%)</title><rect x="97.8232%" y="533" width="0.0241%" height="15" fill="rgb(216,10,36)" fg:x="81158" fg:w="20"/><text x="98.0732%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`madvise (20 samples, 0.02%)</title><rect x="97.8232%" y="517" width="0.0241%" height="15" fill="rgb(222,72,44)" fg:x="81158" fg:w="20"/><text x="98.0732%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (14 samples, 0.02%)</title><rect x="97.8473%" y="549" width="0.0169%" height="15" fill="rgb(232,159,9)" fg:x="81178" fg:w="14"/><text x="98.0973%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (14 samples, 0.02%)</title><rect x="97.8473%" y="533" width="0.0169%" height="15" fill="rgb(210,39,32)" fg:x="81178" fg:w="14"/><text x="98.0973%" y="543.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 0.06%)</title><rect x="97.8207%" y="597" width="0.0579%" height="15" fill="rgb(216,194,45)" fg:x="81156" fg:w="48"/><text x="98.0707%" y="607.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.06%)</title><rect x="97.8207%" y="581" width="0.0579%" height="15" fill="rgb(218,18,35)" fg:x="81156" fg:w="48"/><text x="98.0707%" y="591.50"></text></g><g><title>optiprism`parquet2::read::metadata::read_metadata (26 samples, 0.03%)</title><rect x="97.8473%" y="565" width="0.0313%" height="15" fill="rgb(207,83,51)" fg:x="81178" fg:w="26"/><text x="98.0973%" y="575.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (53 samples, 0.06%)</title><rect x="97.8207%" y="613" width="0.0639%" height="15" fill="rgb(225,63,43)" fg:x="81156" fg:w="53"/><text x="98.0707%" y="623.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="97.8943%" y="581" width="0.0169%" height="15" fill="rgb(207,57,36)" fg:x="81217" fg:w="14"/><text x="98.1443%" y="591.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (14 samples, 0.02%)</title><rect x="97.8943%" y="565" width="0.0169%" height="15" fill="rgb(216,99,33)" fg:x="81217" fg:w="14"/><text x="98.1443%" y="575.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="97.8943%" y="597" width="0.0181%" height="15" fill="rgb(225,42,16)" fg:x="81217" fg:w="15"/><text x="98.1443%" y="607.50"></text></g><g><title>optiprism`&lt;arrow2::array::utf8::mutable::MutableUtf8Array&lt;O&gt; as arrow2::array::TryPush&lt;core::option::Option&lt;T&gt;&gt;&gt;::try_push (28 samples, 0.03%)</title><rect x="97.9123%" y="597" width="0.0337%" height="15" fill="rgb(220,201,45)" fg:x="81232" fg:w="28"/><text x="98.1623%" y="607.50"></text></g><g><title>optiprism`arrow2::array::primitive::mutable::MutablePrimitiveArray&lt;T&gt;::push (26 samples, 0.03%)</title><rect x="97.9582%" y="597" width="0.0313%" height="15" fill="rgb(225,33,4)" fg:x="81270" fg:w="26"/><text x="98.2082%" y="607.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (12 samples, 0.01%)</title><rect x="97.9907%" y="469" width="0.0145%" height="15" fill="rgb(224,33,50)" fg:x="81297" fg:w="12"/><text x="98.2407%" y="479.50"></text></g><g><title>optiprism`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="97.9943%" y="453" width="0.0108%" height="15" fill="rgb(246,198,51)" fg:x="81300" fg:w="9"/><text x="98.2443%" y="463.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="97.9943%" y="437" width="0.0108%" height="15" fill="rgb(205,22,4)" fg:x="81300" fg:w="9"/><text x="98.2443%" y="447.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress (9 samples, 0.01%)</title><rect x="97.9943%" y="421" width="0.0108%" height="15" fill="rgb(206,3,8)" fg:x="81300" fg:w="9"/><text x="98.2443%" y="431.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress_buffer (9 samples, 0.01%)</title><rect x="97.9943%" y="405" width="0.0108%" height="15" fill="rgb(251,23,15)" fg:x="81300" fg:w="9"/><text x="98.2443%" y="415.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (14 samples, 0.02%)</title><rect x="97.9907%" y="597" width="0.0169%" height="15" fill="rgb(252,88,28)" fg:x="81297" fg:w="14"/><text x="98.2407%" y="607.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="97.9907%" y="581" width="0.0169%" height="15" fill="rgb(212,127,14)" fg:x="81297" fg:w="14"/><text x="98.2407%" y="591.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="97.9907%" y="565" width="0.0169%" height="15" fill="rgb(247,145,37)" fg:x="81297" fg:w="14"/><text x="98.2407%" y="575.50"></text></g><g><title>optiprism`storage::parquet::parquet_merger::PagesIndexChunk::to_arrow_chunk (14 samples, 0.02%)</title><rect x="97.9907%" y="549" width="0.0169%" height="15" fill="rgb(209,117,53)" fg:x="81297" fg:w="14"/><text x="98.2407%" y="559.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (14 samples, 0.02%)</title><rect x="97.9907%" y="533" width="0.0169%" height="15" fill="rgb(212,90,42)" fg:x="81297" fg:w="14"/><text x="98.2407%" y="543.50"></text></g><g><title>optiprism`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="97.9907%" y="517" width="0.0169%" height="15" fill="rgb(218,164,37)" fg:x="81297" fg:w="14"/><text x="98.2407%" y="527.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="97.9907%" y="501" width="0.0169%" height="15" fill="rgb(246,65,34)" fg:x="81297" fg:w="14"/><text x="98.2407%" y="511.50"></text></g><g><title>optiprism`storage::parquet::pages_to_arrays (14 samples, 0.02%)</title><rect x="97.9907%" y="485" width="0.0169%" height="15" fill="rgb(231,100,33)" fg:x="81297" fg:w="14"/><text x="98.2407%" y="495.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;parquet2::page::CompressedPage&gt; (18 samples, 0.02%)</title><rect x="98.0160%" y="597" width="0.0217%" height="15" fill="rgb(228,126,14)" fg:x="81318" fg:w="18"/><text x="98.2660%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (18 samples, 0.02%)</title><rect x="98.0160%" y="581" width="0.0217%" height="15" fill="rgb(215,173,21)" fg:x="81318" fg:w="18"/><text x="98.2660%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (18 samples, 0.02%)</title><rect x="98.0160%" y="565" width="0.0217%" height="15" fill="rgb(210,6,40)" fg:x="81318" fg:w="18"/><text x="98.2660%" y="575.50"></text></g><g><title>optiprism`std::io::Write::write_all (35 samples, 0.04%)</title><rect x="98.0486%" y="549" width="0.0422%" height="15" fill="rgb(212,48,18)" fg:x="81345" fg:w="35"/><text x="98.2986%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`write (35 samples, 0.04%)</title><rect x="98.0486%" y="533" width="0.0422%" height="15" fill="rgb(230,214,11)" fg:x="81345" fg:w="35"/><text x="98.2986%" y="543.50"></text></g><g><title>optiprism`parquet2::write::seq_file::FileSeqWriter&lt;W&gt;::write_page (50 samples, 0.06%)</title><rect x="98.0461%" y="597" width="0.0603%" height="15" fill="rgb(254,105,39)" fg:x="81343" fg:w="50"/><text x="98.2961%" y="607.50"></text></g><g><title>optiprism`parquet2::write::page::write_page (50 samples, 0.06%)</title><rect x="98.0461%" y="581" width="0.0603%" height="15" fill="rgb(245,158,5)" fg:x="81343" fg:w="50"/><text x="98.2961%" y="591.50"></text></g><g><title>optiprism`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (49 samples, 0.06%)</title><rect x="98.0473%" y="565" width="0.0591%" height="15" fill="rgb(249,208,11)" fg:x="81344" fg:w="49"/><text x="98.2973%" y="575.50"></text></g><g><title>optiprism`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (13 samples, 0.02%)</title><rect x="98.0907%" y="549" width="0.0157%" height="15" fill="rgb(210,39,28)" fg:x="81380" fg:w="13"/><text x="98.3407%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`write (13 samples, 0.02%)</title><rect x="98.0907%" y="533" width="0.0157%" height="15" fill="rgb(211,56,53)" fg:x="81380" fg:w="13"/><text x="98.3407%" y="543.50"></text></g><g><title>optiprism`&lt;R as parquet_format_safe::thrift::varint::decode::VarIntReader&gt;::read_varint (20 samples, 0.02%)</title><rect x="98.1161%" y="485" width="0.0241%" height="15" fill="rgb(226,201,30)" fg:x="81401" fg:w="20"/><text x="98.3661%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`read (20 samples, 0.02%)</title><rect x="98.1161%" y="469" width="0.0241%" height="15" fill="rgb(239,101,34)" fg:x="81401" fg:w="20"/><text x="98.3661%" y="479.50"></text></g><g><title>optiprism`&lt;parquet_format_safe::parquet_format::Statistics as parquet_format_safe::thrift::protocol::ReadThrift&gt;::read_from_in_protocol (9 samples, 0.01%)</title><rect x="98.1402%" y="485" width="0.0108%" height="15" fill="rgb(226,209,5)" fg:x="81421" fg:w="9"/><text x="98.3902%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`read (13 samples, 0.02%)</title><rect x="98.1510%" y="453" width="0.0157%" height="15" fill="rgb(250,105,47)" fg:x="81430" fg:w="13"/><text x="98.4010%" y="463.50"></text></g><g><title>optiprism`&lt;parquet_format_safe::parquet_format::PageHeader as parquet_format_safe::thrift::protocol::ReadThrift&gt;::read_from_in_protocol (44 samples, 0.05%)</title><rect x="98.1148%" y="501" width="0.0530%" height="15" fill="rgb(230,72,3)" fg:x="81400" fg:w="44"/><text x="98.3648%" y="511.50"></text></g><g><title>optiprism`&lt;parquet_format_safe::thrift::protocol::compact::TCompactInputProtocol&lt;R&gt; as parquet_format_safe::thrift::protocol::TInputProtocol&gt;::read_field_begin (14 samples, 0.02%)</title><rect x="98.1510%" y="485" width="0.0169%" height="15" fill="rgb(232,218,39)" fg:x="81430" fg:w="14"/><text x="98.4010%" y="495.50"></text></g><g><title>optiprism`std::io::default_read_exact (14 samples, 0.02%)</title><rect x="98.1510%" y="469" width="0.0169%" height="15" fill="rgb(248,166,6)" fg:x="81430" fg:w="14"/><text x="98.4010%" y="479.50"></text></g><g><title>optiprism`storage::parquet::CompressedPageIterator&lt;R&gt;::next_chunk (59 samples, 0.07%)</title><rect x="98.1100%" y="597" width="0.0711%" height="15" fill="rgb(247,89,20)" fg:x="81396" fg:w="59"/><text x="98.3600%" y="607.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (57 samples, 0.07%)</title><rect x="98.1124%" y="581" width="0.0687%" height="15" fill="rgb(248,130,54)" fg:x="81398" fg:w="57"/><text x="98.3624%" y="591.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (57 samples, 0.07%)</title><rect x="98.1124%" y="565" width="0.0687%" height="15" fill="rgb(234,196,4)" fg:x="81398" fg:w="57"/><text x="98.3624%" y="575.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.07%)</title><rect x="98.1124%" y="549" width="0.0687%" height="15" fill="rgb(250,143,31)" fg:x="81398" fg:w="57"/><text x="98.3624%" y="559.50"></text></g><g><title>optiprism`&lt;parquet2::read::page::reader::PageReader&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.07%)</title><rect x="98.1136%" y="533" width="0.0675%" height="15" fill="rgb(211,110,34)" fg:x="81399" fg:w="56"/><text x="98.3636%" y="543.50"></text></g><g><title>optiprism`parquet2::read::page::reader::next_page (55 samples, 0.07%)</title><rect x="98.1148%" y="517" width="0.0663%" height="15" fill="rgb(215,124,48)" fg:x="81400" fg:w="55"/><text x="98.3648%" y="527.50"></text></g><g><title>optiprism`std::io::default_read_to_end (11 samples, 0.01%)</title><rect x="98.1679%" y="501" width="0.0133%" height="15" fill="rgb(216,46,13)" fg:x="81444" fg:w="11"/><text x="98.4179%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`read (11 samples, 0.01%)</title><rect x="98.1679%" y="485" width="0.0133%" height="15" fill="rgb(205,184,25)" fg:x="81444" fg:w="11"/><text x="98.4179%" y="495.50"></text></g><g><title>optiprism`&lt;arrow2::array::utf8::mutable::MutableUtf8Array&lt;O&gt; as arrow2::array::TryPush&lt;core::option::Option&lt;T&gt;&gt;&gt;::try_push (78 samples, 0.09%)</title><rect x="98.3595%" y="581" width="0.0940%" height="15" fill="rgb(228,1,10)" fg:x="81603" fg:w="78"/><text x="98.6095%" y="591.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::error::Error&gt; (33 samples, 0.04%)</title><rect x="98.4138%" y="565" width="0.0398%" height="15" fill="rgb(213,116,27)" fg:x="81648" fg:w="33"/><text x="98.6638%" y="575.50"></text></g><g><title>optiprism`arrow2::array::primitive::mutable::MutablePrimitiveArray&lt;T&gt;::push (73 samples, 0.09%)</title><rect x="98.4644%" y="581" width="0.0880%" height="15" fill="rgb(241,95,50)" fg:x="81690" fg:w="73"/><text x="98.7144%" y="591.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::array::primitive::PrimitiveArray&lt;i64&gt;&gt; (21 samples, 0.03%)</title><rect x="98.5536%" y="581" width="0.0253%" height="15" fill="rgb(238,48,32)" fg:x="81764" fg:w="21"/><text x="98.8036%" y="591.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (21 samples, 0.03%)</title><rect x="98.5536%" y="565" width="0.0253%" height="15" fill="rgb(235,113,49)" fg:x="81764" fg:w="21"/><text x="98.8036%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (21 samples, 0.03%)</title><rect x="98.5536%" y="549" width="0.0253%" height="15" fill="rgb(205,127,43)" fg:x="81764" fg:w="21"/><text x="98.8036%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (21 samples, 0.03%)</title><rect x="98.5536%" y="533" width="0.0253%" height="15" fill="rgb(250,162,2)" fg:x="81764" fg:w="21"/><text x="98.8036%" y="543.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::array::utf8::Utf8Array&lt;i32&gt;&gt; (9 samples, 0.01%)</title><rect x="98.5837%" y="581" width="0.0108%" height="15" fill="rgb(220,13,41)" fg:x="81789" fg:w="9"/><text x="98.8337%" y="591.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.01%)</title><rect x="98.5837%" y="565" width="0.0108%" height="15" fill="rgb(249,221,25)" fg:x="81789" fg:w="9"/><text x="98.8337%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (9 samples, 0.01%)</title><rect x="98.5837%" y="549" width="0.0108%" height="15" fill="rgb(215,208,19)" fg:x="81789" fg:w="9"/><text x="98.8337%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (9 samples, 0.01%)</title><rect x="98.5837%" y="533" width="0.0108%" height="15" fill="rgb(236,175,2)" fg:x="81789" fg:w="9"/><text x="98.8337%" y="543.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::error::Error&gt; (18 samples, 0.02%)</title><rect x="98.5946%" y="581" width="0.0217%" height="15" fill="rgb(241,52,2)" fg:x="81798" fg:w="18"/><text x="98.8446%" y="591.50"></text></g><g><title>optiprism`&lt;parquet_format_safe::parquet_format::PageHeader as parquet_format_safe::thrift::protocol::ReadThrift&gt;::read_from_in_protocol (23 samples, 0.03%)</title><rect x="98.6187%" y="469" width="0.0277%" height="15" fill="rgb(248,140,14)" fg:x="81818" fg:w="23"/><text x="98.8687%" y="479.50"></text></g><g><title>optiprism`&lt;parquet_format_safe::thrift::protocol::compact::TCompactInputProtocol&lt;R&gt; as parquet_format_safe::thrift::protocol::TInputProtocol&gt;::read_field_begin (11 samples, 0.01%)</title><rect x="98.6331%" y="453" width="0.0133%" height="15" fill="rgb(253,22,42)" fg:x="81830" fg:w="11"/><text x="98.8831%" y="463.50"></text></g><g><title>optiprism`std::io::default_read_exact (11 samples, 0.01%)</title><rect x="98.6331%" y="437" width="0.0133%" height="15" fill="rgb(234,61,47)" fg:x="81830" fg:w="11"/><text x="98.8831%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`read (11 samples, 0.01%)</title><rect x="98.6331%" y="421" width="0.0133%" height="15" fill="rgb(208,226,15)" fg:x="81830" fg:w="11"/><text x="98.8831%" y="431.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (32 samples, 0.04%)</title><rect x="98.6175%" y="549" width="0.0386%" height="15" fill="rgb(217,221,4)" fg:x="81817" fg:w="32"/><text x="98.8675%" y="559.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.04%)</title><rect x="98.6175%" y="533" width="0.0386%" height="15" fill="rgb(212,174,34)" fg:x="81817" fg:w="32"/><text x="98.8675%" y="543.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 0.04%)</title><rect x="98.6175%" y="517" width="0.0386%" height="15" fill="rgb(253,83,4)" fg:x="81817" fg:w="32"/><text x="98.8675%" y="527.50"></text></g><g><title>optiprism`&lt;parquet2::read::page::reader::PageReader&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.04%)</title><rect x="98.6175%" y="501" width="0.0386%" height="15" fill="rgb(250,195,49)" fg:x="81817" fg:w="32"/><text x="98.8675%" y="511.50"></text></g><g><title>optiprism`parquet2::read::page::reader::next_page (31 samples, 0.04%)</title><rect x="98.6187%" y="485" width="0.0374%" height="15" fill="rgb(241,192,25)" fg:x="81818" fg:w="31"/><text x="98.8687%" y="495.50"></text></g><g><title>optiprism`storage::parquet::CompressedPageIterator&lt;R&gt;::next_page (35 samples, 0.04%)</title><rect x="98.6175%" y="581" width="0.0422%" height="15" fill="rgb(208,124,10)" fg:x="81817" fg:w="35"/><text x="98.8675%" y="591.50"></text></g><g><title>optiprism`storage::parquet::CompressedPageIterator&lt;R&gt;::next_chunk (35 samples, 0.04%)</title><rect x="98.6175%" y="565" width="0.0422%" height="15" fill="rgb(222,33,0)" fg:x="81817" fg:w="35"/><text x="98.8675%" y="575.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::boolean::basic::encode_plain (10 samples, 0.01%)</title><rect x="98.6777%" y="469" width="0.0121%" height="15" fill="rgb(234,209,28)" fg:x="81867" fg:w="10"/><text x="98.9277%" y="479.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::bitmap::encode_bool (10 samples, 0.01%)</title><rect x="98.6777%" y="453" width="0.0121%" height="15" fill="rgb(224,11,23)" fg:x="81867" fg:w="10"/><text x="98.9277%" y="463.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::boolean::basic::array_to_page (19 samples, 0.02%)</title><rect x="98.6681%" y="485" width="0.0229%" height="15" fill="rgb(232,99,1)" fg:x="81859" fg:w="19"/><text x="98.9181%" y="495.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::fixed_len_bytes::array_to_page (12 samples, 0.01%)</title><rect x="98.6910%" y="485" width="0.0145%" height="15" fill="rgb(237,95,45)" fg:x="81878" fg:w="12"/><text x="98.9410%" y="495.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.03%)</title><rect x="98.7103%" y="469" width="0.0337%" height="15" fill="rgb(208,109,11)" fg:x="81894" fg:w="28"/><text x="98.9603%" y="479.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::primitive::basic::build_statistics (41 samples, 0.05%)</title><rect x="98.7489%" y="469" width="0.0494%" height="15" fill="rgb(216,190,48)" fg:x="81926" fg:w="41"/><text x="98.9989%" y="479.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::primitive::basic::encode_plain (45 samples, 0.05%)</title><rect x="98.7983%" y="469" width="0.0542%" height="15" fill="rgb(251,171,36)" fg:x="81967" fg:w="45"/><text x="99.0483%" y="479.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::bitmap::encode_bool (9 samples, 0.01%)</title><rect x="98.8525%" y="453" width="0.0108%" height="15" fill="rgb(230,62,22)" fg:x="82012" fg:w="9"/><text x="99.1025%" y="463.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::primitive::basic::array_to_page_integer (147 samples, 0.18%)</title><rect x="98.7103%" y="485" width="0.1772%" height="15" fill="rgb(225,114,35)" fg:x="81894" fg:w="147"/><text x="98.9603%" y="495.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::utils::write_def_levels (29 samples, 0.03%)</title><rect x="98.8525%" y="469" width="0.0350%" height="15" fill="rgb(215,118,42)" fg:x="82012" fg:w="29"/><text x="99.1025%" y="479.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::encoder::encode_bool (20 samples, 0.02%)</title><rect x="98.8634%" y="453" width="0.0241%" height="15" fill="rgb(243,119,21)" fg:x="82021" fg:w="20"/><text x="99.1134%" y="463.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::bitmap::encode_bool (20 samples, 0.02%)</title><rect x="98.8634%" y="437" width="0.0241%" height="15" fill="rgb(252,177,53)" fg:x="82021" fg:w="20"/><text x="99.1134%" y="447.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.06%)</title><rect x="98.8923%" y="469" width="0.0591%" height="15" fill="rgb(237,209,29)" fg:x="82045" fg:w="49"/><text x="99.1423%" y="479.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.01%)</title><rect x="98.9514%" y="469" width="0.0145%" height="15" fill="rgb(212,65,23)" fg:x="82094" fg:w="12"/><text x="99.2014%" y="479.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::utf8::basic::encode_plain (30 samples, 0.04%)</title><rect x="98.9670%" y="469" width="0.0362%" height="15" fill="rgb(230,222,46)" fg:x="82107" fg:w="30"/><text x="99.2170%" y="479.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::utf8::basic::array_to_page (106 samples, 0.13%)</title><rect x="98.8875%" y="485" width="0.1278%" height="15" fill="rgb(215,135,32)" fg:x="82041" fg:w="106"/><text x="99.1375%" y="495.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::utils::write_def_levels (10 samples, 0.01%)</title><rect x="99.0032%" y="469" width="0.0121%" height="15" fill="rgb(246,101,22)" fg:x="82137" fg:w="10"/><text x="99.2532%" y="479.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::encoder::encode_bool (10 samples, 0.01%)</title><rect x="99.0032%" y="453" width="0.0121%" height="15" fill="rgb(206,107,13)" fg:x="82137" fg:w="10"/><text x="99.2532%" y="463.50"></text></g><g><title>optiprism`parquet2::encoding::hybrid_rle::bitmap::encode_bool (10 samples, 0.01%)</title><rect x="99.0032%" y="437" width="0.0121%" height="15" fill="rgb(250,100,44)" fg:x="82137" fg:w="10"/><text x="99.2532%" y="447.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (296 samples, 0.36%)</title><rect x="98.6609%" y="517" width="0.3568%" height="15" fill="rgb(231,147,38)" fg:x="81853" fg:w="296"/><text x="98.9109%" y="527.50"></text></g><g><title>optiprism`arrow2::io::parquet::write::array_to_page_simple (296 samples, 0.36%)</title><rect x="98.6609%" y="501" width="0.3568%" height="15" fill="rgb(229,8,40)" fg:x="81853" fg:w="296"/><text x="98.9109%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (12 samples, 0.01%)</title><rect x="99.0176%" y="485" width="0.0145%" height="15" fill="rgb(221,135,30)" fg:x="82149" fg:w="12"/><text x="99.2676%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (13 samples, 0.02%)</title><rect x="99.0176%" y="501" width="0.0157%" height="15" fill="rgb(249,193,18)" fg:x="82149" fg:w="13"/><text x="99.2676%" y="511.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (377 samples, 0.45%)</title><rect x="98.6609%" y="533" width="0.4544%" height="15" fill="rgb(209,133,39)" fg:x="81853" fg:w="377"/><text x="98.9109%" y="543.50"></text></g><g><title>optiprism`parquet2::write::compression::compress (81 samples, 0.10%)</title><rect x="99.0176%" y="517" width="0.0976%" height="15" fill="rgb(232,100,14)" fg:x="82149" fg:w="81"/><text x="99.2676%" y="527.50"></text></g><g><title>optiprism`parquet2::compression::compress (63 samples, 0.08%)</title><rect x="99.0393%" y="501" width="0.0759%" height="15" fill="rgb(224,185,1)" fg:x="82167" fg:w="63"/><text x="99.2893%" y="511.50"></text></g><g><title>optiprism`snap::compress::Encoder::compress (61 samples, 0.07%)</title><rect x="99.0418%" y="485" width="0.0735%" height="15" fill="rgb(223,139,8)" fg:x="82169" fg:w="61"/><text x="99.2918%" y="495.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::array::primitive::PrimitiveArray&lt;i64&gt;&gt; (16 samples, 0.02%)</title><rect x="99.1189%" y="517" width="0.0193%" height="15" fill="rgb(232,213,38)" fg:x="82233" fg:w="16"/><text x="99.3689%" y="527.50"></text></g><g><title>optiprism`alloc::sync::Arc&lt;T,A&gt;::drop_slow (16 samples, 0.02%)</title><rect x="99.1189%" y="501" width="0.0193%" height="15" fill="rgb(207,94,22)" fg:x="82233" fg:w="16"/><text x="99.3689%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (16 samples, 0.02%)</title><rect x="99.1189%" y="485" width="0.0193%" height="15" fill="rgb(219,183,54)" fg:x="82233" fg:w="16"/><text x="99.3689%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (16 samples, 0.02%)</title><rect x="99.1189%" y="469" width="0.0193%" height="15" fill="rgb(216,185,54)" fg:x="82233" fg:w="16"/><text x="99.3689%" y="479.50"></text></g><g><title>optiprism`storage::parquet::array_to_pages_simple (402 samples, 0.48%)</title><rect x="98.6597%" y="581" width="0.4845%" height="15" fill="rgb(254,217,39)" fg:x="81852" fg:w="402"/><text x="98.9097%" y="591.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (401 samples, 0.48%)</title><rect x="98.6609%" y="565" width="0.4833%" height="15" fill="rgb(240,178,23)" fg:x="81853" fg:w="401"/><text x="98.9109%" y="575.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (401 samples, 0.48%)</title><rect x="98.6609%" y="549" width="0.4833%" height="15" fill="rgb(218,11,47)" fg:x="81853" fg:w="401"/><text x="98.9109%" y="559.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::step_by::StepBy&lt;core::ops::range::Range&lt;usize&gt;&gt;,arrow2::io::parquet::write::array_to_pages::{{closure}}&gt;&gt; (24 samples, 0.03%)</title><rect x="99.1153%" y="533" width="0.0289%" height="15" fill="rgb(218,51,51)" fg:x="82230" fg:w="24"/><text x="99.3653%" y="543.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_decoder (59 samples, 0.07%)</title><rect x="99.1538%" y="485" width="0.0711%" height="15" fill="rgb(238,126,27)" fg:x="82262" fg:w="59"/><text x="99.4038%" y="495.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::error::Error&gt; (35 samples, 0.04%)</title><rect x="99.1828%" y="469" width="0.0422%" height="15" fill="rgb(249,202,22)" fg:x="82286" fg:w="35"/><text x="99.4328%" y="479.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::binary::basic::Iter&lt;O,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.10%)</title><rect x="99.1442%" y="533" width="0.0952%" height="15" fill="rgb(254,195,49)" fg:x="82254" fg:w="79"/><text x="99.3942%" y="543.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::next (76 samples, 0.09%)</title><rect x="99.1478%" y="517" width="0.0916%" height="15" fill="rgb(208,123,14)" fg:x="82257" fg:w="76"/><text x="99.3978%" y="527.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_new_page (76 samples, 0.09%)</title><rect x="99.1478%" y="501" width="0.0916%" height="15" fill="rgb(224,200,8)" fg:x="82257" fg:w="76"/><text x="99.3978%" y="511.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::error::Error&gt; (12 samples, 0.01%)</title><rect x="99.2250%" y="485" width="0.0145%" height="15" fill="rgb(217,61,36)" fg:x="82321" fg:w="12"/><text x="99.4750%" y="495.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::boolean::basic::Iter&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="99.2491%" y="517" width="0.0121%" height="15" fill="rgb(206,35,45)" fg:x="82341" fg:w="10"/><text x="99.4991%" y="527.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_new_page (10 samples, 0.01%)</title><rect x="99.2491%" y="501" width="0.0121%" height="15" fill="rgb(217,65,33)" fg:x="82341" fg:w="10"/><text x="99.4991%" y="511.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_decoder (10 samples, 0.01%)</title><rect x="99.2491%" y="485" width="0.0121%" height="15" fill="rgb(222,158,48)" fg:x="82341" fg:w="10"/><text x="99.4991%" y="495.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::fixed_size_binary::basic::Iter&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="99.2611%" y="517" width="0.0108%" height="15" fill="rgb(254,2,54)" fg:x="82351" fg:w="9"/><text x="99.5111%" y="527.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::next (9 samples, 0.01%)</title><rect x="99.2611%" y="501" width="0.0108%" height="15" fill="rgb(250,143,38)" fg:x="82351" fg:w="9"/><text x="99.5111%" y="511.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_new_page (9 samples, 0.01%)</title><rect x="99.2611%" y="485" width="0.0108%" height="15" fill="rgb(248,25,0)" fg:x="82351" fg:w="9"/><text x="99.5111%" y="495.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::primitive::integer::IntegerIter&lt;T,I,P,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.08%)</title><rect x="99.2720%" y="517" width="0.0759%" height="15" fill="rgb(206,152,27)" fg:x="82360" fg:w="63"/><text x="99.5220%" y="527.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::next (63 samples, 0.08%)</title><rect x="99.2720%" y="501" width="0.0759%" height="15" fill="rgb(240,77,30)" fg:x="82360" fg:w="63"/><text x="99.5220%" y="511.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_new_page (63 samples, 0.08%)</title><rect x="99.2720%" y="485" width="0.0759%" height="15" fill="rgb(231,5,3)" fg:x="82360" fg:w="63"/><text x="99.5220%" y="495.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_decoder (59 samples, 0.07%)</title><rect x="99.2768%" y="469" width="0.0711%" height="15" fill="rgb(207,226,32)" fg:x="82364" fg:w="59"/><text x="99.5268%" y="479.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (174 samples, 0.21%)</title><rect x="99.1442%" y="565" width="0.2097%" height="15" fill="rgb(222,207,47)" fg:x="82254" fg:w="174"/><text x="99.3942%" y="575.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (174 samples, 0.21%)</title><rect x="99.1442%" y="549" width="0.2097%" height="15" fill="rgb(229,115,45)" fg:x="82254" fg:w="174"/><text x="99.3942%" y="559.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.11%)</title><rect x="99.2394%" y="533" width="0.1145%" height="15" fill="rgb(224,191,6)" fg:x="82333" fg:w="95"/><text x="99.4894%" y="543.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;parquet2::page::Page&gt; (21 samples, 0.03%)</title><rect x="99.3539%" y="565" width="0.0253%" height="15" fill="rgb(230,227,24)" fg:x="82428" fg:w="21"/><text x="99.6039%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (21 samples, 0.03%)</title><rect x="99.3539%" y="549" width="0.0253%" height="15" fill="rgb(228,80,19)" fg:x="82428" fg:w="21"/><text x="99.6039%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (21 samples, 0.03%)</title><rect x="99.3539%" y="533" width="0.0253%" height="15" fill="rgb(247,229,0)" fg:x="82428" fg:w="21"/><text x="99.6039%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (20 samples, 0.02%)</title><rect x="99.3792%" y="549" width="0.0241%" height="15" fill="rgb(237,194,15)" fg:x="82449" fg:w="20"/><text x="99.6292%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (20 samples, 0.02%)</title><rect x="99.3792%" y="533" width="0.0241%" height="15" fill="rgb(219,203,20)" fg:x="82449" fg:w="20"/><text x="99.6292%" y="543.50"></text></g><g><title>optiprism`storage::parquet::parquet_merger::Merger&lt;R&gt;::merge_data (1,053 samples, 1.27%)</title><rect x="98.1811%" y="597" width="1.2692%" height="15" fill="rgb(234,128,8)" fg:x="81455" fg:w="1053"/><text x="98.4311%" y="607.50"></text></g><g><title>optiprism`storage::parquet::data_page_to_array (254 samples, 0.31%)</title><rect x="99.1442%" y="581" width="0.3062%" height="15" fill="rgb(248,202,8)" fg:x="82254" fg:w="254"/><text x="99.3942%" y="591.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress (59 samples, 0.07%)</title><rect x="99.3792%" y="565" width="0.0711%" height="15" fill="rgb(206,104,37)" fg:x="82449" fg:w="59"/><text x="99.6292%" y="575.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress_buffer (39 samples, 0.05%)</title><rect x="99.4034%" y="549" width="0.0470%" height="15" fill="rgb(223,8,27)" fg:x="82469" fg:w="39"/><text x="99.6534%" y="559.50"></text></g><g><title>optiprism`parquet2::compression::decompress (37 samples, 0.04%)</title><rect x="99.4058%" y="533" width="0.0446%" height="15" fill="rgb(216,217,28)" fg:x="82471" fg:w="37"/><text x="99.6558%" y="543.50"></text></g><g><title>optiprism`snap::decompress::Decoder::decompress (37 samples, 0.04%)</title><rect x="99.4058%" y="517" width="0.0446%" height="15" fill="rgb(249,199,1)" fg:x="82471" fg:w="37"/><text x="99.6558%" y="527.50"></text></g><g><title>optiprism`storage::parquet::parquet_merger::Merger&lt;R&gt;::next_stream_index_chunk (11 samples, 0.01%)</title><rect x="99.4504%" y="597" width="0.0133%" height="15" fill="rgb(240,85,17)" fg:x="82508" fg:w="11"/><text x="99.7004%" y="607.50"></text></g><g><title>optiprism`storage::parquet::CompressedPageIterator&lt;R&gt;::next_chunk (11 samples, 0.01%)</title><rect x="99.4504%" y="581" width="0.0133%" height="15" fill="rgb(206,108,45)" fg:x="82508" fg:w="11"/><text x="99.7004%" y="591.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (11 samples, 0.01%)</title><rect x="99.4504%" y="565" width="0.0133%" height="15" fill="rgb(245,210,41)" fg:x="82508" fg:w="11"/><text x="99.7004%" y="575.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="99.4504%" y="549" width="0.0133%" height="15" fill="rgb(206,13,37)" fg:x="82508" fg:w="11"/><text x="99.7004%" y="559.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="99.4504%" y="533" width="0.0133%" height="15" fill="rgb(250,61,18)" fg:x="82508" fg:w="11"/><text x="99.7004%" y="543.50"></text></g><g><title>optiprism`&lt;parquet2::read::page::reader::PageReader&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="99.4504%" y="517" width="0.0133%" height="15" fill="rgb(235,172,48)" fg:x="82508" fg:w="11"/><text x="99.7004%" y="527.50"></text></g><g><title>optiprism`parquet2::read::page::reader::next_page (11 samples, 0.01%)</title><rect x="99.4504%" y="501" width="0.0133%" height="15" fill="rgb(249,201,17)" fg:x="82508" fg:w="11"/><text x="99.7004%" y="511.50"></text></g><g><title>optiprism`storage::compaction::Compactor::run (23,016 samples, 27.74%)</title><rect x="71.7383%" y="645" width="27.7422%" height="15" fill="rgb(219,208,6)" fg:x="59517" fg:w="23016"/><text x="71.9883%" y="655.50">optiprism`storage::compaction::Compactor::run</text></g><g><title>optiprism`storage::parquet::parquet_merger::merge (1,378 samples, 1.66%)</title><rect x="97.8195%" y="629" width="1.6610%" height="15" fill="rgb(248,31,23)" fg:x="81155" fg:w="1378"/><text x="98.0695%" y="639.50"></text></g><g><title>optiprism`storage::parquet::parquet_merger::Merger&lt;R&gt;::merge (1,320 samples, 1.59%)</title><rect x="97.8894%" y="613" width="1.5911%" height="15" fill="rgb(245,15,42)" fg:x="81213" fg:w="1320"/><text x="98.1394%" y="623.50"></text></g><g><title>optiprism`storage::parquet::parquet_merger::merge_chunks (14 samples, 0.02%)</title><rect x="99.4636%" y="597" width="0.0169%" height="15" fill="rgb(222,217,39)" fg:x="82519" fg:w="14"/><text x="99.7136%" y="607.50"></text></g><g><title>optiprism`&lt;parquet_format_safe::parquet_format::FileMetaData as parquet_format_safe::thrift::protocol::ReadThrift&gt;::read_from_in_protocol (9 samples, 0.01%)</title><rect x="99.4950%" y="213" width="0.0108%" height="15" fill="rgb(210,219,27)" fg:x="82545" fg:w="9"/><text x="99.7450%" y="223.50"></text></g><g><title>optiprism`parquet_format_safe::thrift::protocol::TInputProtocol::read_list (9 samples, 0.01%)</title><rect x="99.4950%" y="197" width="0.0108%" height="15" fill="rgb(252,166,36)" fg:x="82545" fg:w="9"/><text x="99.7450%" y="207.50"></text></g><g><title>optiprism`parquet2::read::metadata::deserialize_metadata (12 samples, 0.01%)</title><rect x="99.4938%" y="229" width="0.0145%" height="15" fill="rgb(245,132,34)" fg:x="82544" fg:w="12"/><text x="99.7438%" y="239.50"></text></g><g><title>optiprism`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="99.4926%" y="293" width="0.0169%" height="15" fill="rgb(236,54,3)" fg:x="82543" fg:w="14"/><text x="99.7426%" y="303.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="99.4926%" y="277" width="0.0169%" height="15" fill="rgb(241,173,43)" fg:x="82543" fg:w="14"/><text x="99.7426%" y="287.50"></text></g><g><title>optiprism`storage::parquet::ArrowIteratorImpl::new (14 samples, 0.02%)</title><rect x="99.4926%" y="261" width="0.0169%" height="15" fill="rgb(215,190,9)" fg:x="82543" fg:w="14"/><text x="99.7426%" y="271.50"></text></g><g><title>optiprism`parquet2::read::metadata::read_metadata (13 samples, 0.02%)</title><rect x="99.4938%" y="245" width="0.0157%" height="15" fill="rgb(242,101,16)" fg:x="82544" fg:w="13"/><text x="99.7438%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (16 samples, 0.02%)</title><rect x="99.5106%" y="213" width="0.0193%" height="15" fill="rgb(223,190,21)" fg:x="82558" fg:w="16"/><text x="99.7606%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (16 samples, 0.02%)</title><rect x="99.5106%" y="197" width="0.0193%" height="15" fill="rgb(215,228,25)" fg:x="82558" fg:w="16"/><text x="99.7606%" y="207.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;parquet2::metadata::file_metadata::FileMetaData&gt; (17 samples, 0.02%)</title><rect x="99.5106%" y="245" width="0.0205%" height="15" fill="rgb(225,36,22)" fg:x="82558" fg:w="17"/><text x="99.7606%" y="255.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="99.5106%" y="229" width="0.0205%" height="15" fill="rgb(251,106,46)" fg:x="82558" fg:w="17"/><text x="99.7606%" y="239.50"></text></g><g><title>optiprism`&lt;parquet_format_safe::parquet_format::FileMetaData as parquet_format_safe::thrift::protocol::ReadThrift&gt;::read_from_in_protocol (9 samples, 0.01%)</title><rect x="99.5311%" y="213" width="0.0108%" height="15" fill="rgb(208,90,1)" fg:x="82575" fg:w="9"/><text x="99.7811%" y="223.50"></text></g><g><title>optiprism`parquet_format_safe::thrift::protocol::TInputProtocol::read_list (9 samples, 0.01%)</title><rect x="99.5311%" y="197" width="0.0108%" height="15" fill="rgb(243,10,4)" fg:x="82575" fg:w="9"/><text x="99.7811%" y="207.50"></text></g><g><title>optiprism`parquet2::read::metadata::deserialize_metadata (14 samples, 0.02%)</title><rect x="99.5311%" y="229" width="0.0169%" height="15" fill="rgb(212,137,27)" fg:x="82575" fg:w="14"/><text x="99.7811%" y="239.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (34 samples, 0.04%)</title><rect x="99.5094%" y="293" width="0.0410%" height="15" fill="rgb(231,220,49)" fg:x="82557" fg:w="34"/><text x="99.7594%" y="303.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 0.04%)</title><rect x="99.5094%" y="277" width="0.0410%" height="15" fill="rgb(237,96,20)" fg:x="82557" fg:w="34"/><text x="99.7594%" y="287.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.04%)</title><rect x="99.5094%" y="261" width="0.0410%" height="15" fill="rgb(239,229,30)" fg:x="82557" fg:w="34"/><text x="99.7594%" y="271.50"></text></g><g><title>optiprism`parquet2::read::metadata::read_metadata (16 samples, 0.02%)</title><rect x="99.5311%" y="245" width="0.0193%" height="15" fill="rgb(219,65,33)" fg:x="82575" fg:w="16"/><text x="99.7811%" y="255.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::binary::basic::finish (9 samples, 0.01%)</title><rect x="99.5516%" y="133" width="0.0108%" height="15" fill="rgb(243,134,7)" fg:x="82592" fg:w="9"/><text x="99.8016%" y="143.50"></text></g><g><title>optiprism`arrow2::array::utf8::Utf8Array&lt;O&gt;::try_new (9 samples, 0.01%)</title><rect x="99.5516%" y="117" width="0.0108%" height="15" fill="rgb(216,177,54)" fg:x="82592" fg:w="9"/><text x="99.8016%" y="127.50"></text></g><g><title>optiprism`arrow2::array::specification::try_check_utf8 (9 samples, 0.01%)</title><rect x="99.5516%" y="101" width="0.0108%" height="15" fill="rgb(211,160,20)" fg:x="82592" fg:w="9"/><text x="99.8016%" y="111.50"></text></g><g><title>optiprism`&lt;parquet2::read::compression::BasicDecompressor&lt;I&gt; as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (15 samples, 0.02%)</title><rect x="99.5625%" y="117" width="0.0181%" height="15" fill="rgb(239,85,39)" fg:x="82601" fg:w="15"/><text x="99.8125%" y="127.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress (14 samples, 0.02%)</title><rect x="99.5637%" y="101" width="0.0169%" height="15" fill="rgb(232,125,22)" fg:x="82602" fg:w="14"/><text x="99.8137%" y="111.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress_buffer (14 samples, 0.02%)</title><rect x="99.5637%" y="85" width="0.0169%" height="15" fill="rgb(244,57,34)" fg:x="82602" fg:w="14"/><text x="99.8137%" y="95.50"></text></g><g><title>optiprism`parquet2::compression::decompress (11 samples, 0.01%)</title><rect x="99.5673%" y="69" width="0.0133%" height="15" fill="rgb(214,203,32)" fg:x="82605" fg:w="11"/><text x="99.8173%" y="79.50"></text></g><g><title>optiprism`snap::decompress::Decoder::decompress (11 samples, 0.01%)</title><rect x="99.5673%" y="53" width="0.0133%" height="15" fill="rgb(207,58,43)" fg:x="82605" fg:w="11"/><text x="99.8173%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (26 samples, 0.03%)</title><rect x="99.5805%" y="101" width="0.0313%" height="15" fill="rgb(215,193,15)" fg:x="82616" fg:w="26"/><text x="99.8305%" y="111.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_decoder (56 samples, 0.07%)</title><rect x="99.6179%" y="101" width="0.0675%" height="15" fill="rgb(232,15,44)" fg:x="82647" fg:w="56"/><text x="99.8679%" y="111.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::error::Error&gt; (26 samples, 0.03%)</title><rect x="99.6541%" y="85" width="0.0313%" height="15" fill="rgb(212,3,48)" fg:x="82677" fg:w="26"/><text x="99.9041%" y="95.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::binary::basic::Iter&lt;O,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 0.14%)</title><rect x="99.5516%" y="149" width="0.1446%" height="15" fill="rgb(218,128,7)" fg:x="82592" fg:w="120"/><text x="99.8016%" y="159.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::next (111 samples, 0.13%)</title><rect x="99.5625%" y="133" width="0.1338%" height="15" fill="rgb(226,216,39)" fg:x="82601" fg:w="111"/><text x="99.8125%" y="143.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_new_page (96 samples, 0.12%)</title><rect x="99.5805%" y="117" width="0.1157%" height="15" fill="rgb(243,47,51)" fg:x="82616" fg:w="96"/><text x="99.8305%" y="127.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;arrow2::error::Error&gt; (9 samples, 0.01%)</title><rect x="99.6854%" y="101" width="0.0108%" height="15" fill="rgb(241,183,40)" fg:x="82703" fg:w="9"/><text x="99.9354%" y="111.50"></text></g><g><title>optiprism`&lt;parquet2::read::page::reader::PageReader&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="99.6963%" y="85" width="0.0157%" height="15" fill="rgb(231,217,32)" fg:x="82712" fg:w="13"/><text x="99.9463%" y="95.50"></text></g><g><title>optiprism`parquet2::read::page::reader::next_page (13 samples, 0.02%)</title><rect x="99.6963%" y="69" width="0.0157%" height="15" fill="rgb(229,61,38)" fg:x="82712" fg:w="13"/><text x="99.9463%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.02%)</title><rect x="99.6963%" y="53" width="0.0157%" height="15" fill="rgb(225,210,5)" fg:x="82712" fg:w="13"/><text x="99.9463%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.03%)</title><rect x="99.7131%" y="53" width="0.0265%" height="15" fill="rgb(231,79,45)" fg:x="82726" fg:w="22"/><text x="99.9631%" y="63.50"></text></g><g><title>libsystem_platform.dylib`__bzero (22 samples, 0.03%)</title><rect x="99.7131%" y="37" width="0.0265%" height="15" fill="rgb(224,100,7)" fg:x="82726" fg:w="22"/><text x="99.9631%" y="47.50"></text></g><g><title>optiprism`&lt;parquet2::read::compression::BasicDecompressor&lt;I&gt; as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (150 samples, 0.18%)</title><rect x="99.6963%" y="101" width="0.1808%" height="15" fill="rgb(241,198,18)" fg:x="82712" fg:w="150"/><text x="99.9463%" y="111.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress (137 samples, 0.17%)</title><rect x="99.7119%" y="85" width="0.1651%" height="15" fill="rgb(252,97,53)" fg:x="82725" fg:w="137"/><text x="99.9619%" y="95.50"></text></g><g><title>optiprism`parquet2::read::compression::decompress_buffer (136 samples, 0.16%)</title><rect x="99.7131%" y="69" width="0.1639%" height="15" fill="rgb(220,88,7)" fg:x="82726" fg:w="136"/><text x="99.9631%" y="79.50"></text></g><g><title>optiprism`parquet2::compression::decompress (114 samples, 0.14%)</title><rect x="99.7396%" y="53" width="0.1374%" height="15" fill="rgb(213,176,14)" fg:x="82748" fg:w="114"/><text x="99.9896%" y="63.50"></text></g><g><title>optiprism`snap::decompress::Decoder::decompress (114 samples, 0.14%)</title><rect x="99.7396%" y="37" width="0.1374%" height="15" fill="rgb(246,73,7)" fg:x="82748" fg:w="114"/><text x="99.9896%" y="47.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::file::FileReader&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (306 samples, 0.37%)</title><rect x="99.5516%" y="245" width="0.3688%" height="15" fill="rgb(245,64,36)" fg:x="82592" fg:w="306"/><text x="99.8016%" y="255.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::row_group::RowGroupDeserializer as core::iter::traits::iterator::Iterator&gt;::next (306 samples, 0.37%)</title><rect x="99.5516%" y="229" width="0.3688%" height="15" fill="rgb(245,80,10)" fg:x="82592" fg:w="306"/><text x="99.8016%" y="239.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (306 samples, 0.37%)</title><rect x="99.5516%" y="213" width="0.3688%" height="15" fill="rgb(232,107,50)" fg:x="82592" fg:w="306"/><text x="99.8016%" y="223.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (306 samples, 0.37%)</title><rect x="99.5516%" y="197" width="0.3688%" height="15" fill="rgb(253,3,0)" fg:x="82592" fg:w="306"/><text x="99.8016%" y="207.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (306 samples, 0.37%)</title><rect x="99.5516%" y="181" width="0.3688%" height="15" fill="rgb(212,99,53)" fg:x="82592" fg:w="306"/><text x="99.8016%" y="191.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (306 samples, 0.37%)</title><rect x="99.5516%" y="165" width="0.3688%" height="15" fill="rgb(249,111,54)" fg:x="82592" fg:w="306"/><text x="99.8016%" y="175.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (186 samples, 0.22%)</title><rect x="99.6963%" y="149" width="0.2242%" height="15" fill="rgb(249,55,30)" fg:x="82712" fg:w="186"/><text x="99.9463%" y="159.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::primitive::integer::IntegerIter&lt;T,I,P,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (186 samples, 0.22%)</title><rect x="99.6963%" y="133" width="0.2242%" height="15" fill="rgb(237,47,42)" fg:x="82712" fg:w="186"/><text x="99.9463%" y="143.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::next (186 samples, 0.22%)</title><rect x="99.6963%" y="117" width="0.2242%" height="15" fill="rgb(211,20,18)" fg:x="82712" fg:w="186"/><text x="99.9463%" y="127.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::deserialize::utils::extend_from_new_page (36 samples, 0.04%)</title><rect x="99.8771%" y="101" width="0.0434%" height="15" fill="rgb(231,203,46)" fg:x="82862" fg:w="36"/><text x="100.1271%" y="111.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::deserialize::primitive::integer::IntDecoder&lt;T,P,F&gt; as arrow2::io::parquet::read::deserialize::utils::Decoder&gt;::extend_from_state (35 samples, 0.04%)</title><rect x="99.8783%" y="85" width="0.0422%" height="15" fill="rgb(237,142,3)" fg:x="82863" fg:w="35"/><text x="100.1283%" y="95.50"></text></g><g><title>optiprism`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.04%)</title><rect x="99.8783%" y="69" width="0.0422%" height="15" fill="rgb(241,107,1)" fg:x="82863" fg:w="35"/><text x="100.1283%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`read (20 samples, 0.02%)</title><rect x="99.9265%" y="101" width="0.0241%" height="15" fill="rgb(229,83,13)" fg:x="82903" fg:w="20"/><text x="100.1765%" y="111.50"></text></g><g><title>optiprism`storage::parquet::arrow_merger::MergingIterator::next_stream_chunk (332 samples, 0.40%)</title><rect x="99.5516%" y="293" width="0.4002%" height="15" fill="rgb(241,91,40)" fg:x="82592" fg:w="332"/><text x="99.8016%" y="303.50"></text></g><g><title>optiprism`&lt;storage::parquet::ArrowIteratorImpl as core::iter::traits::iterator::Iterator&gt;::next (332 samples, 0.40%)</title><rect x="99.5516%" y="277" width="0.4002%" height="15" fill="rgb(225,3,45)" fg:x="82592" fg:w="332"/><text x="99.8016%" y="287.50"></text></g><g><title>optiprism`&lt;arrow2::io::parquet::read::file::FileReader&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (332 samples, 0.40%)</title><rect x="99.5516%" y="261" width="0.4002%" height="15" fill="rgb(244,223,14)" fg:x="82592" fg:w="332"/><text x="99.8016%" y="271.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::file::FileReader&lt;R&gt;::next_row_group (26 samples, 0.03%)</title><rect x="99.9204%" y="245" width="0.0313%" height="15" fill="rgb(224,124,37)" fg:x="82898" fg:w="26"/><text x="100.1704%" y="255.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::row_group::read_columns_many (22 samples, 0.03%)</title><rect x="99.9253%" y="229" width="0.0265%" height="15" fill="rgb(251,171,30)" fg:x="82902" fg:w="22"/><text x="100.1753%" y="239.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (22 samples, 0.03%)</title><rect x="99.9253%" y="213" width="0.0265%" height="15" fill="rgb(236,46,54)" fg:x="82902" fg:w="22"/><text x="100.1753%" y="223.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.03%)</title><rect x="99.9253%" y="197" width="0.0265%" height="15" fill="rgb(245,213,5)" fg:x="82902" fg:w="22"/><text x="100.1753%" y="207.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.03%)</title><rect x="99.9253%" y="181" width="0.0265%" height="15" fill="rgb(230,144,27)" fg:x="82902" fg:w="22"/><text x="100.1753%" y="191.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (22 samples, 0.03%)</title><rect x="99.9253%" y="165" width="0.0265%" height="15" fill="rgb(220,86,6)" fg:x="82902" fg:w="22"/><text x="100.1753%" y="175.50"></text></g><g><title>optiprism`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (22 samples, 0.03%)</title><rect x="99.9253%" y="149" width="0.0265%" height="15" fill="rgb(240,20,13)" fg:x="82902" fg:w="22"/><text x="100.1753%" y="159.50"></text></g><g><title>optiprism`arrow2::io::parquet::read::row_group::_read_single_column (22 samples, 0.03%)</title><rect x="99.9253%" y="133" width="0.0265%" height="15" fill="rgb(217,89,34)" fg:x="82902" fg:w="22"/><text x="100.1753%" y="143.50"></text></g><g><title>optiprism`std::io::default_read_to_end (21 samples, 0.03%)</title><rect x="99.9265%" y="117" width="0.0253%" height="15" fill="rgb(229,13,5)" fg:x="82903" fg:w="21"/><text x="100.1765%" y="127.50"></text></g><g><title>optiprism`core::iter::adapters::try_process (386 samples, 0.47%)</title><rect x="99.4901%" y="437" width="0.4653%" height="15" fill="rgb(244,67,35)" fg:x="82541" fg:w="386"/><text x="99.7401%" y="447.50"></text></g><g><title>optiprism`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (386 samples, 0.47%)</title><rect x="99.4901%" y="421" width="0.4653%" height="15" fill="rgb(221,40,2)" fg:x="82541" fg:w="386"/><text x="99.7401%" y="431.50"></text></g><g><title>optiprism`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (386 samples, 0.47%)</title><rect x="99.4901%" y="405" width="0.4653%" height="15" fill="rgb(237,157,21)" fg:x="82541" fg:w="386"/><text x="99.7401%" y="415.50"></text></g><g><title>optiprism`query::physical_plan::segmented_aggregate::Runner::new (386 samples, 0.47%)</title><rect x="99.4901%" y="389" width="0.4653%" height="15" fill="rgb(222,94,11)" fg:x="82541" fg:w="386"/><text x="99.7401%" y="399.50"></text></g><g><title>optiprism`&lt;datafusion_physical_plan::coalesce_batches::CoalesceBatchesExec as datafusion_physical_plan::ExecutionPlan&gt;::execute (386 samples, 0.47%)</title><rect x="99.4901%" y="373" width="0.4653%" height="15" fill="rgb(249,113,6)" fg:x="82541" fg:w="386"/><text x="99.7401%" y="383.50"></text></g><g><title>optiprism`&lt;datafusion_physical_plan::filter::FilterExec as datafusion_physical_plan::ExecutionPlan&gt;::execute (386 samples, 0.47%)</title><rect x="99.4901%" y="357" width="0.4653%" height="15" fill="rgb(238,137,36)" fg:x="82541" fg:w="386"/><text x="99.7401%" y="367.50"></text></g><g><title>optiprism`&lt;query::physical_plan::local::LocalExec as datafusion_physical_plan::ExecutionPlan&gt;::execute (386 samples, 0.47%)</title><rect x="99.4901%" y="341" width="0.4653%" height="15" fill="rgb(210,102,26)" fg:x="82541" fg:w="386"/><text x="99.7401%" y="351.50"></text></g><g><title>optiprism`storage::db::OptiDBImpl::scan_partition (386 samples, 0.47%)</title><rect x="99.4901%" y="325" width="0.4653%" height="15" fill="rgb(218,30,30)" fg:x="82541" fg:w="386"/><text x="99.7401%" y="335.50"></text></g><g><title>optiprism`storage::parquet::arrow_merger::MergingIterator::new (384 samples, 0.46%)</title><rect x="99.4926%" y="309" width="0.4629%" height="15" fill="rgb(214,67,26)" fg:x="82543" fg:w="384"/><text x="99.7426%" y="319.50"></text></g><g><title>optiprism`datafusion_physical_plan::repartition::RepartitionExec::pull_from_input::_{{closure}} (390 samples, 0.47%)</title><rect x="99.4889%" y="469" width="0.4701%" height="15" fill="rgb(251,9,53)" fg:x="82540" fg:w="390"/><text x="99.7389%" y="479.50"></text></g><g><title>optiprism`&lt;query::physical_plan::segmented_aggregate::SegmentedAggregateExec as datafusion_physical_plan::ExecutionPlan&gt;::execute (390 samples, 0.47%)</title><rect x="99.4889%" y="453" width="0.4701%" height="15" fill="rgb(228,204,25)" fg:x="82540" fg:w="390"/><text x="99.7389%" y="463.50"></text></g><g><title>optiprism`core::ptr::drop_in_place&lt;query::physical_plan::pivot::PivotStream&gt; (18 samples, 0.02%)</title><rect x="99.9614%" y="453" width="0.0217%" height="15" fill="rgb(207,153,8)" fg:x="82932" fg:w="18"/><text x="100.2114%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (18 samples, 0.02%)</title><rect x="99.9614%" y="437" width="0.0217%" height="15" fill="rgb(242,9,16)" fg:x="82932" fg:w="18"/><text x="100.2114%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`madvise (18 samples, 0.02%)</title><rect x="99.9614%" y="421" width="0.0217%" height="15" fill="rgb(217,211,10)" fg:x="82932" fg:w="18"/><text x="100.2114%" y="431.50"></text></g><g><title>optiprism`datafusion_physical_plan::stream::RecordBatchReceiverStreamBuilder::run_input::_{{closure}} (21 samples, 0.03%)</title><rect x="99.9590%" y="469" width="0.0253%" height="15" fill="rgb(219,228,52)" fg:x="82930" fg:w="21"/><text x="100.2090%" y="479.50"></text></g><g><title>optiprism`std::sys_common::backtrace::__rust_begin_short_backtrace (26,762 samples, 32.26%)</title><rect x="67.7282%" y="661" width="32.2574%" height="15" fill="rgb(231,92,29)" fg:x="56190" fg:w="26762"/><text x="67.9782%" y="671.50">optiprism`std::sys_common::backtrace::__rust_begin_s..</text></g><g><title>optiprism`tokio::runtime::blocking::pool::Inner::run (416 samples, 0.50%)</title><rect x="99.4841%" y="645" width="0.5014%" height="15" fill="rgb(232,8,23)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="655.50"></text></g><g><title>optiprism`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (416 samples, 0.50%)</title><rect x="99.4841%" y="629" width="0.5014%" height="15" fill="rgb(216,211,34)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="639.50"></text></g><g><title>optiprism`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (416 samples, 0.50%)</title><rect x="99.4841%" y="613" width="0.5014%" height="15" fill="rgb(236,151,0)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="623.50"></text></g><g><title>optiprism`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (416 samples, 0.50%)</title><rect x="99.4841%" y="597" width="0.5014%" height="15" fill="rgb(209,168,3)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="607.50"></text></g><g><title>optiprism`tokio::runtime::scheduler::multi_thread::worker::run (416 samples, 0.50%)</title><rect x="99.4841%" y="581" width="0.5014%" height="15" fill="rgb(208,129,28)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="591.50"></text></g><g><title>optiprism`tokio::runtime::context::runtime::enter_runtime (416 samples, 0.50%)</title><rect x="99.4841%" y="565" width="0.5014%" height="15" fill="rgb(229,78,22)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="575.50"></text></g><g><title>optiprism`tokio::runtime::context::set_scheduler (416 samples, 0.50%)</title><rect x="99.4841%" y="549" width="0.5014%" height="15" fill="rgb(228,187,13)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="559.50"></text></g><g><title>optiprism`tokio::runtime::scheduler::multi_thread::worker::Context::run (416 samples, 0.50%)</title><rect x="99.4841%" y="533" width="0.5014%" height="15" fill="rgb(240,119,24)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="543.50"></text></g><g><title>optiprism`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (416 samples, 0.50%)</title><rect x="99.4841%" y="517" width="0.5014%" height="15" fill="rgb(209,194,42)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="527.50"></text></g><g><title>optiprism`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (416 samples, 0.50%)</title><rect x="99.4841%" y="501" width="0.5014%" height="15" fill="rgb(247,200,46)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="511.50"></text></g><g><title>optiprism`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (416 samples, 0.50%)</title><rect x="99.4841%" y="485" width="0.5014%" height="15" fill="rgb(218,76,16)" fg:x="82536" fg:w="416"/><text x="99.7341%" y="495.50"></text></g><g><title>optiprism`core::ops::function::FnOnce::call_once{{vtable.shim}} (26,763 samples, 32.26%)</title><rect x="67.7282%" y="677" width="32.2586%" height="15" fill="rgb(225,21,48)" fg:x="56190" fg:w="26763"/><text x="67.9782%" y="687.50">optiprism`core::ops::function::FnOnce::call_once{{vt..</text></g><g><title>libsystem_pthread.dylib`thread_start (26,765 samples, 32.26%)</title><rect x="67.7270%" y="725" width="32.2610%" height="15" fill="rgb(239,223,50)" fg:x="56189" fg:w="26765"/><text x="67.9770%" y="735.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (26,765 samples, 32.26%)</title><rect x="67.7270%" y="709" width="32.2610%" height="15" fill="rgb(244,45,21)" fg:x="56189" fg:w="26765"/><text x="67.9770%" y="719.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>optiprism`std::sys::unix::thread::Thread::new::thread_start (26,764 samples, 32.26%)</title><rect x="67.7282%" y="693" width="32.2598%" height="15" fill="rgb(232,33,43)" fg:x="56190" fg:w="26764"/><text x="67.9782%" y="703.50">optiprism`std::sys::unix::thread::Thread::new::threa..</text></g><g><title>all (82,964 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(209,8,3)" fg:x="0" fg:w="82964"/><text x="0.2500%" y="751.50"></text></g></svg></svg>