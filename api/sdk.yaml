openapi: 3.0.0
info:
  version: 1.0.0
  title: OptiPrism
  termsOfService: https://optiprism.io/terms/
  contact:
    email: api@optiprism.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/optiprism/optiprism/1.0.0
  - description: OptiPrism SDK server
    url: /df
externalDocs:
  description: Find out more about OptiPrism api
  url: https://dev.optiprism.io/api
paths:
  /projects/{project_id}/track/event:
    post:
      summary: Track event
      operationId: trackEvent
      tags:
        - event
      parameters:
        - $ref: '#/components/parameters/ProjectID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackEventRequest'
      responses:
        '200':
          description: response
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /projects/{project_id}/track/page:
    post:
      summary: Track page
      operationId: trackPage
      tags:
        - event
      parameters:
        - $ref: '#/components/parameters/ProjectID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackPageRequest'
      responses:
        '200':
          description: response
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /projects/{project_id}/track/click:
    post:
      summary: Track click
      operationId: trackClick
      tags:
        - event
      parameters:
        - $ref: '#/components/parameters/ProjectID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackClickRequest'
      responses:
        '200':
          description: response
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /projects/{project_id}/track/user/{user_id}/identify:
    post:
      summary: Identify user
      operationId: identifyUser
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/ProjectID'
        - name: user_id
          in: path
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentifyUserRequest'
      responses:
        '200':
          description: response
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /projects/{project_id}/track/user/{user_id}:
    put:
      summary: Update user
      operationId: updateUser
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/ProjectID'
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: response
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /projects/{project_id}/track/user/{user_id}/alias:
    post:
      summary: Make an alias
      operationId: aliasUser
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/ProjectID'
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AliasUserRequest'
      responses:
        '200':
          description: response
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /projects/{project_id}/track/user/{user_id}/opt-in:
    post:
      summary: Opt in user
      operationId: optInUser
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/ProjectID'
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: response
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /projects/{project_id}/track/user/{user_id}/opt-out:
    post:
      summary: Out out user
      operationId: outOutUser
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/ProjectID'
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: response
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /projects/{project_id}/track/group/{group_id}/identify:
    post:
      summary: Identify group
      operationId: identifyGroup
      tags:
        - group
      parameters:
        - $ref: '#/components/parameters/ProjectID'
        - name: group_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentifyGroupRequest'
      responses:
        '200':
          description: response
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /projects/{project_id}/track/group/{group_id}:
    put:
      summary: Update group
      operationId: updateGroup
      tags:
        - group
      parameters:
        - $ref: '#/components/parameters/ProjectID'
        - name: group_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
      responses:
        '200':
          description: response
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

components:
  parameters:
    ProjectID:
      name: project_id
      in: path
      required: true
      schema:
        type: number
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Internal:
      description: Internal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServiceUnavailable:
      description: ServiceUnavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    TrackEventRequest:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/TrackContext'
        eventName:
          type: string
        properties:
          type: object
          additionalProperties:
            type: [ null,number,string,boolean ]
    TrackPageRequest:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/TrackContext'
        path:
          type: string
        referer:
          type: string
        search:
          type: string
        title:
          type: string
        url:
          type: string
        properties:
          type: object
          additionalProperties:
            type: [ null,number,string,boolean ]
    TrackClickRequest:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/TrackContext'
        element:
          type: string
        name:
          type: string
        id:
          type: string
        class:
          type: string
        properties:
          type: object
          additionalProperties:
            type: [ null,number,string,boolean ]

    IdentifyUserRequest:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/TrackContext'
        properties:
          type: object
          additionalProperties:
            type: [ null,number,string,boolean ]
    AliasUserRequest:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/TrackContext'
        alias:
          type: string
    UpdateUserRequest:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/TrackContext'
        operations:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/PropertyOpAppendToList'
              - $ref: '#/components/schemas/PropertyOpRemoveFromList'
              - $ref: '#/components/schemas/PropertyOpIncrement'
              - $ref: '#/components/schemas/PropertyOpDecrement'
              - $ref: '#/components/schemas/PropertyOpSet'
              - $ref: '#/components/schemas/PropertyOpSetOnce'
              - $ref: '#/components/schemas/PropertyOpUnset'

    IdentifyGroupRequest:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/TrackContext'
        properties:
          type: object
          additionalProperties:
            type: [ null,number,string,boolean ]
    UpdateGroupRequest:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/TrackContext'
        operations:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/PropertyOpAppendToList'
              - $ref: '#/components/schemas/PropertyOpRemoveFromList'
              - $ref: '#/components/schemas/PropertyOpIncrement'
              - $ref: '#/components/schemas/PropertyOpDecrement'
              - $ref: '#/components/schemas/PropertyOpSet'
              - $ref: '#/components/schemas/PropertyOpSetOnce'
              - $ref: '#/components/schemas/PropertyOpUnset'

    PropertyOpAppendToList:
      type: object
      properties:
        appendToList:
          type: object
          additionalProperties:
            type: [ null,number,string,boolean ]
    PropertyOpRemoveFromList:
      type: object
      properties:
        remveFromList:
          type: object
          additionalProperties:
            type: [ null,number,string,boolean ]
    PropertyOpIncrement:
      type: object
      properties:
        increment:
          type: object
          additionalProperties:
            type: number
    PropertyOpDecrement:
      type: object
      properties:
        decrement:
          type: object
          additionalProperties:
            type: number
    PropertyOpSet:
      type: object
      properties:
        set:
          type: object
          additionalProperties:
            type: [ null,number,string,boolean ]
    PropertyOpSetOnce:
      type: object
      properties:
        setOnce:
          type: object
          additionalProperties:
            type: [ null,number,string,boolean ]
    PropertyOpUnset:
      type: object
      properties:
        unset:
          type: array
          items:
            type: string
    TrackContext:
      type: object
      properties:
        anonymousId:
          type: string
        userId:
          type: string
        timestamp:
          type: string
          format: date-time
        app:
          type: object
          properties:
            name:
              type: string
            version:
              type: string
            build:
              type: string
            namespace:
              type: string
        campaign:
          type: object
          properties:
            name:
              type: string
            source:
              type: string
            medium:
              type: string
            term:
              type: string
            content:
              type: string
        device:
          type: object
          properties:
            id:
              type: string
            vendor:
              type: string
            model:
              type: string
            name:
              type: string
            platform:
              type: string
        ip:
          type: string
        userAgent:
          type: string
        library:
          type: object
          properties:
            version:
              type: string
        locale:
          type: string
        location:
          type: object
          properties:
            city:
              type: string
            country:
              type: string
        network:
          type: object
          properties:
            carrier:
              type: string
            isBluetooth:
              type: boolean
            isCellular:
              type: boolean
            isWifi:
              type: boolean
        os:
          type: object
          properties:
            name:
              type: string
            version:
              type: string
        page:
          type: object
          properties:
            path:
              type: string
            referer:
              type: string
            search:
              type: string
            title:
              type: string
            url:
              type: string
        screen:
          type: object
          properties:
            width:
              type: integer
            height:
              type: integer
            density:
              type: integer
        groupType:
          type: string
        groupId:
          type: string
        timezone:
          type: string